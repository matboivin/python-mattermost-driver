window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"scrapermost": {"fullname": "scrapermost", "modulename": "scrapermost", "kind": "module", "doc": "<p><a href=\"https://opensource.org/licenses/MIT\"><img src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" alt=\"License: MIT\" /></a></p>\n\n<h1 id=\"scrapermost\">Scrapermost</h1>\n\n<p>Python library to use <a href=\"https://api.mattermost.com/\">Mattermost APIv4</a>.</p>\n\n<p>This repository is a fork of <a href=\"https://github.com/Vaelor/python-mattermost-driver\">Python Mattermost Driver</a>.</p>\n\n<p><br /></p>\n\n<h2 id=\"table-of-contents\">Table of Contents</h2>\n\n<ol>\n<li><a href=\"#getting-started\">Getting Started</a>\n<ol>\n<li><a href=\"#requirements\">Requirements</a></li>\n<li><a href=\"#installation\">Installation</a></li>\n</ol></li>\n<li><a href=\"#usage\">Usage</a>\n<ol>\n<li><a href=\"#initialize-client-and-connect-to-a-mattermost-server\">Initialize client and connect to a Mattermost server</a></li>\n<li><a href=\"#use-the-web-service-api\">Use the Web service API</a></li>\n<li><a href=\"#connect-to-the-websocket-api\">Connect to the Websocket API</a></li>\n<li><a href=\"#disconnect-websocket\">Disconnect websocket</a></li>\n</ol></li>\n<li><a href=\"#license\">License</a></li>\n<li><a href=\"#acknowledgments\">Acknowledgments</a></li>\n</ol>\n\n<p><br /></p>\n\n<h2 id=\"getting-started\">Getting Started</h2>\n\n<h3 id=\"requirements\">Requirements</h3>\n\n<ul>\n<li>Python 3.10 or greater</li>\n<li><a href=\"https://python-poetry.org/\"><code>poetry</code></a></li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"installation\">Installation</h3>\n\n<p>As this project is not published to Pypi yet, follow the guidelines below.</p>\n\n<ol>\n<li><p>Clone the repository and change it to your working directory.</p></li>\n<li><p>Install the project:</p></li>\n</ol>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>poetry<span class=\"w\"> </span>install\n</code></pre>\n</div>\n\n<p><br /></p>\n\n<h2 id=\"usage\">Usage</h2>\n\n<ol>\n<li>Activate the virtual environment:</li>\n</ol>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span><span class=\"nb\">source</span><span class=\"w\"> </span><span class=\"sb\">`</span>poetry<span class=\"w\"> </span>env<span class=\"w\"> </span>info<span class=\"w\"> </span>--path<span class=\"sb\">`</span>/bin/activate\n</code></pre>\n</div>\n\n<ol start=\"2\">\n<li>Use it as a library.</li>\n</ol>\n\n<p><br /></p>\n\n<h3 id=\"initialize-client-and-connect-to-a-mattermost-server\">Initialize client and connect to a Mattermost server</h3>\n\n<p>A <a href=\"https://api.mattermost.com/#tag/drivers\">Driver</a>, or client, is an object used to interact with the Mattermost API.</p>\n\n<p>At least the following options must be provided as a dict:</p>\n\n<ul>\n<li><code>login_id</code> (user account's email address or username) and <code>password</code></li>\n<li>or <code>token</code></li>\n</ul>\n\n<p><strong>Full list of Driver options <a href=\"scrapermost/driver/options.py\">here</a>.</strong></p>\n\n<p>Example with synchronous driver:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">scrapermost</span> <span class=\"kn\">import</span> <span class=\"n\">Driver</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">init_driver</span><span class=\"p\">(</span><span class=\"n\">server_host</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Driver</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">Driver</span><span class=\"p\">(</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;hostname&quot;</span><span class=\"p\">:</span> <span class=\"n\">server_host</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;login_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">email</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;password&quot;</span><span class=\"p\">:</span> <span class=\"n\">password</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;scheme&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;port&quot;</span><span class=\"p\">:</span> <span class=\"mi\">443</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">connect_driver_to_server</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">:</span> <span class=\"n\">Driver</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p>Example with asynchronous driver:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">scrapermost</span> <span class=\"kn\">import</span> <span class=\"n\">AsyncDriver</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">init_driver</span><span class=\"p\">(</span><span class=\"n\">server_host</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">AsyncDriver</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">AsyncDriver</span><span class=\"p\">(</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;hostname&quot;</span><span class=\"p\">:</span> <span class=\"n\">server_host</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;login_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">email</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;password&quot;</span><span class=\"p\">:</span> <span class=\"n\">password</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;scheme&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;port&quot;</span><span class=\"p\">:</span> <span class=\"mi\">443</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">connect_driver_to_server</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">:</span> <span class=\"n\">AsyncDriver</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p><br /></p>\n\n<h3 id=\"use-the-web-service-api\">Use the Web service API</h3>\n\n<p>You can make api calls by using calling <code>Driver.endpointofchoice</code>. For example, if you want to get a user's data (<code>http://your-mattermost-url.com/api/v4/users/{user_id}</code>), you would use <code>Driver.users.get_user(user_id)</code>. The returned data will be either in JSON format or the raw response.</p>\n\n<p>Example with asynchronous driver:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span>\n\n<span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">get_user</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;me&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p><br /></p>\n\n<h3 id=\"connect-to-the-websocket-api\">Connect to the Websocket API</h3>\n\n<p>It is possible to use a <a href=\"scrapermost/driver/websocket.py\">websocket</a> to listen to Mattermost events (<a href=\"https://api.mattermost.com/#tag/WebSocket\">event list here</a>).</p>\n\n<p>Create a function to handle every Mattermost websocket event:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Dict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">scrapermost.events</span> <span class=\"kn\">import</span> <span class=\"n\">Posted</span>\n\n<span class=\"c1\"># Minimalist event handler example</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">my_event_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;event&quot;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;posted&quot;</span><span class=\"p\">:</span>  <span class=\"c1\"># event is a new post</span>\n        <span class=\"n\">post</span><span class=\"p\">:</span> <span class=\"n\">Posted</span> <span class=\"o\">=</span> <span class=\"n\">Posted</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span>\n\n        <span class=\"o\">...</span>\n</code></pre>\n</div>\n\n<p>Assuming <code>Driver.login()</code> was called, initialize the websocket connection to the Mattermost server using <code>Driver.init_websocket()</code>.</p>\n\n<p>Example with synchronous driver:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">init_websocket</span><span class=\"p\">(</span><span class=\"n\">my_event_handler</span><span class=\"p\">,</span> <span class=\"n\">data_format</span><span class=\"o\">=</span><span class=\"s2\">&quot;json&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Example with asynchronous driver:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">await</span> <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">init_websocket</span><span class=\"p\">(</span><span class=\"n\">my_event_handler</span><span class=\"p\">,</span> <span class=\"n\">data_format</span><span class=\"o\">=</span><span class=\"s2\">&quot;json&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p><br /></p>\n\n<h3 id=\"disconnect-websocket\">Disconnect websocket</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">disconnect_websocket</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p><br /></p>\n\n<h2 id=\"license\">License</h2>\n\n<p>Distributed under the MIT License. See <a href=\"LICENSE\"><code>LICENSE</code></a> for more information.</p>\n\n<p><br /></p>\n\n<h2 id=\"acknowledgments\">Acknowledgments</h2>\n\n<p>Original project <a href=\"https://github.com/Vaelor/python-mattermost-driver\">Python Mattermost Driver</a> (<a href=\"https://vaelor.github.io/python-mattermost-driver/\">documentation here</a>) by Christian Pl\u00fcmer.</p>\n"}, "scrapermost.classes": {"fullname": "scrapermost.classes", "modulename": "scrapermost.classes", "kind": "module", "doc": "<p>Object classes.</p>\n"}, "scrapermost.classes.EmbedMetadata": {"fullname": "scrapermost.classes.EmbedMetadata", "modulename": "scrapermost.classes", "qualname": "EmbedMetadata", "kind": "class", "doc": "<p>Class defining an embedded link.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>type : str\n    The embed's type.\nurl : str\n    The embed's URL.\ndata : dict\n    TODO: Add description.</p>\n"}, "scrapermost.classes.EmbedMetadata.__init__": {"fullname": "scrapermost.classes.EmbedMetadata.__init__", "modulename": "scrapermost.classes", "qualname": "EmbedMetadata.__init__", "kind": "function", "doc": "<p>Initialize the attributes.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>attr : dict\n    The attributes as a dict.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>KeyError\n    If a key is missing from event.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">attr</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "scrapermost.classes.FileMetadata": {"fullname": "scrapermost.classes.FileMetadata", "modulename": "scrapermost.classes", "qualname": "FileMetadata", "kind": "class", "doc": "<p>Class defining file's metadata.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>id : str\n    The unique identifier for this file.\nuser_id : str\n    The ID of the user that uploaded this file.\npost_id : str\n    If this file is attached to a post, the ID of that post.\nchannel_id : str\n    The ID of the channel in which the file was posted.\ncreate_at : int\n    The time in milliseconds a file was created.\nupdate_at : int\n    The time in milliseconds a file was last updated.\ndelete_at : int\n    The time in milliseconds a file was deleted.\nname : str\n    The filename.\nextension : str\n    The file extension.\nsize : int\n    The file size in bytes.\nmime_type : str\n    The file MIME type.\nremote_id : str\n    TODO: Add description.\narchived : bool\n    Whether the file is archived.\nwidth : int, optional\n    If this file is an image, the width of the file in pixels.\nheight : int, optional\n    If this file is an image, the height of the file in pixels.\nhas_preview_image : bool, optional\n    If this file is an image, the height of the file.\nmini_preview : str, optional\n    If this file is an image, the file bytes as string.</p>\n"}, "scrapermost.classes.FileMetadata.__init__": {"fullname": "scrapermost.classes.FileMetadata.__init__", "modulename": "scrapermost.classes", "qualname": "FileMetadata.__init__", "kind": "function", "doc": "<p>Initialize the attributes.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>attr : dict\n    The attributes as a dict.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>KeyError\n    If a key is missing from event.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">attr</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "scrapermost.classes.Post": {"fullname": "scrapermost.classes.Post", "modulename": "scrapermost.classes", "qualname": "Post", "kind": "class", "doc": "<p>Class defining a post (i.e., a Mattermost message).</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>id : str\n    The post ID.\ncreate_at : int\n    Date and time the post was created in milliseconds.\nupdate_at : int\n    Date and time the post was updated in milliseconds.\nedit_at : int\n    Date and time the post was edited in milliseconds.\ndelete_at : int\n    Date and time the post was deleted in milliseconds.\nis_pinned : bool\n    Whether the post is pinned.\nuser_id : str\n    The sender's user ID.\nchannel_id : str\n    The ID of the channel in which the message was posted.\nroot_id : str\n    If the post is a reply, ID of the replied-to post.\n    If the post is in a thread, ID of the thread's first message.\noriginal_id : str\n    TODO: Add description.\nmessage : str\n    The post's content.\ntype : str\n    TODO: Add description.\nprops : dict\n    TODO: Add description.\nhashtags : str\n    Hashtags contained in message, separated by a space.\npending_post_id : str\n    TODO: Add description.\nreply_count : int\n    Count of replies from the root post.\nlast_reply_at : int\n    Date and time of the last reply.\nparticipants : Any\n    TODO: Add description.\nmetadata : Metadata\n    Embedded links, emojis, reactions, and files metadata.</p>\n"}, "scrapermost.classes.Post.__init__": {"fullname": "scrapermost.classes.Post.__init__", "modulename": "scrapermost.classes", "qualname": "Post.__init__", "kind": "function", "doc": "<p>Initialize the attributes.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>attr : dict\n    The attributes as a dict.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>KeyError\n    If a key is missing from event.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">attr</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "scrapermost.driver": {"fullname": "scrapermost.driver", "modulename": "scrapermost.driver", "kind": "module", "doc": "<p>Driver classes and their underlying client classes.</p>\n\n<p>A Mattermost driver acts as a client to make requests to the Mattermost API.</p>\n"}, "scrapermost.driver.async_client": {"fullname": "scrapermost.driver.async_client", "modulename": "scrapermost.driver.async_client", "kind": "module", "doc": "<p>Client class for the asynchronous driver.</p>\n\n<p>This class holds information about the logged-in user and actually makes the\nrequests to the Mattermost server.</p>\n"}, "scrapermost.driver.async_client.AsyncClient": {"fullname": "scrapermost.driver.async_client.AsyncClient", "modulename": "scrapermost.driver.async_client", "qualname": "AsyncClient", "kind": "class", "doc": "<p>Class defining an asynchronous Mattermost client.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>client : httpx.AsyncClient\n    The underlying httpx client object.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>get(endpoint, params=None)\n    Send an asynchronous GET request.\npost(\n        endpoint, body_json=None, params=None, data=None, files=None,\n    )\n    Send an asynchronous POST request.\nput(endpoint, body_json=None, params=None, data=None)\n    Send an asynchronous PUT request.\ndelete(endpoint, params=None)\n    Send an asynchronous DELETE request.</p>\n", "bases": "scrapermost.driver.base_client.BaseClient"}, "scrapermost.driver.async_client.AsyncClient.__init__": {"fullname": "scrapermost.driver.async_client.AsyncClient.__init__", "modulename": "scrapermost.driver.async_client", "qualname": "AsyncClient.__init__", "kind": "function", "doc": "<p>Initialize client.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>options : options.DriverOptions\n    The client options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">DriverOptions</span></span>)</span>"}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"fullname": "scrapermost.driver.async_client.AsyncClient.httpx_client", "modulename": "scrapermost.driver.async_client", "qualname": "AsyncClient.httpx_client", "kind": "variable", "doc": "<p>Get the underlying httpx client object.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>httpx.AsyncClient</p>\n", "annotation": ": httpx.AsyncClient"}, "scrapermost.driver.async_client.AsyncClient.get": {"fullname": "scrapermost.driver.async_client.AsyncClient.get", "modulename": "scrapermost.driver.async_client", "qualname": "AsyncClient.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "async def"}, "scrapermost.driver.async_client.AsyncClient.post": {"fullname": "scrapermost.driver.async_client.AsyncClient.post", "modulename": "scrapermost.driver.async_client", "qualname": "AsyncClient.post", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "async def"}, "scrapermost.driver.async_client.AsyncClient.put": {"fullname": "scrapermost.driver.async_client.AsyncClient.put", "modulename": "scrapermost.driver.async_client", "qualname": "AsyncClient.put", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "async def"}, "scrapermost.driver.async_client.AsyncClient.delete": {"fullname": "scrapermost.driver.async_client.AsyncClient.delete", "modulename": "scrapermost.driver.async_client", "qualname": "AsyncClient.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "async def"}, "scrapermost.driver.async_driver": {"fullname": "scrapermost.driver.async_driver", "modulename": "scrapermost.driver.async_driver", "kind": "module", "doc": "<p>Class defining the asynchronous driver.</p>\n"}, "scrapermost.driver.async_driver.AsyncDriver": {"fullname": "scrapermost.driver.async_driver.AsyncDriver", "modulename": "scrapermost.driver.async_driver", "qualname": "AsyncDriver", "kind": "class", "doc": "<p>Class defining an asynchronous Mattermost driver.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>client : client.AsyncClient\n    The Mattermost client to interact with Web Service API.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>init_websocket(event_handler, websocket_cls, data_format='json')\n    Initialize the websocket connection to the Mattermost server.\nlogin()\n    Log the user in.\nlogout()\n    Log the user out.</p>\n", "bases": "scrapermost.driver.base_driver.BaseDriver"}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"fullname": "scrapermost.driver.async_driver.AsyncDriver.__init__", "modulename": "scrapermost.driver.async_driver", "qualname": "AsyncDriver.__init__", "kind": "function", "doc": "<p>Initialize driver.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>options : dict\n    The options as a dict.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "scrapermost.driver.async_driver.AsyncDriver.client": {"fullname": "scrapermost.driver.async_driver.AsyncDriver.client", "modulename": "scrapermost.driver.async_driver", "qualname": "AsyncDriver.client", "kind": "variable", "doc": "<p>Get the underlying Mattermost client.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>async_client.AsyncClient</p>\n", "annotation": ": scrapermost.driver.async_client.AsyncClient"}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"fullname": "scrapermost.driver.async_driver.AsyncDriver.init_websocket", "modulename": "scrapermost.driver.async_driver", "qualname": "AsyncDriver.init_websocket", "kind": "function", "doc": "<p>Initialize the websocket connection to the Mattermost server.</p>\n\n<p>Unlike the Driver.init_websocket, this one assumes you are async aware\nand returns a coroutine that can be awaited. It will not return until\nshutdown() is called.</p>\n\n<p>This should be run after login(), because the websocket needs to\nauthenticate.</p>\n\n<p>Documentation: <a href=\"https://api.mattermost.com/v4/#tag/WebSocket\">https://api.mattermost.com/v4/#tag/WebSocket</a></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>event_handler : async function(str or dict) -> None\n    The function to handle the websocket events.\nwebsocket_cls : function() default=websocket.Websocket\n    The Websocket class constructor.\ndata_format : 'json' or 'text', default='json'\n    Whether to receive the websocket data as text or JSON.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">event_handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]]</span>,</span><span class=\"param\">\twebsocket_cls: Callable[..., scrapermost.driver.websocket.Websocket] = &lt;class &#x27;scrapermost.driver.websocket.Websocket&#x27;&gt;,</span><span class=\"param\">\t<span class=\"n\">data_format</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;json&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;text&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;json&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "async def"}, "scrapermost.driver.async_driver.AsyncDriver.login": {"fullname": "scrapermost.driver.async_driver.AsyncDriver.login", "modulename": "scrapermost.driver.async_driver", "qualname": "AsyncDriver.login", "kind": "function", "doc": "<p>Log the user in.</p>\n\n<p>The following information is saved in the client:</p>\n\n<ul>\n<li>user_id</li>\n<li>username</li>\n<li>cookies</li>\n</ul>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or requests.Response\n    The json-encoded content of the response if any.\n    Otherwise, the raw response.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"fullname": "scrapermost.driver.async_driver.AsyncDriver.logout", "modulename": "scrapermost.driver.async_driver", "qualname": "AsyncDriver.logout", "kind": "function", "doc": "<p>Log the user out.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any\n    The json-encoded content of the response.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "async def"}, "scrapermost.driver.base_client": {"fullname": "scrapermost.driver.base_client", "modulename": "scrapermost.driver.base_client", "kind": "module", "doc": "<p>Client base class.</p>\n\n<p>This class holds information about the logged-in user and actually makes the\nrequests to the Mattermost server.</p>\n"}, "scrapermost.driver.base_client.BaseClient": {"fullname": "scrapermost.driver.base_client.BaseClient", "modulename": "scrapermost.driver.base_client", "qualname": "BaseClient", "kind": "class", "doc": "<p>Base for creating client classes.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>_url : str\n    URL to make API requests. Example: 'https://server.com/api/v4'.\n_user_id : str, default=None\n    Mattermost user ID.\n_username : str, default=None\n    Mattermost username.\n_auth : Any, default=None\n    An authentication class used by the httpx client when sending requests.\n_token : str, default=None\n    Mattermost user token.\n_cookies : Any, default=None\n    The cookies given when the driver login to the Mattermost server.\nhttpx_client : httpx.AsyncClient or httpx.Client\n    The underlying httpx client object.</p>\n\n<h2 id=\"static-methods\">Static methods</h2>\n\n<p>activate_verbose_logging()\n    Enable trace level logging in httpx.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>get_auth_header()\n    Get Authorization header.</p>\n", "bases": "abc.ABC"}, "scrapermost.driver.base_client.BaseClient.__init__": {"fullname": "scrapermost.driver.base_client.BaseClient.__init__", "modulename": "scrapermost.driver.base_client", "qualname": "BaseClient.__init__", "kind": "function", "doc": "<p>Initialize client.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>options : options.DriverOptions\n    The client options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">DriverOptions</span></span>)</span>"}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"fullname": "scrapermost.driver.base_client.BaseClient.httpx_client", "modulename": "scrapermost.driver.base_client", "qualname": "BaseClient.httpx_client", "kind": "variable", "doc": "<p>Get the underlying httpx client object.</p>\n"}, "scrapermost.driver.base_client.BaseClient.url": {"fullname": "scrapermost.driver.base_client.BaseClient.url", "modulename": "scrapermost.driver.base_client", "qualname": "BaseClient.url", "kind": "variable", "doc": "<p>Get the Mattermost server's URL.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str</p>\n", "annotation": ": str"}, "scrapermost.driver.base_client.BaseClient.user_id": {"fullname": "scrapermost.driver.base_client.BaseClient.user_id", "modulename": "scrapermost.driver.base_client", "qualname": "BaseClient.user_id", "kind": "variable", "doc": "<p>Set the user ID of the logged-in user.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    The new user ID value.</p>\n", "annotation": ": str"}, "scrapermost.driver.base_client.BaseClient.username": {"fullname": "scrapermost.driver.base_client.BaseClient.username", "modulename": "scrapermost.driver.base_client", "qualname": "BaseClient.username", "kind": "variable", "doc": "<p>Set the username of the logged-in user.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>username : str\n    The new username value.</p>\n", "annotation": ": str"}, "scrapermost.driver.base_client.BaseClient.auth": {"fullname": "scrapermost.driver.base_client.BaseClient.auth", "modulename": "scrapermost.driver.base_client", "qualname": "BaseClient.auth", "kind": "variable", "doc": "<p>Get the authentication class used by the httpx client.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or None</p>\n", "annotation": ": Optional[Any]"}, "scrapermost.driver.base_client.BaseClient.token": {"fullname": "scrapermost.driver.base_client.BaseClient.token", "modulename": "scrapermost.driver.base_client", "qualname": "BaseClient.token", "kind": "variable", "doc": "<p>Set the token for the login.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>token : str\n    The new token value.</p>\n", "annotation": ": str"}, "scrapermost.driver.base_client.BaseClient.cookies": {"fullname": "scrapermost.driver.base_client.BaseClient.cookies", "modulename": "scrapermost.driver.base_client", "qualname": "BaseClient.cookies", "kind": "variable", "doc": "<p>Set the cookies.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>cookies : Any\n    The new cookies value.</p>\n", "annotation": ": Optional[Any]"}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"fullname": "scrapermost.driver.base_client.BaseClient.activate_verbose_logging", "modulename": "scrapermost.driver.base_client", "qualname": "BaseClient.activate_verbose_logging", "kind": "function", "doc": "<p>Enable trace level logging in httpx.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"fullname": "scrapermost.driver.base_client.BaseClient.get_auth_header", "modulename": "scrapermost.driver.base_client", "qualname": "BaseClient.get_auth_header", "kind": "function", "doc": "<p>Get Authorization header.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dict or None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "scrapermost.driver.base_driver": {"fullname": "scrapermost.driver.base_driver", "modulename": "scrapermost.driver.base_driver", "kind": "module", "doc": "<p>Driver base class.</p>\n"}, "scrapermost.driver.base_driver.BaseDriver": {"fullname": "scrapermost.driver.base_driver.BaseDriver", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver", "kind": "class", "doc": "<p>Base for creating driver classes.</p>\n\n<p>Contains the HTTP client, API endpoints, the websocket object to use the\nwebsocket API, and functions for login in and logout.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>options : options.DriverOptions\n    The options to configure how to connect to the Mattermost API.\nclient : client.AsyncClient or client.Client\n    The Mattermost client to interact with Web Service API.\nwebsocket : websocket.Websocket, default=None\n    The websocket to listen to Mattermost events.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>disconnect_websocket()\n    Disconnect the driver from the server.</p>\n", "bases": "abc.ABC"}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"fullname": "scrapermost.driver.base_driver.BaseDriver.__init__", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.__init__", "kind": "function", "doc": "<p>Initialize driver.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>options : dict\n    The options as a dict.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "scrapermost.driver.base_driver.BaseDriver.client": {"fullname": "scrapermost.driver.base_driver.BaseDriver.client", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.client", "kind": "variable", "doc": "<p>Get the underlying Mattermost client.</p>\n"}, "scrapermost.driver.base_driver.BaseDriver.users": {"fullname": "scrapermost.driver.base_driver.BaseDriver.users", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.users", "kind": "variable", "doc": "<p>Get API endpoint for users.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.users.Users</p>\n", "annotation": ": scrapermost.endpoints.users.Users"}, "scrapermost.driver.base_driver.BaseDriver.teams": {"fullname": "scrapermost.driver.base_driver.BaseDriver.teams", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.teams", "kind": "variable", "doc": "<p>Get API endpoint for teams.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.teams.Teams</p>\n", "annotation": ": scrapermost.endpoints.teams.Teams"}, "scrapermost.driver.base_driver.BaseDriver.channels": {"fullname": "scrapermost.driver.base_driver.BaseDriver.channels", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.channels", "kind": "variable", "doc": "<p>Get API endpoint for channels.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.channels.Channels</p>\n", "annotation": ": scrapermost.endpoints.channels.Channels"}, "scrapermost.driver.base_driver.BaseDriver.posts": {"fullname": "scrapermost.driver.base_driver.BaseDriver.posts", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.posts", "kind": "variable", "doc": "<p>Get API endpoint for posts.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.posts.Posts</p>\n", "annotation": ": scrapermost.endpoints.posts.Posts"}, "scrapermost.driver.base_driver.BaseDriver.files": {"fullname": "scrapermost.driver.base_driver.BaseDriver.files", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.files", "kind": "variable", "doc": "<p>Get API endpoint for files.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.files.Files</p>\n", "annotation": ": scrapermost.endpoints.files.Files"}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"fullname": "scrapermost.driver.base_driver.BaseDriver.preferences", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.preferences", "kind": "variable", "doc": "<p>Get API endpoint for preferences.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.preferences.Preferences</p>\n", "annotation": ": scrapermost.endpoints.preferences.Preferences"}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"fullname": "scrapermost.driver.base_driver.BaseDriver.emoji", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.emoji", "kind": "variable", "doc": "<p>Get API endpoint for emoji.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.emoji.Emoji</p>\n", "annotation": ": scrapermost.endpoints.emoji.Emoji"}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"fullname": "scrapermost.driver.base_driver.BaseDriver.reactions", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.reactions", "kind": "variable", "doc": "<p>Get API endpoint for posts' reactions.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.reactions.Reactions</p>\n", "annotation": ": scrapermost.endpoints.reactions.Reactions"}, "scrapermost.driver.base_driver.BaseDriver.system": {"fullname": "scrapermost.driver.base_driver.BaseDriver.system", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.system", "kind": "variable", "doc": "<p>Get API endpoint for system.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.system.System</p>\n", "annotation": ": scrapermost.endpoints.system.System"}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"fullname": "scrapermost.driver.base_driver.BaseDriver.webhooks", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.webhooks", "kind": "variable", "doc": "<p>Get API endpoint for webhooks.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.webhooks.Webhooks</p>\n", "annotation": ": scrapermost.endpoints.webhooks.Webhooks"}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"fullname": "scrapermost.driver.base_driver.BaseDriver.compliance", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.compliance", "kind": "variable", "doc": "<p>Get API endpoint for compliance.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.compliance.Compliance</p>\n", "annotation": ": scrapermost.endpoints.compliance.Compliance"}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"fullname": "scrapermost.driver.base_driver.BaseDriver.cluster", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.cluster", "kind": "variable", "doc": "<p>Get API endpoint for cluster.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.cluster.Cluster</p>\n", "annotation": ": scrapermost.endpoints.cluster.Cluster"}, "scrapermost.driver.base_driver.BaseDriver.brand": {"fullname": "scrapermost.driver.base_driver.BaseDriver.brand", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.brand", "kind": "variable", "doc": "<p>Get API endpoint for brand.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.brand.Brand</p>\n", "annotation": ": scrapermost.endpoints.brand.Brand"}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"fullname": "scrapermost.driver.base_driver.BaseDriver.oauth", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.oauth", "kind": "variable", "doc": "<p>Get API endpoint for oauth.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.oauth.OAuth</p>\n", "annotation": ": scrapermost.endpoints.oauth.OAuth"}, "scrapermost.driver.base_driver.BaseDriver.saml": {"fullname": "scrapermost.driver.base_driver.BaseDriver.saml", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.saml", "kind": "variable", "doc": "<p>Get API endpoint for SAML.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.saml.SAML</p>\n", "annotation": ": scrapermost.endpoints.saml.SAML"}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"fullname": "scrapermost.driver.base_driver.BaseDriver.ldap", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.ldap", "kind": "variable", "doc": "<p>Get API endpoint for LDAP.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.ldap.LDAP</p>\n", "annotation": ": scrapermost.endpoints.ldap.LDAP"}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"fullname": "scrapermost.driver.base_driver.BaseDriver.elasticsearch", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.elasticsearch", "kind": "variable", "doc": "<p>Get API endpoint for ElasticSearch.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.elasticsearch.Elasticsearch</p>\n", "annotation": ": scrapermost.endpoints.elasticsearch.Elasticsearch"}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"fullname": "scrapermost.driver.base_driver.BaseDriver.data_retention", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.data_retention", "kind": "variable", "doc": "<p>Get API endpoint for data_retention.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.data_retention.DataRetention</p>\n", "annotation": ": scrapermost.endpoints.data_retention.DataRetention"}, "scrapermost.driver.base_driver.BaseDriver.status": {"fullname": "scrapermost.driver.base_driver.BaseDriver.status", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.status", "kind": "variable", "doc": "<p>Get API endpoint for status.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.status.Status</p>\n", "annotation": ": scrapermost.endpoints.status.Status"}, "scrapermost.driver.base_driver.BaseDriver.commands": {"fullname": "scrapermost.driver.base_driver.BaseDriver.commands", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.commands", "kind": "variable", "doc": "<p>Get API endpoint for commands.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.commands.Commands</p>\n", "annotation": ": scrapermost.endpoints.commands.Commands"}, "scrapermost.driver.base_driver.BaseDriver.roles": {"fullname": "scrapermost.driver.base_driver.BaseDriver.roles", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.roles", "kind": "variable", "doc": "<p>Get API endpoint for roles.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.roles.Roles</p>\n", "annotation": ": scrapermost.endpoints.roles.Roles"}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"fullname": "scrapermost.driver.base_driver.BaseDriver.opengraph", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.opengraph", "kind": "variable", "doc": "<p>Get API endpoint for opengraph.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.opengraph.Opengraph</p>\n", "annotation": ": scrapermost.endpoints.opengraph.Opengraph"}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"fullname": "scrapermost.driver.base_driver.BaseDriver.integration_actions", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.integration_actions", "kind": "variable", "doc": "<p>Get API endpoint for integration actions.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.integration_actions</p>\n", "annotation": ": scrapermost.endpoints.integration_actions.IntegrationActions"}, "scrapermost.driver.base_driver.BaseDriver.bots": {"fullname": "scrapermost.driver.base_driver.BaseDriver.bots", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.bots", "kind": "variable", "doc": "<p>Get API endpoint for bots.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>endpoints.bots.Bots</p>\n", "annotation": ": scrapermost.endpoints.bots.Bots"}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"fullname": "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket", "modulename": "scrapermost.driver.base_driver", "qualname": "BaseDriver.disconnect_websocket", "kind": "function", "doc": "<p>Disconnect the driver from the server.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "scrapermost.driver.client": {"fullname": "scrapermost.driver.client", "modulename": "scrapermost.driver.client", "kind": "module", "doc": "<p>Client class for the synchronous driver.</p>\n\n<p>This class holds information about the logged-in user and actually makes the\nrequests to the Mattermost server.</p>\n"}, "scrapermost.driver.client.Client": {"fullname": "scrapermost.driver.client.Client", "modulename": "scrapermost.driver.client", "qualname": "Client", "kind": "class", "doc": "<p>Class defining a synchronous Mattermost client.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>client : httpx.Client\n    The underlying httpx client object.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>get(endpoint, params=None)\n    Send a GET request.\npost(\n        endpoint, body_json=None, params=None, data=None, files=None,\n    )\n    Send a POST request.\nput(endpoint, body_json=None, params=None, data=None)\n    Send a PUT request.\ndelete(endpoint, params=None)\n    Send a DELETE request.</p>\n", "bases": "scrapermost.driver.base_client.BaseClient"}, "scrapermost.driver.client.Client.__init__": {"fullname": "scrapermost.driver.client.Client.__init__", "modulename": "scrapermost.driver.client", "qualname": "Client.__init__", "kind": "function", "doc": "<p>Initialize client.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>options : options.DriverOptions\n    The client options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">DriverOptions</span></span>)</span>"}, "scrapermost.driver.client.Client.httpx_client": {"fullname": "scrapermost.driver.client.Client.httpx_client", "modulename": "scrapermost.driver.client", "qualname": "Client.httpx_client", "kind": "variable", "doc": "<p>Get the underlying httpx client object.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>httpx.Client</p>\n", "annotation": ": httpx.Client"}, "scrapermost.driver.client.Client.get": {"fullname": "scrapermost.driver.client.Client.get", "modulename": "scrapermost.driver.client", "qualname": "Client.get", "kind": "function", "doc": "<p>Send a GET request.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>endpoint : str\n    The API endpoint to make the request to.\nparams : dict, default=None\n    Query parameters to include in the URL.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>requests.Response\n    The raw response.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>httpx.HTTPStatusError\n    If any httpx.HTTPError occurred.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, "scrapermost.driver.client.Client.post": {"fullname": "scrapermost.driver.client.Client.post", "modulename": "scrapermost.driver.client", "qualname": "Client.post", "kind": "function", "doc": "<p>Send a POST request.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>endpoint : str\n    The API endpoint to make the request to.\nbody_json : dict, default=None\n    A JSON serializable object to include in the body of the request.\nparams : dict, default=None\n    Query parameters to include in the URL.\ndata : dict, default=None\n    Form data to include in the body of the request.\nfiles : dict, default=None\n    Upload files to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>requests.Response\n    The raw response.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>httpx.HTTPStatusError\n    If any httpx.HTTPError occurred.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, "scrapermost.driver.client.Client.put": {"fullname": "scrapermost.driver.client.Client.put", "modulename": "scrapermost.driver.client", "qualname": "Client.put", "kind": "function", "doc": "<p>Send a PUT request.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>endpoint : str\n    The API endpoint to make the request to.\nbody_json : dict, default=None\n    A JSON serializable object to include in the body of the request.\nparams : dict, default=None\n    Query parameters to include in the URL.\ndata : dict, default=None\n    Form data to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>requests.Response\n    The raw response.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>httpx.HTTPStatusError\n    If any httpx.HTTPError occurred.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, "scrapermost.driver.client.Client.delete": {"fullname": "scrapermost.driver.client.Client.delete", "modulename": "scrapermost.driver.client", "qualname": "Client.delete", "kind": "function", "doc": "<p>Send a DELETE request.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>endpoint : str\n    The API endpoint to make the request to.\nparams : dict, default=None\n    Query parameters to include in the URL.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>requests.Response\n    The raw response.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>httpx.HTTPStatusError\n    If any httpx.HTTPError occurred.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, "scrapermost.driver.driver": {"fullname": "scrapermost.driver.driver", "modulename": "scrapermost.driver.driver", "kind": "module", "doc": "<p>Class defining the synchronous driver.</p>\n"}, "scrapermost.driver.driver.Driver": {"fullname": "scrapermost.driver.driver.Driver", "modulename": "scrapermost.driver.driver", "qualname": "Driver", "kind": "class", "doc": "<p>Class defining a synchronous Mattermost driver.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>client : client.Client\n    The Mattermost client to interact with Web Service API.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>init_websocket(event_handler, websocket_cls, data_format='json')\n    Initialize the websocket connection to the Mattermost server.\nlogin()\n    Log the user in.\nlogout()\n    Log the user out.</p>\n", "bases": "scrapermost.driver.base_driver.BaseDriver"}, "scrapermost.driver.driver.Driver.__init__": {"fullname": "scrapermost.driver.driver.Driver.__init__", "modulename": "scrapermost.driver.driver", "qualname": "Driver.__init__", "kind": "function", "doc": "<p>Initialize driver.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>options : dict\n    The options as a dict.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "scrapermost.driver.driver.Driver.client": {"fullname": "scrapermost.driver.driver.Driver.client", "modulename": "scrapermost.driver.driver", "qualname": "Driver.client", "kind": "variable", "doc": "<p>Get the underlying Mattermost client.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>client.Client</p>\n", "annotation": ": scrapermost.driver.client.Client"}, "scrapermost.driver.driver.Driver.init_websocket": {"fullname": "scrapermost.driver.driver.Driver.init_websocket", "modulename": "scrapermost.driver.driver", "qualname": "Driver.init_websocket", "kind": "function", "doc": "<p>Initialize the websocket connection to the Mattermost server.</p>\n\n<p>This should be run after login(), because the websocket needs to\nauthenticate.</p>\n\n<p>Documentation: <a href=\"https://api.mattermost.com/v4/#tag/WebSocket\">https://api.mattermost.com/v4/#tag/WebSocket</a></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>event_handler : async function(str or dict) -> None\n    The function to handle the websocket events.\nwebsocket_cls : function(), default=websocket.Websocket\n    The Websocket class constructor.\ndata_format : 'text' or 'json', default='json'\n    Whether to receive the websocket data as text or JSON.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>asyncio.AbstractEventLoop\n    The event loop.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">event_handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]]</span>,</span><span class=\"param\">\twebsocket_cls: Callable[..., scrapermost.driver.websocket.Websocket] = &lt;class &#x27;scrapermost.driver.websocket.Websocket&#x27;&gt;,</span><span class=\"param\">\t<span class=\"n\">data_format</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;text&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;json&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;json&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">AbstractEventLoop</span>:</span></span>", "funcdef": "def"}, "scrapermost.driver.driver.Driver.login": {"fullname": "scrapermost.driver.driver.Driver.login", "modulename": "scrapermost.driver.driver", "qualname": "Driver.login", "kind": "function", "doc": "<p>Log the user in.</p>\n\n<p>The following information is saved in the client:</p>\n\n<ul>\n<li>user_id</li>\n<li>username</li>\n<li>cookies</li>\n</ul>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or requests.Response\n    The json-encoded content of the response if any.\n    Otherwise, the raw response.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "scrapermost.driver.driver.Driver.logout": {"fullname": "scrapermost.driver.driver.Driver.logout", "modulename": "scrapermost.driver.driver", "qualname": "Driver.logout", "kind": "function", "doc": "<p>Log the user out.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any\n    The json-encoded content of the response.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "scrapermost.driver.options": {"fullname": "scrapermost.driver.options", "modulename": "scrapermost.driver.options", "kind": "module", "doc": "<p>Mattermost API connection settings class.</p>\n"}, "scrapermost.driver.options.DriverOptions": {"fullname": "scrapermost.driver.options.DriverOptions", "modulename": "scrapermost.driver.options", "qualname": "DriverOptions", "kind": "class", "doc": "<p>Class to define and group the connection options.</p>\n\n<p>Settings configure the driver, client and websocket connections to the API.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>debug : bool, default=False\n    Whether to run debugging mode.\nscheme : str, default='https'\n    The protocol to be used to access the Mattermost server.\nhostname : str, default='localhost'\n    The Mattermost server host name (example: 'mattermost.server.com').\nport : int, default=8065\n    The post to be used to access the Mattermost server.\nbasepath : str, default='/api/v4'\n    The path to the API endoint.\nlogin_id : str, default=None\n    The user account's email address or username.\npassword : str, default=None\n    The user's password.\ntoken : str, default=None\n    The user's token.\nmfa_token : Any, default=None\n    The Multi-Factor Authentication token. If MFA is enabled, the user has\n    to provide a secure one-time code.\nauth : Any, default=None\n    An authentication class used by the httpx client when sending requests.\nverify : bool, default=True\n    Whether instantiating a httpx client with SSL verification enabled.\nhttp2 : bool, default=False\n    Whether instantiating a httpx client with HTTP/2.\nproxy : str, default=None\n    Proxy URL for every request.\nrequest_timeout : int, default=None\n    The timeout configuration used by the httpx client when sending\n    request. If none, use default httpx client timeout (5 seconds).\ntimeout : float, default=30\n    The Mattermost websocket connection's timeout in seconds.\nkeepalive : bool, default=False\n    Whether to keep the websocket connection alive.\nkeepalive_delay : float, default=5\n    Duration in seconds between two keepalive transmissions.\nwebsocket_kw_args : dict, default=None\n    Parameters to pass to aiohttp.ClientSession.ws_connect() to create a\n    websocket connection.</p>\n"}, "scrapermost.driver.options.DriverOptions.__init__": {"fullname": "scrapermost.driver.options.DriverOptions.__init__", "modulename": "scrapermost.driver.options", "qualname": "DriverOptions.__init__", "kind": "function", "doc": "<p>Send a DELETE request.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>options : dict\n    The driver options as a dict.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>RuntimeError\n    If 'login_id' and 'password' or 'token' are missing.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "scrapermost.driver.websocket": {"fullname": "scrapermost.driver.websocket", "modulename": "scrapermost.driver.websocket", "kind": "module", "doc": "<p>Class to use Mattermost websocket API.</p>\n"}, "scrapermost.driver.websocket.Websocket": {"fullname": "scrapermost.driver.websocket.Websocket", "modulename": "scrapermost.driver.websocket", "qualname": "Websocket", "kind": "class", "doc": "<p>Class defining a websocket handle Mattermost events.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>_url : str\n    Websocket server URL.\n_token : str\n    The session token.\n_websocket_kw_args : dict\n    Parameters to pass to aiohttp.ClientSession.ws_connect() to create a\n    websocket connection.\n_timeout : float\n    Timeout in seconds for websocket to close.\n_keepalive : bool\n    Whether to keep the websocket connection alive.\n_keepalive_delay : float\n    Duration in seconds between two keepalive transmissions.\n_alive : bool, default=False\n    Whether the websocket is connected.\n_last_msg : float, default=0\n    Time of the last message received.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>_do_heartbeats(websocket)\n    Keep connection alive.\n_start_loop(websocket, event_handler, data_format='json')\n    Start main coroutine.\n_authenticate_websocket(websocket, event_handler)\n    Send a authentication challenge over a websocket.\nconnect(event_handler, data_format='json')\n    Connect to the websocket and authenticate it.\ndisconnect()\n    Disconnect the websocket.</p>\n"}, "scrapermost.driver.websocket.Websocket.__init__": {"fullname": "scrapermost.driver.websocket.Websocket.__init__", "modulename": "scrapermost.driver.websocket", "qualname": "Websocket.__init__", "kind": "function", "doc": "<p>Initialize websocket.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>options : options.DriverOptions\n    The websocket options.\ntoken : str\n    The user token.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">DriverOptions</span>, </span><span class=\"param\"><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "scrapermost.driver.websocket.Websocket.timeout": {"fullname": "scrapermost.driver.websocket.Websocket.timeout", "modulename": "scrapermost.driver.websocket", "qualname": "Websocket.timeout", "kind": "variable", "doc": "<p>Get the websocket connection timeout in seconds.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>float</p>\n", "annotation": ": float"}, "scrapermost.driver.websocket.Websocket.last_msg": {"fullname": "scrapermost.driver.websocket.Websocket.last_msg", "modulename": "scrapermost.driver.websocket", "qualname": "Websocket.last_msg", "kind": "variable", "doc": "<p>Set the time of the last message received.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>last_msg : float\n    The new time of the last message received.</p>\n", "annotation": ": float"}, "scrapermost.driver.websocket.Websocket.connect": {"fullname": "scrapermost.driver.websocket.Websocket.connect", "modulename": "scrapermost.driver.websocket", "qualname": "Websocket.connect", "kind": "function", "doc": "<p>Connect to the websocket and authenticate it.</p>\n\n<p>When the authentication has finished, start the loop listening for\nmessages, sending a ping to the server to keep the connection alive.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>event_handler : async function(str or dict) -> None\n    The function to handle the websocket events.\ndata_format : 'json' or 'text', default='json'\n    Whether to receive the websocket data as text or JSON.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">event_handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">data_format</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;json&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;text&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;json&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "scrapermost.driver.websocket.Websocket.disconnect": {"fullname": "scrapermost.driver.websocket.Websocket.disconnect", "modulename": "scrapermost.driver.websocket", "qualname": "Websocket.disconnect", "kind": "function", "doc": "<p>Disconnect the websocket.</p>\n\n<p>Set <code>self._alive</code> to False so the loop in <code>self._start_loop</code> ends.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "scrapermost.endpoints": {"fullname": "scrapermost.endpoints", "modulename": "scrapermost.endpoints", "kind": "module", "doc": "<p>Classes defining API endpoints.</p>\n"}, "scrapermost.endpoints.Bots": {"fullname": "scrapermost.endpoints.Bots", "modulename": "scrapermost.endpoints", "qualname": "Bots", "kind": "class", "doc": "<p>Class defining the Bots API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='bots'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>create_bot(body_json)\n    Create a new bot account on the system.\nget_bots(params)\n    Get a page of a list of bots.\npatch_bot(bot_id, body_json)\n    Update a bot partially by providing only the fields to update.\nget_bot(bot_id, include_deleted)\n    Get a bot specified by its bot ID.\ndisable_bot(bot_id)\n    Disable a bot.\nenable_bot(bot_id)\n    Enable a bot.\nassign_bot_to_user(bot_id, user_id)\n    Assign a bot to a specified user.\nget_bot_lhs_icon(bot_id)\n    Get a bot's Left-Hand Sidebar icon image.\nset_bot_lhs_icon(bot_id, image)\n    Set a bot's Left-Hand Sidebar icon image.\ndelete_bot_lhs_icon(bot_id)\n    Delete a bot's Left-Hand Sidebar icon image.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Bots.__init__": {"fullname": "scrapermost.endpoints.Bots.__init__", "modulename": "scrapermost.endpoints", "qualname": "Bots.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bots&#39;</span></span>)</span>"}, "scrapermost.endpoints.Bots.create_bot": {"fullname": "scrapermost.endpoints.Bots.create_bot", "modulename": "scrapermost.endpoints", "qualname": "Bots.create_bot", "kind": "function", "doc": "<p>Create a new bot account on the system.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict\n    The new bot settings as a dict.\n    Example:\n    {\n        \"username\": \"string\",\n        \"display_name\": \"string\",\n        \"description\": \"string\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Bots.get_bots": {"fullname": "scrapermost.endpoints.Bots.get_bots", "modulename": "scrapermost.endpoints", "qualname": "Bots.get_bots", "kind": "function", "doc": "<p>Get a page of a list of bots.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>params : dict\n    Query parameters to include.\n    Example:\n    {\n        \"page\": 0,\n        \"per_page\": 0,\n        \"include_deleted\": true,\n        \"only_orphaned\": false\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Bots.patch_bot": {"fullname": "scrapermost.endpoints.Bots.patch_bot", "modulename": "scrapermost.endpoints", "qualname": "Bots.patch_bot", "kind": "function", "doc": "<p>Update a bot partially by providing only the fields to update.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bot_id : str\n    Bot user ID.\nbody_json : dict\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Bots.get_bot": {"fullname": "scrapermost.endpoints.Bots.get_bot", "modulename": "scrapermost.endpoints", "qualname": "Bots.get_bot", "kind": "function", "doc": "<p>Get a bot specified by its bot ID.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bot_id : str\n    Bot user ID.\ninclude_deleted : bool\n    Whether deleted bots should be returned.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Bots.disable_bot": {"fullname": "scrapermost.endpoints.Bots.disable_bot", "modulename": "scrapermost.endpoints", "qualname": "Bots.disable_bot", "kind": "function", "doc": "<p>Disable a bot.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bot_id : str\n    Bot user ID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Bots.enable_bot": {"fullname": "scrapermost.endpoints.Bots.enable_bot", "modulename": "scrapermost.endpoints", "qualname": "Bots.enable_bot", "kind": "function", "doc": "<p>Enable a bot.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bot_id : str\n    Bot user ID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"fullname": "scrapermost.endpoints.Bots.assign_bot_to_user", "modulename": "scrapermost.endpoints", "qualname": "Bots.assign_bot_to_user", "kind": "function", "doc": "<p>Assign a bot to a specified user.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bot_id : str\n    Bot user ID.\nuser_id : str\n    The user ID to assign the bot to.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"fullname": "scrapermost.endpoints.Bots.get_bot_lhs_icon", "modulename": "scrapermost.endpoints", "qualname": "Bots.get_bot_lhs_icon", "kind": "function", "doc": "<p>Get a bot's Left-Hand Sidebar icon image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bot_id : str\n    Bot user ID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"fullname": "scrapermost.endpoints.Bots.set_bot_lhs_icon", "modulename": "scrapermost.endpoints", "qualname": "Bots.set_bot_lhs_icon", "kind": "function", "doc": "<p>Set a bot's Left-Hand Sidebar icon image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bot_id : str\n    Bot user ID.\nimage : str\n    The image's bytes string to be uploaded.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"fullname": "scrapermost.endpoints.Bots.delete_bot_lhs_icon", "modulename": "scrapermost.endpoints", "qualname": "Bots.delete_bot_lhs_icon", "kind": "function", "doc": "<p>Delete a bot's Left-Hand Sidebar icon image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bot_id : str\n    Bot user ID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Brand": {"fullname": "scrapermost.endpoints.Brand", "modulename": "scrapermost.endpoints", "qualname": "Brand", "kind": "class", "doc": "<p>Class defining the Brand API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='brand'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>get_brand_image()\n    Get the previously uploaded brand image.\nupload_brand_image(image)\n    Upload a brand image.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Brand.__init__": {"fullname": "scrapermost.endpoints.Brand.__init__", "modulename": "scrapermost.endpoints", "qualname": "Brand.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;brand&#39;</span></span>)</span>"}, "scrapermost.endpoints.Brand.get_brand_image": {"fullname": "scrapermost.endpoints.Brand.get_brand_image", "modulename": "scrapermost.endpoints", "qualname": "Brand.get_brand_image", "kind": "function", "doc": "<p>Get the previously uploaded brand image.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Brand.upload_brand_image": {"fullname": "scrapermost.endpoints.Brand.upload_brand_image", "modulename": "scrapermost.endpoints", "qualname": "Brand.upload_brand_image", "kind": "function", "doc": "<p>Upload a brand image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>image : str\n    The image's bytes string to be uploaded.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels": {"fullname": "scrapermost.endpoints.Channels", "modulename": "scrapermost.endpoints", "qualname": "Channels", "kind": "class", "doc": "<p>Class defining the Channels API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='channels'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>create_channel(body_json)\n    Create a new channel.\ncreate_direct_message_channel(first_user_id, second_user_id)\n    Create a new direct message channel between two users.\ncreate_group_message_channel(user_ids)\n    Create a new group message channel to group of users.\nget_list_of_channels_by_ids(team_id, channel_ids)\n    Get a list of public channels on a team by ID.\nget_channel(channel_id)\n    Get channel from the provided channel ID string.\nupdate_channel(channel_id, body_json)\n    Update a channel.\ndelete_channel(channel_id)\n    Archive a channel.\npatch_channel(channel_id, body_json)\n    Update a channel partially by providing only the fields to update.\nrestore_channel(channel_id)\n    Restore channel from the provided channel ID string.\nget_channel_statistics(channel_id)\n    Get statistics for a channel.\nget_channel_pinned_posts(channel_id)\n    Get a list of pinned posts for channel.\nget_public_channels(team_id, page=0, per_page=60)\n    Get a page of public channels on a team.\nget_deleted_channels(team_id, page=0, per_page=60)\n    Get a page of deleted channels on a team.\nautocomplete_channels(team_id, name)\n    Autocomplete public channels on a team.\nsearch_channels(team_id, term)\n    Search public channels on a team.\nget_channel_by_name(team_id, channel_name)\n    Get channel from the provided team ID and channel name strings.\nget_channel_by_name_and_team_name(team_name, channel_name)\n    Get a channel from the provided team channel name strings.\nget_channel_members(channel_id, page=0, per_page=60)\n    Get a page of members for a channel.\nadd_user(channel_id, user_id, post_root_id=None)\n    Add a user to a channel by creating a channel member object.\nget_channel_members_by_ids(channel_id, user_ids)\n    Get a list of channel members based on the provided user IDs.\nget_channel_member(channel_id, user_id)\n    Get a channel member.\nremove_channel_member(channel_id, user_id)\n    Delete a channel member,removing them from the channel.\nupdate_channel_roles(channel_id, user_id, roles)\n    Update a user's roles for a channel.\nupdate_scheme_derived_roles_of_channel_member(\n        channel_id, user_id, body_json\n    )\n    Update the scheme-derived roles of a channel member.\nupdate_channel_notifications(channel_id, user_id, body_json)\n    Update a user's notification properties for a channel.\nview_channel(user_id, channel_id, prev_channel_id=None)\n    Perform all the actions involved in viewing a channel.\nget_channel_members_for_user(user_id, team_id)\n    Get channel memberships and roles for a user.\nget_channels_for_user(user_id, team_id)\n    Get all the channels on a team for a user.\nget_unread_messages(user_id, channel_id)\n    Get the total unread messages and mentions for a channel for a user.\nset_channel_scheme(channel_id)\n    Set a channel's scheme.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Channels.__init__": {"fullname": "scrapermost.endpoints.Channels.__init__", "modulename": "scrapermost.endpoints", "qualname": "Channels.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;channels&#39;</span></span>)</span>"}, "scrapermost.endpoints.Channels.create_channel": {"fullname": "scrapermost.endpoints.Channels.create_channel", "modulename": "scrapermost.endpoints", "qualname": "Channels.create_channel", "kind": "function", "doc": "<p>Create a new channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.\n    team_id, name, display_name and type are required.\n    Example:\n    {\n        \"team_id\": \"string\",\n        \"name\": \"string\",\n        \"display_name\": \"string\",\n        \"purpose\": \"string\",\n        \"header\": \"string\",\n        \"type\": \"string\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"fullname": "scrapermost.endpoints.Channels.create_direct_message_channel", "modulename": "scrapermost.endpoints", "qualname": "Channels.create_direct_message_channel", "kind": "function", "doc": "<p>Create a new direct message channel between two users.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>first_user_id : str\n    User GUID.\nsecond_user_id : str\n    User GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.create_group_message_channel": {"fullname": "scrapermost.endpoints.Channels.create_group_message_channel", "modulename": "scrapermost.endpoints", "qualname": "Channels.create_group_message_channel", "kind": "function", "doc": "<p>Create a new group message channel to group of users.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_ids : list of str\n    List of user IDs (min: 3, max: 8).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"fullname": "scrapermost.endpoints.Channels.get_list_of_channels_by_ids", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_list_of_channels_by_ids", "kind": "function", "doc": "<p>Get a list of public channels on a team by ID.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nchannel_ids : list of str\n    List of channel ids.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_channel": {"fullname": "scrapermost.endpoints.Channels.get_channel", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_channel", "kind": "function", "doc": "<p>Get channel from the provided channel ID string.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.update_channel": {"fullname": "scrapermost.endpoints.Channels.update_channel", "modulename": "scrapermost.endpoints", "qualname": "Channels.update_channel", "kind": "function", "doc": "<p>Update a channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.\nbody_json : dict\n    A JSON serializable object to include in the body of the request.\n    Example:\n    {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"display_name\": \"string\",\n        \"purpose\": \"string\",\n        \"header\": \"string\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.delete_channel": {"fullname": "scrapermost.endpoints.Channels.delete_channel", "modulename": "scrapermost.endpoints", "qualname": "Channels.delete_channel", "kind": "function", "doc": "<p>Archive a channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.patch_channel": {"fullname": "scrapermost.endpoints.Channels.patch_channel", "modulename": "scrapermost.endpoints", "qualname": "Channels.patch_channel", "kind": "function", "doc": "<p>Update a channel partially by providing only the fields to update.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.\nbody_json : dict\n    A JSON serializable object to include in the body of the request.\n    Example:\n    {\n        \"name\": \"string\",\n        \"display_name\": \"string\",\n        \"purpose\": \"string\",\n        \"header\": \"string\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.restore_channel": {"fullname": "scrapermost.endpoints.Channels.restore_channel", "modulename": "scrapermost.endpoints", "qualname": "Channels.restore_channel", "kind": "function", "doc": "<p>Restore channel from the provided channel ID string.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_channel_statistics": {"fullname": "scrapermost.endpoints.Channels.get_channel_statistics", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_channel_statistics", "kind": "function", "doc": "<p>Get statistics for a channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"fullname": "scrapermost.endpoints.Channels.get_channel_pinned_posts", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_channel_pinned_posts", "kind": "function", "doc": "<p>Get a list of pinned posts for channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_public_channels": {"fullname": "scrapermost.endpoints.Channels.get_public_channels", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_public_channels", "kind": "function", "doc": "<p>Get a page of public channels on a team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\npage : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_deleted_channels": {"fullname": "scrapermost.endpoints.Channels.get_deleted_channels", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_deleted_channels", "kind": "function", "doc": "<p>Get a page of deleted channels on a team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\npage : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.autocomplete_channels": {"fullname": "scrapermost.endpoints.Channels.autocomplete_channels", "modulename": "scrapermost.endpoints", "qualname": "Channels.autocomplete_channels", "kind": "function", "doc": "<p>Autocomplete public channels on a team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nname : str\n    Name or display name.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.search_channels": {"fullname": "scrapermost.endpoints.Channels.search_channels", "modulename": "scrapermost.endpoints", "qualname": "Channels.search_channels", "kind": "function", "doc": "<p>Search public channels on a team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nterm : str\n    The search term to match against the name or display name of\n    channels.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_channel_by_name": {"fullname": "scrapermost.endpoints.Channels.get_channel_by_name", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_channel_by_name", "kind": "function", "doc": "<p>Get channel from the provided team ID and channel name strings.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nchannel_name : str\n    Channel Name.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"fullname": "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_channel_by_name_and_team_name", "kind": "function", "doc": "<p>Get a channel from the provided team channel name strings.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_name : str\n    Team name.\nchannel_name : str\n    Channel Name.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_channel_members": {"fullname": "scrapermost.endpoints.Channels.get_channel_members", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_channel_members", "kind": "function", "doc": "<p>Get a page of members for a channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.\npage : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.add_user": {"fullname": "scrapermost.endpoints.Channels.add_user", "modulename": "scrapermost.endpoints", "qualname": "Channels.add_user", "kind": "function", "doc": "<p>Add a user to a channel by creating a channel member object.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.\nuser_id : str\n    The ID of user to add into the channel.\npost_root_id : str, optional\n    The ID of root post where link to add channel member originates.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"fullname": "scrapermost.endpoints.Channels.get_channel_members_by_ids", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_channel_members_by_ids", "kind": "function", "doc": "<p>Get a list of channel members based on the provided user IDs.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.\nuser_ids : list of str\n    List of user IDs.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_channel_member": {"fullname": "scrapermost.endpoints.Channels.get_channel_member", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_channel_member", "kind": "function", "doc": "<p>Get a channel member.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.\nuser_id : str\n    User GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.remove_channel_member": {"fullname": "scrapermost.endpoints.Channels.remove_channel_member", "modulename": "scrapermost.endpoints", "qualname": "Channels.remove_channel_member", "kind": "function", "doc": "<p>Delete a channel member,removing them from the channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.\nuser_id : str\n    User GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.update_channel_roles": {"fullname": "scrapermost.endpoints.Channels.update_channel_roles", "modulename": "scrapermost.endpoints", "qualname": "Channels.update_channel_roles", "kind": "function", "doc": "<p>Update a user's roles for a channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.\nuser_id : str\n    User GUID.\nroles : str\n    Space-delimited channel roles to assign to the user.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"fullname": "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member", "modulename": "scrapermost.endpoints", "qualname": "Channels.update_scheme_derived_roles_of_channel_member", "kind": "function", "doc": "<p>Update the scheme-derived roles of a channel member.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.\nuser_id : str\n    User GUID.\nbody_json : dict\n    A JSON serializable object to include in the body of the request.\n    Example:\n    {\n        \"scheme_admin\": true,\n        \"scheme_user\": true\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.update_channel_notifications": {"fullname": "scrapermost.endpoints.Channels.update_channel_notifications", "modulename": "scrapermost.endpoints", "qualname": "Channels.update_channel_notifications", "kind": "function", "doc": "<p>Update a user's notification properties for a channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.\nuser_id : str\n    User GUID.\nbody_json : dict\n    A JSON serializable object to include in the body of the request.\n    Example:\n    {\n        \"email\": \"string\",\n        \"push\": \"string\",\n        \"desktop\": \"string\",\n        \"mark_unread\": \"string\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.view_channel": {"fullname": "scrapermost.endpoints.Channels.view_channel", "modulename": "scrapermost.endpoints", "qualname": "Channels.view_channel", "kind": "function", "doc": "<p>Perform all the actions involved in viewing a channel.</p>\n\n<p>This includes marking channels as read, clearing push notifications,\nand updating the active channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nchannel_id : str\n    The channel ID that is being viewed. Use a blank string to indicate\n    that all channels have lost focus.\nprev_channel_id : str, optional\n    The channel ID of the previous channel, used when switching\n    channels. Providing this ID will cause push notifications to\n    clear on the channel being switched to.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"fullname": "scrapermost.endpoints.Channels.get_channel_members_for_user", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_channel_members_for_user", "kind": "function", "doc": "<p>Get channel memberships and roles for a user.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nteam_id : str\n    Team GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_channels_for_user": {"fullname": "scrapermost.endpoints.Channels.get_channels_for_user", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_channels_for_user", "kind": "function", "doc": "<p>Get all the channels on a team for a user.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nteam_id : str\n    Team GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.get_unread_messages": {"fullname": "scrapermost.endpoints.Channels.get_unread_messages", "modulename": "scrapermost.endpoints", "qualname": "Channels.get_unread_messages", "kind": "function", "doc": "<p>Get the total unread messages and mentions for a channel for a user.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nchannel_id : str\n    Channel GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Channels.set_channel_scheme": {"fullname": "scrapermost.endpoints.Channels.set_channel_scheme", "modulename": "scrapermost.endpoints", "qualname": "Channels.set_channel_scheme", "kind": "function", "doc": "<p>Set a channel's scheme.</p>\n\n<p>More specifically sets the scheme_id value of a channel record.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Cluster": {"fullname": "scrapermost.endpoints.Cluster", "modulename": "scrapermost.endpoints", "qualname": "Cluster", "kind": "class", "doc": "<p>Class defining the Cluster API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='cluster'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>get_cluster_status()\n    Get cluster status.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Cluster.__init__": {"fullname": "scrapermost.endpoints.Cluster.__init__", "modulename": "scrapermost.endpoints", "qualname": "Cluster.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cluster&#39;</span></span>)</span>"}, "scrapermost.endpoints.Cluster.get_cluster_status": {"fullname": "scrapermost.endpoints.Cluster.get_cluster_status", "modulename": "scrapermost.endpoints", "qualname": "Cluster.get_cluster_status", "kind": "function", "doc": "<p>Get cluster status.</p>\n\n<p>Get a set of information for each node in the cluster, useful for\nchecking the status and health of each node.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Commands": {"fullname": "scrapermost.endpoints.Commands", "modulename": "scrapermost.endpoints", "qualname": "Commands", "kind": "class", "doc": "<p>Class defining the Commands API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='commands'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>create_command(body_json)\n    Create a command for a team.\nlist_commands_for_team(team_id, custom_only=False)\n    List commands for a team.\nlist_autocomplete_commands(team_id)\n    List autocomplete commands in the team.\nupdate_command(command_id, body_json)\n    Update a command.\ndelete_command(command_id)\n    Delete a command based on command ID string.\ngenerate_new_token(command_id)\n    Generate a new token for the command based on command ID string.\nexecute_command(channel_id, command)\n    Execute a command on a team.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Commands.__init__": {"fullname": "scrapermost.endpoints.Commands.__init__", "modulename": "scrapermost.endpoints", "qualname": "Commands.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;commands&#39;</span></span>)</span>"}, "scrapermost.endpoints.Commands.create_command": {"fullname": "scrapermost.endpoints.Commands.create_command", "modulename": "scrapermost.endpoints", "qualname": "Commands.create_command", "kind": "function", "doc": "<p>Create a command for a team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict\n    A JSON serializable object to include in the body of the request.\n    Example:\n    {\n        \"team_id\": \"string\",\n        \"method\": \"string\",\n        \"trigger\": \"string\",\n        \"url\": \"string\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Commands.list_commands_for_team": {"fullname": "scrapermost.endpoints.Commands.list_commands_for_team", "modulename": "scrapermost.endpoints", "qualname": "Commands.list_commands_for_team", "kind": "function", "doc": "<p>List commands for a team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\ncustom_only : bool, default=False\n    Whether to get only the custom commands.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"fullname": "scrapermost.endpoints.Commands.list_autocomplete_commands", "modulename": "scrapermost.endpoints", "qualname": "Commands.list_autocomplete_commands", "kind": "function", "doc": "<p>List autocomplete commands in the team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Commands.update_command": {"fullname": "scrapermost.endpoints.Commands.update_command", "modulename": "scrapermost.endpoints", "qualname": "Commands.update_command", "kind": "function", "doc": "<p>Update a command.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>command_id : str\n    ID of the command to update.\nbody_json : dict\n    The parameters to update as a dict.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Commands.delete_command": {"fullname": "scrapermost.endpoints.Commands.delete_command", "modulename": "scrapermost.endpoints", "qualname": "Commands.delete_command", "kind": "function", "doc": "<p>Delete a command based on command ID string.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>command_id : str\n    ID of the command to update.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Commands.generate_new_token": {"fullname": "scrapermost.endpoints.Commands.generate_new_token", "modulename": "scrapermost.endpoints", "qualname": "Commands.generate_new_token", "kind": "function", "doc": "<p>Generate a new token for the command based on command ID string.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>command_id : str\n    ID of the command to update.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Commands.execute_command": {"fullname": "scrapermost.endpoints.Commands.execute_command", "modulename": "scrapermost.endpoints", "qualname": "Commands.execute_command", "kind": "function", "doc": "<p>Execute a command on a team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    ID of the channel in which the command will execute.\ncommand : str\n    The slash command to execute, including parameters.\n    Example: '/echo bounces around the room'</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Compliance": {"fullname": "scrapermost.endpoints.Compliance", "modulename": "scrapermost.endpoints", "qualname": "Compliance", "kind": "class", "doc": "<p>Class defining the Compliance API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='compliance'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>create_report()\n    Create and save a compliance report.\nget_reports(page=0, per_page=60)\n    Get a list of compliance reports previously created by page.\nget_report(report_id)\n    Get a compliance reports previously created.\ndownload_report(report_id)\n    Download the full contents of a report as a file.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Compliance.__init__": {"fullname": "scrapermost.endpoints.Compliance.__init__", "modulename": "scrapermost.endpoints", "qualname": "Compliance.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;compliance&#39;</span></span>)</span>"}, "scrapermost.endpoints.Compliance.create_report": {"fullname": "scrapermost.endpoints.Compliance.create_report", "modulename": "scrapermost.endpoints", "qualname": "Compliance.create_report", "kind": "function", "doc": "<p>Create and save a compliance report.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Compliance.get_reports": {"fullname": "scrapermost.endpoints.Compliance.get_reports", "modulename": "scrapermost.endpoints", "qualname": "Compliance.get_reports", "kind": "function", "doc": "<p>Get a list of compliance reports previously created by page.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>page : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Compliance.get_report": {"fullname": "scrapermost.endpoints.Compliance.get_report", "modulename": "scrapermost.endpoints", "qualname": "Compliance.get_report", "kind": "function", "doc": "<p>Get a compliance reports previously created.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>report_id : str\n    Compliance report GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Compliance.download_report": {"fullname": "scrapermost.endpoints.Compliance.download_report", "modulename": "scrapermost.endpoints", "qualname": "Compliance.download_report", "kind": "function", "doc": "<p>Download the full contents of a report as a file.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>report_id : str\n    Compliance report GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.DataRetention": {"fullname": "scrapermost.endpoints.DataRetention", "modulename": "scrapermost.endpoints", "qualname": "DataRetention", "kind": "class", "doc": "<p>Class defining the Data retention policy API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='data_retention'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>get_data_retention_policy()\n    Get the policies which are applied to a user's teams.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.DataRetention.__init__": {"fullname": "scrapermost.endpoints.DataRetention.__init__", "modulename": "scrapermost.endpoints", "qualname": "DataRetention.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;data_retention&#39;</span></span>)</span>"}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"fullname": "scrapermost.endpoints.DataRetention.get_data_retention_policy", "modulename": "scrapermost.endpoints", "qualname": "DataRetention.get_data_retention_policy", "kind": "function", "doc": "<p>Get the policies which are applied to a user's teams.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Elasticsearch": {"fullname": "scrapermost.endpoints.Elasticsearch", "modulename": "scrapermost.endpoints", "qualname": "Elasticsearch", "kind": "class", "doc": "<p>Class defining the ElasticSearch API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='elasticsearch'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>test_elasticsearch_configuration()\n    Test Elasticsearch configuration.\npurge_all_elasticsearch_indexes()\n    Purge all Elasticsearch indexes.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Elasticsearch.__init__": {"fullname": "scrapermost.endpoints.Elasticsearch.__init__", "modulename": "scrapermost.endpoints", "qualname": "Elasticsearch.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;elasticsearch&#39;</span></span>)</span>"}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"fullname": "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration", "modulename": "scrapermost.endpoints", "qualname": "Elasticsearch.test_elasticsearch_configuration", "kind": "function", "doc": "<p>Test Elasticsearch configuration.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"fullname": "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes", "modulename": "scrapermost.endpoints", "qualname": "Elasticsearch.purge_all_elasticsearch_indexes", "kind": "function", "doc": "<p>Purge all Elasticsearch indexes.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Emoji": {"fullname": "scrapermost.endpoints.Emoji", "modulename": "scrapermost.endpoints", "qualname": "Emoji", "kind": "class", "doc": "<p>Class defining the Emoji API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='emoji'\n    The endpoint path.\nget_emoji_list(page=0, per_page=60, sort='')\n    Get a list of custom emoji.\nget_custom_emoji(emoji_id)\n    Get some metadata for a custom emoji.\ndelete_custom_emoji(emoji_id)\n    Delete a custom emoji.\nget_custom_emoji_by_name(name)\n    Get some metadata for a custom emoji using its name.\nget_custom_emoji_image(emoji_id)\n    Get the image for a custom emoji.\nsearch_custom_emoji(term, prefix_only=None)\n    Search for custom emoji by name based on search criteria.\nautocomplete_custom_emoji(name)\n    Autocomplete custom emoji.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>create_custom_emoji(emoji_name, image)\n    Create a custom emoji for the team.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Emoji.__init__": {"fullname": "scrapermost.endpoints.Emoji.__init__", "modulename": "scrapermost.endpoints", "qualname": "Emoji.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;emoji&#39;</span></span>)</span>"}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"fullname": "scrapermost.endpoints.Emoji.create_custom_emoji", "modulename": "scrapermost.endpoints", "qualname": "Emoji.create_custom_emoji", "kind": "function", "doc": "<p>Create a custom emoji for the team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>emoji_name : str\n    The emoji name.\nimage : str\n    The image's bytes string to be uploaded.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Emoji.get_emoji_list": {"fullname": "scrapermost.endpoints.Emoji.get_emoji_list", "modulename": "scrapermost.endpoints", "qualname": "Emoji.get_emoji_list", "kind": "function", "doc": "<p>Get a page of public channels on a team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>page : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).\nsort : '' or 'names', default=''\n    Either blank for no sorting or \"name\" to sort by emoji names.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"fullname": "scrapermost.endpoints.Emoji.get_custom_emoji", "modulename": "scrapermost.endpoints", "qualname": "Emoji.get_custom_emoji", "kind": "function", "doc": "<p>Get some metadata for a custom emoji.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>emoji_id : str\n    Emoji GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"fullname": "scrapermost.endpoints.Emoji.delete_custom_emoji", "modulename": "scrapermost.endpoints", "qualname": "Emoji.delete_custom_emoji", "kind": "function", "doc": "<p>Delete a custom emoji.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>emoji_id : str\n    Emoji GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"fullname": "scrapermost.endpoints.Emoji.get_custom_emoji_by_name", "modulename": "scrapermost.endpoints", "qualname": "Emoji.get_custom_emoji_by_name", "kind": "function", "doc": "<p>Get some metadata for a custom emoji using its name.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    Emoji GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"fullname": "scrapermost.endpoints.Emoji.get_custom_emoji_image", "modulename": "scrapermost.endpoints", "qualname": "Emoji.get_custom_emoji_image", "kind": "function", "doc": "<p>Get the image for a custom emoji.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>emoji_id : str\n    Emoji GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"fullname": "scrapermost.endpoints.Emoji.search_custom_emoji", "modulename": "scrapermost.endpoints", "qualname": "Emoji.search_custom_emoji", "kind": "function", "doc": "<p>Search for custom emoji by name based on search criteria.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>term : str\n    The term to match against the emoji name.\nprefix_only : str, optional\n    Set to only search for names starting with the search term.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"fullname": "scrapermost.endpoints.Emoji.autocomplete_custom_emoji", "modulename": "scrapermost.endpoints", "qualname": "Emoji.autocomplete_custom_emoji", "kind": "function", "doc": "<p>Autocomplete custom emoji.</p>\n\n<p>Get a list of custom emoji with names starting with or matching the\nprovided name. Returns a maximum of 100 results.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    The emoji name to search.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Files": {"fullname": "scrapermost.endpoints.Files", "modulename": "scrapermost.endpoints", "qualname": "Files", "kind": "class", "doc": "<p>Class defining the Files API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='files'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>upload_file(channel_id, files)\n    Upload a file that can later be attached to a post.\nget_file(file_id)\n    Get a file that has been uploaded previously.\nget_file_thumbnail(file_id)\n    Get a file's thumbnail.\nget_file_preview(file_id)\n    Get a file's preview.\nget_public_file_link(file_id)\n    Get a public file link.\nget_file_metadata(file_id)\n    Get a file's info.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Files.__init__": {"fullname": "scrapermost.endpoints.Files.__init__", "modulename": "scrapermost.endpoints", "qualname": "Files.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;files&#39;</span></span>)</span>"}, "scrapermost.endpoints.Files.upload_file": {"fullname": "scrapermost.endpoints.Files.upload_file", "modulename": "scrapermost.endpoints", "qualname": "Files.upload_file", "kind": "function", "doc": "<p>Upload a file that can later be attached to a post.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    Channel GUID.\nfiles : dict\n    The image's bytes string to be uploaded.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Files.get_file": {"fullname": "scrapermost.endpoints.Files.get_file", "modulename": "scrapermost.endpoints", "qualname": "Files.get_file", "kind": "function", "doc": "<p>Get a file that has been uploaded previously.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>file_id : str\n    File GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">file_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "scrapermost.endpoints.Files.get_file_thumbnail": {"fullname": "scrapermost.endpoints.Files.get_file_thumbnail", "modulename": "scrapermost.endpoints", "qualname": "Files.get_file_thumbnail", "kind": "function", "doc": "<p>Get a file's thumbnail.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>file_id : str\n    File GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Files.get_file_preview": {"fullname": "scrapermost.endpoints.Files.get_file_preview", "modulename": "scrapermost.endpoints", "qualname": "Files.get_file_preview", "kind": "function", "doc": "<p>Get a file's preview.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>file_id : str\n    File GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Files.get_public_file_link": {"fullname": "scrapermost.endpoints.Files.get_public_file_link", "modulename": "scrapermost.endpoints", "qualname": "Files.get_public_file_link", "kind": "function", "doc": "<p>Get a public file link.</p>\n\n<p>Get a public link for a file that can be accessed without logging\ninto Mattermost.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>file_id : str\n    File GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Files.get_file_metadata": {"fullname": "scrapermost.endpoints.Files.get_file_metadata", "modulename": "scrapermost.endpoints", "qualname": "Files.get_file_metadata", "kind": "function", "doc": "<p>Get a file's info.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>file_id : str\n    File GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.IntegrationActions": {"fullname": "scrapermost.endpoints.IntegrationActions", "modulename": "scrapermost.endpoints", "qualname": "IntegrationActions", "kind": "class", "doc": "<p>Class defining the integrations actions API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='actions'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>open_dialog(body_json)\n    Open an interactive dialog.\nsubmit_dialog(body_json)\n    Submit a dialog.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.IntegrationActions.__init__": {"fullname": "scrapermost.endpoints.IntegrationActions.__init__", "modulename": "scrapermost.endpoints", "qualname": "IntegrationActions.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;actions&#39;</span></span>)</span>"}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"fullname": "scrapermost.endpoints.IntegrationActions.open_dialog", "modulename": "scrapermost.endpoints", "qualname": "IntegrationActions.open_dialog", "kind": "function", "doc": "<p>Open an interactive dialog.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"fullname": "scrapermost.endpoints.IntegrationActions.submit_dialog", "modulename": "scrapermost.endpoints", "qualname": "IntegrationActions.submit_dialog", "kind": "function", "doc": "<p>Submit a dialog.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.LDAP": {"fullname": "scrapermost.endpoints.LDAP", "modulename": "scrapermost.endpoints", "qualname": "LDAP", "kind": "class", "doc": "<p>Class defining the LDAP API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='ldap'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>sync_ldap()\n    Sync with LDAP.\ntest_ldap_config()\n    Test LDAP configuration.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.LDAP.__init__": {"fullname": "scrapermost.endpoints.LDAP.__init__", "modulename": "scrapermost.endpoints", "qualname": "LDAP.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ldap&#39;</span></span>)</span>"}, "scrapermost.endpoints.LDAP.sync_ldap": {"fullname": "scrapermost.endpoints.LDAP.sync_ldap", "modulename": "scrapermost.endpoints", "qualname": "LDAP.sync_ldap", "kind": "function", "doc": "<p>Sync with LDAP.</p>\n\n<p>Synchronize any user attribute changes in the configured AD/LDAP server\nwith Mattermost.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.LDAP.test_ldap_config": {"fullname": "scrapermost.endpoints.LDAP.test_ldap_config", "modulename": "scrapermost.endpoints", "qualname": "LDAP.test_ldap_config", "kind": "function", "doc": "<p>Test LDAP configuration.</p>\n\n<p>Test the current AD/LDAP configuration to see if the AD/LDAP server can\nbe contacted successfully.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.OAuth": {"fullname": "scrapermost.endpoints.OAuth", "modulename": "scrapermost.endpoints", "qualname": "OAuth", "kind": "class", "doc": "<p>Class defining the OAuth API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='oauth'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>register_oauth_app(body_json)\n    Register an OAuth 2.0 client application.\nget_oauth_apps(page=0, per_page=60)\n    Get a page of OAuth 2.0 client applications.\nget_oauth_app(app_id)\n    Get an OAuth 2.0 client application.\ndelete_oauth_app(app_id)\n    Delete and unregister an OAuth 2.0 client application.\nregenerate_oauth_app_secret(app_id)\n    Regenerate the client secret for an OAuth 2.0 client app.\nget_info_on_oauth_app(app_id)\n    Get public information about an OAuth 2.0 client application.\nget_authorized_oauth_apps(user_id, page=0, per_page=60)\n    Get a page of OAuth 2.0 client apps that can access user accounts.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.OAuth.__init__": {"fullname": "scrapermost.endpoints.OAuth.__init__", "modulename": "scrapermost.endpoints", "qualname": "OAuth.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;oauth&#39;</span></span>)</span>"}, "scrapermost.endpoints.OAuth.register_oauth_app": {"fullname": "scrapermost.endpoints.OAuth.register_oauth_app", "modulename": "scrapermost.endpoints", "qualname": "OAuth.register_oauth_app", "kind": "function", "doc": "<p>Register an OAuth 2.0 client application.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict\n    The OAuth application settings as a dict.\n    Example:\n    {\n        \"name\": \"string\",\n        \"description\": \"string\",\n        \"icon_url\": \"string\",\n        \"callback_urls\": [\n            \"string\"\n        ],\n        \"homepage\": \"string\",\n        \"is_trusted\": true\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"fullname": "scrapermost.endpoints.OAuth.get_oauth_apps", "modulename": "scrapermost.endpoints", "qualname": "OAuth.get_oauth_apps", "kind": "function", "doc": "<p>Get a page of OAuth 2.0 client applications.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>page : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.OAuth.get_oauth_app": {"fullname": "scrapermost.endpoints.OAuth.get_oauth_app", "modulename": "scrapermost.endpoints", "qualname": "OAuth.get_oauth_app", "kind": "function", "doc": "<p>Get an OAuth 2.0 client application.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>app_id : str\n    Application client ID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"fullname": "scrapermost.endpoints.OAuth.delete_oauth_app", "modulename": "scrapermost.endpoints", "qualname": "OAuth.delete_oauth_app", "kind": "function", "doc": "<p>Delete and unregister an OAuth 2.0 client application.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>app_id : str\n    Application client ID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"fullname": "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret", "modulename": "scrapermost.endpoints", "qualname": "OAuth.regenerate_oauth_app_secret", "kind": "function", "doc": "<p>Regenerate the client secret for an OAuth 2.0 client app.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>app_id : str\n    Application client ID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"fullname": "scrapermost.endpoints.OAuth.get_info_on_oauth_app", "modulename": "scrapermost.endpoints", "qualname": "OAuth.get_info_on_oauth_app", "kind": "function", "doc": "<p>Get public information about an OAuth 2.0 client application.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>app_id : str\n    Application client ID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"fullname": "scrapermost.endpoints.OAuth.get_authorized_oauth_apps", "modulename": "scrapermost.endpoints", "qualname": "OAuth.get_authorized_oauth_apps", "kind": "function", "doc": "<p>Get a page of OAuth 2.0 client apps that can access user accounts.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\npage : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Opengraph": {"fullname": "scrapermost.endpoints.Opengraph", "modulename": "scrapermost.endpoints", "qualname": "Opengraph", "kind": "class", "doc": "<p>Class defining the OpenGraph API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='opengraph'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>get_opengraph_metadata_for_url(body_json)\n    Get Open Graph Metadata for a specif URL.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Opengraph.__init__": {"fullname": "scrapermost.endpoints.Opengraph.__init__", "modulename": "scrapermost.endpoints", "qualname": "Opengraph.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;opengraph&#39;</span></span>)</span>"}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"fullname": "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url", "modulename": "scrapermost.endpoints", "qualname": "Opengraph.get_opengraph_metadata_for_url", "kind": "function", "doc": "<p>Get Open Graph Metadata for a specif URL.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts": {"fullname": "scrapermost.endpoints.Posts", "modulename": "scrapermost.endpoints", "qualname": "Posts", "kind": "class", "doc": "<p>Class defining the Posts API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='posts'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>create_post(body_json)\n    Create a new post in a channel.\ncreate_ephemeral_post(body_json)\n    Create a new ephemeral post in a channel.\nget_post(post_id)\n    Get channel from the provided channel ID string.\ndelete_post(post_id)\n    Mark the post as deleted in the database.\nupdate_post(post_id, body_json)\n    Update a post.\npatch_post(post_id, body_json)\n    Update a post partially by providing only the fields to update.\nget_thread(post_id)\n    Get a post and the rest of the posts in the same thread.\nget_list_of_flagged_posts(user_id)\n    Get a page of flagged posts of a user provided user ID string.\nget_file_info_for_post(post_id)\n    Get a list of information for the files attached to a post.\nget_posts_for_channel(channel_id, params)\n    Get a page of posts in a channel.\nget_unread_posts_for_channel(user_id, channel_id, params=None)\n    Get posts around oldest unread.\nsearch_for_team_posts(team_id, body_json)\n    Search posts in the team and from the provided terms string.\npin_post_to_channel(post_id)\n    Pin a post to the channel.\nunpin_post_to_channel(post_id)\n    Unpin a post to the channel.\nperform_post_action(post_id, action_id)\n    Perform a post action.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Posts.__init__": {"fullname": "scrapermost.endpoints.Posts.__init__", "modulename": "scrapermost.endpoints", "qualname": "Posts.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;posts&#39;</span></span>)</span>"}, "scrapermost.endpoints.Posts.create_post": {"fullname": "scrapermost.endpoints.Posts.create_post", "modulename": "scrapermost.endpoints", "qualname": "Posts.create_post", "kind": "function", "doc": "<p>Create a new post in a channel.</p>\n\n<p>To create the post as a comment on another post, provide root_id.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict\n    The post content and settings as a dict.\n    Example:\n    {\n        \"channel_id\": \"string\",\n        \"message\": \"string\",\n        \"root_id\": \"string\",\n        \"file_ids\": [\n            \"string\"\n        ],\n        \"props\": {}\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"fullname": "scrapermost.endpoints.Posts.create_ephemeral_post", "modulename": "scrapermost.endpoints", "qualname": "Posts.create_ephemeral_post", "kind": "function", "doc": "<p>Create a new ephemeral post in a channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict\n    The post content and settings as a dict.\n    Example:\n    {\n        \"user_id\": \"string\",\n        \"post\": {\n            \"channel_id\": \"string\",\n            \"message\": \"string\"\n        }\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.get_post": {"fullname": "scrapermost.endpoints.Posts.get_post", "modulename": "scrapermost.endpoints", "qualname": "Posts.get_post", "kind": "function", "doc": "<p>Get channel from the provided channel ID string.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>post_id : str\n    ID of the post to get.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.delete_post": {"fullname": "scrapermost.endpoints.Posts.delete_post", "modulename": "scrapermost.endpoints", "qualname": "Posts.delete_post", "kind": "function", "doc": "<p>Mark the post as deleted in the database.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>post_id : str\n    ID of the post to delete.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.update_post": {"fullname": "scrapermost.endpoints.Posts.update_post", "modulename": "scrapermost.endpoints", "qualname": "Posts.update_post", "kind": "function", "doc": "<p>Update a post.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>post_id : str\n    ID of the post to update.\nbody_json : dict\n    The post content and settings as a dict.\n    Example:\n    {\n        \"id\": \"string\",\n        \"is_pinned\": true,\n        \"message\": \"string\",\n        \"has_reactions\": true,\n        \"props\": \"string\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.patch_post": {"fullname": "scrapermost.endpoints.Posts.patch_post", "modulename": "scrapermost.endpoints", "qualname": "Posts.patch_post", "kind": "function", "doc": "<p>Update a post partially by providing only the fields to update.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>post_id : str\n    ID of the post to update.\nbody_json : dict\n    The post content and settings as a dict.\n    Example:\n    {\n        \"is_pinned\": true,\n        \"message\": \"string\",\n        \"file_ids\": [\n            \"string\"\n        ],\n        \"has_reactions\": true,\n        \"props\": \"string\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.get_thread": {"fullname": "scrapermost.endpoints.Posts.get_thread", "modulename": "scrapermost.endpoints", "qualname": "Posts.get_thread", "kind": "function", "doc": "<p>Get a post and the rest of the posts in the same thread.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>post_id : str\n    ID of a post in the thread.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"fullname": "scrapermost.endpoints.Posts.get_list_of_flagged_posts", "modulename": "scrapermost.endpoints", "qualname": "Posts.get_list_of_flagged_posts", "kind": "function", "doc": "<p>Get a page of flagged posts of a user provided user ID string.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nparams : dict, optional\n    Query parameters to include.\n    Example:\n    {\n        \"team_id\": \"string\",\n        \"channel_id\": \"string\",\n        \"page\": 0,\n        \"per_page\": 60\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"fullname": "scrapermost.endpoints.Posts.get_file_info_for_post", "modulename": "scrapermost.endpoints", "qualname": "Posts.get_file_info_for_post", "kind": "function", "doc": "<p>Get a list of information for the files attached to a post.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>post_id : str\n    Post GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"fullname": "scrapermost.endpoints.Posts.get_posts_for_channel", "modulename": "scrapermost.endpoints", "qualname": "Posts.get_posts_for_channel", "kind": "function", "doc": "<p>Get a page of posts in a channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>channel_id : str\n    The channel ID to get the posts for.\nparams : dict, optional\n    Query parameters to include.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"fullname": "scrapermost.endpoints.Posts.get_unread_posts_for_channel", "modulename": "scrapermost.endpoints", "qualname": "Posts.get_unread_posts_for_channel", "kind": "function", "doc": "<p>Get posts around oldest unread.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nchannel_id : str\n    Channel GUID.\nparams : dict, optional\n    Query parameters to include.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.search_for_team_posts": {"fullname": "scrapermost.endpoints.Posts.search_for_team_posts", "modulename": "scrapermost.endpoints", "qualname": "Posts.search_for_team_posts", "kind": "function", "doc": "<p>Search posts in the team and from the provided terms string.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nbody_json : dict\n    The search settings as a dict.\n    Example:\n    {\n        \"terms\": \"string\",\n        \"is_or_search\": true,\n        \"time_zone_offset\": 0,\n        \"include_deleted_channels\": true,\n        \"page\": 0,\n        \"per_page\": 60\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"fullname": "scrapermost.endpoints.Posts.pin_post_to_channel", "modulename": "scrapermost.endpoints", "qualname": "Posts.pin_post_to_channel", "kind": "function", "doc": "<p>Pin a post to the channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>post_id : str\n    Post GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"fullname": "scrapermost.endpoints.Posts.unpin_post_to_channel", "modulename": "scrapermost.endpoints", "qualname": "Posts.unpin_post_to_channel", "kind": "function", "doc": "<p>Unpin a post to the channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>post_id : str\n    Post GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Posts.perform_post_action": {"fullname": "scrapermost.endpoints.Posts.perform_post_action", "modulename": "scrapermost.endpoints", "qualname": "Posts.perform_post_action", "kind": "function", "doc": "<p>Perform a post action.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>post_id : str\n    Post GUID.\naction_id : str\n    Action GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Preferences": {"fullname": "scrapermost.endpoints.Preferences", "modulename": "scrapermost.endpoints", "qualname": "Preferences", "kind": "class", "doc": "<p>Class defining the user preferences API endpoint.</p>\n\n<p>Note the endpoint is /user and not /preferences.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='user'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>get_user_preferences(user_id)\n    Get a list of the user's preferences.\nsave_user_preferences(user_id, preferences)\n    Save a list of the user's preferences.\ndelete_user_preferences(user_id, preferences)\n    Delete a list of the user's preferences.\nlist_user_preferences_by_category(user_id, category)\n    List the current user's stored preferences in the given category.\nget_specific_user_preference(user_id, category, preference_name)\n    Get a single preference for the current user.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Preferences.__init__": {"fullname": "scrapermost.endpoints.Preferences.__init__", "modulename": "scrapermost.endpoints", "qualname": "Preferences.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;users&#39;</span></span>)</span>"}, "scrapermost.endpoints.Preferences.get_user_preferences": {"fullname": "scrapermost.endpoints.Preferences.get_user_preferences", "modulename": "scrapermost.endpoints", "qualname": "Preferences.get_user_preferences", "kind": "function", "doc": "<p>Get a list of the user's preferences.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Preferences.save_user_preferences": {"fullname": "scrapermost.endpoints.Preferences.save_user_preferences", "modulename": "scrapermost.endpoints", "qualname": "Preferences.save_user_preferences", "kind": "function", "doc": "<p>Save a list of the user's preferences.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\npreferences : list of dict\n    List of preference objects.\n    Example:\n    [\n        {\n            \"user_id\": \"string\",\n            \"category\": \"string\",\n            \"name\": \"string\",\n            \"value\": \"string\"\n        }\n    ]</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"fullname": "scrapermost.endpoints.Preferences.delete_user_preferences", "modulename": "scrapermost.endpoints", "qualname": "Preferences.delete_user_preferences", "kind": "function", "doc": "<p>Delete a list of the user's preferences.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\npreferences : list of dict\n    List of preference objects.\n    Example:\n    [\n        {\n            \"user_id\": \"string\",\n            \"category\": \"string\",\n            \"name\": \"string\",\n            \"value\": \"string\"\n        }\n    ]</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"fullname": "scrapermost.endpoints.Preferences.list_user_preferences_by_category", "modulename": "scrapermost.endpoints", "qualname": "Preferences.list_user_preferences_by_category", "kind": "function", "doc": "<p>List the current user's stored preferences in the given category.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\ncategory : str\n    The category of a group of preferences.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"fullname": "scrapermost.endpoints.Preferences.get_specific_user_preference", "modulename": "scrapermost.endpoints", "qualname": "Preferences.get_specific_user_preference", "kind": "function", "doc": "<p>Get a single preference for the current user.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\ncategory : str\n    The category of a group of preferences.\npreference_name : str\n    Preference name.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Reactions": {"fullname": "scrapermost.endpoints.Reactions", "modulename": "scrapermost.endpoints", "qualname": "Reactions", "kind": "class", "doc": "<p>Class defining the Emoji reactions API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='reactions'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>create_reaction(body_json)\n    Create a reaction.\nget_reactions_of_post(post_id)\n    Get a list of reactions made by all users to a given post.\ndelete_reaction(user_id, post_id, emoji_name)\n    Delete a reaction made by a user from the given post.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Reactions.__init__": {"fullname": "scrapermost.endpoints.Reactions.__init__", "modulename": "scrapermost.endpoints", "qualname": "Reactions.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;reactions&#39;</span></span>)</span>"}, "scrapermost.endpoints.Reactions.create_reaction": {"fullname": "scrapermost.endpoints.Reactions.create_reaction", "modulename": "scrapermost.endpoints", "qualname": "Reactions.create_reaction", "kind": "function", "doc": "<p>Create a reaction.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict\n    The reaction settings as a dict.\n    Example:\n    {\n        \"user_id\": \"string\",\n        \"post_id\": \"string\",\n        \"emoji_name\": \"string\",\n        \"create_at\": 0\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"fullname": "scrapermost.endpoints.Reactions.get_reactions_of_post", "modulename": "scrapermost.endpoints", "qualname": "Reactions.get_reactions_of_post", "kind": "function", "doc": "<p>Get a list of reactions made by all users to a given post.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>post_id : str\n    Post GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Reactions.delete_reaction": {"fullname": "scrapermost.endpoints.Reactions.delete_reaction", "modulename": "scrapermost.endpoints", "qualname": "Reactions.delete_reaction", "kind": "function", "doc": "<p>Delete a reaction made by a user from the given post.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\npost_id : str\n    Post GUID.\nemoji_name : str\n    Emoji name.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Roles": {"fullname": "scrapermost.endpoints.Roles", "modulename": "scrapermost.endpoints", "qualname": "Roles", "kind": "class", "doc": "<p>Class defining the Roles API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='roles'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>get_role_by_id(role_id)\n    Get a role from the provided role ID.\nget_role_by_name(role_name)\n    Get a role from the provided role name.\npatch_role(role_id, body_json)\n    Update a role partially by providing only the fields to update.\nget_list_of_roles_by_name()\n    Get a list of roles from their names.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Roles.__init__": {"fullname": "scrapermost.endpoints.Roles.__init__", "modulename": "scrapermost.endpoints", "qualname": "Roles.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;roles&#39;</span></span>)</span>"}, "scrapermost.endpoints.Roles.get_role_by_id": {"fullname": "scrapermost.endpoints.Roles.get_role_by_id", "modulename": "scrapermost.endpoints", "qualname": "Roles.get_role_by_id", "kind": "function", "doc": "<p>Get a role from the provided role ID.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>role_id : str\n    Role GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Roles.get_role_by_name": {"fullname": "scrapermost.endpoints.Roles.get_role_by_name", "modulename": "scrapermost.endpoints", "qualname": "Roles.get_role_by_name", "kind": "function", "doc": "<p>Get a role from the provided role ID.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>role_name : str\n    Role name.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Roles.patch_role": {"fullname": "scrapermost.endpoints.Roles.patch_role", "modulename": "scrapermost.endpoints", "qualname": "Roles.patch_role", "kind": "function", "doc": "<p>Update a role partially by providing only the fields to update.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>role_id : str\n    Role GUID.\nbody_json : dict\n    The role settings as a dict.\n    Example:\n    {\n        \"permissions\": [\n            \"string\"\n        ]\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"fullname": "scrapermost.endpoints.Roles.get_list_of_roles_by_name", "modulename": "scrapermost.endpoints", "qualname": "Roles.get_list_of_roles_by_name", "kind": "function", "doc": "<p>Get a list of roles from their names.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.SAML": {"fullname": "scrapermost.endpoints.SAML", "modulename": "scrapermost.endpoints", "qualname": "SAML", "kind": "class", "doc": "<p>Class defining the SAML API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='saml'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>get_metadata()\n    Get SAML metadata from the server.\nupload_idp_certificate(files)\n    Upload IDP certificate.\nremove_idp_certificate()\n    Delete the current IDP certificate being used.\nupload_public_certificate(files)\n    Upload the public certificate to be used for encryption.\nremove_public_certificate()\n    Delete the current public certificate being used.\nupload_private_key(files)\n    Upload the private key to be used for encryption.\nremove_private_key()\n    Delete the current private key being used.\nget_certificate_status()\n    Get the status of the uploaded certificates and keys in use.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.SAML.__init__": {"fullname": "scrapermost.endpoints.SAML.__init__", "modulename": "scrapermost.endpoints", "qualname": "SAML.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;saml&#39;</span></span>)</span>"}, "scrapermost.endpoints.SAML.get_metadata": {"fullname": "scrapermost.endpoints.SAML.get_metadata", "modulename": "scrapermost.endpoints", "qualname": "SAML.get_metadata", "kind": "function", "doc": "<p>Get SAML metadata from the server.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"fullname": "scrapermost.endpoints.SAML.upload_idp_certificate", "modulename": "scrapermost.endpoints", "qualname": "SAML.upload_idp_certificate", "kind": "function", "doc": "<p>Upload IDP certificate.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>files : dict\n    The image's bytes string to be uploaded.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"fullname": "scrapermost.endpoints.SAML.remove_idp_certificate", "modulename": "scrapermost.endpoints", "qualname": "SAML.remove_idp_certificate", "kind": "function", "doc": "<p>Delete the current IDP certificate being used.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.SAML.upload_public_certificate": {"fullname": "scrapermost.endpoints.SAML.upload_public_certificate", "modulename": "scrapermost.endpoints", "qualname": "SAML.upload_public_certificate", "kind": "function", "doc": "<p>Upload the public certificate to be used for encryption.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>files : dict\n    The image's bytes string to be uploaded.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.SAML.remove_public_certificate": {"fullname": "scrapermost.endpoints.SAML.remove_public_certificate", "modulename": "scrapermost.endpoints", "qualname": "SAML.remove_public_certificate", "kind": "function", "doc": "<p>Delete the current public certificate being used.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.SAML.upload_private_key": {"fullname": "scrapermost.endpoints.SAML.upload_private_key", "modulename": "scrapermost.endpoints", "qualname": "SAML.upload_private_key", "kind": "function", "doc": "<p>Upload the private key to be used for encryption.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>files : dict\n    The image's bytes string to be uploaded.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.SAML.remove_private_key": {"fullname": "scrapermost.endpoints.SAML.remove_private_key", "modulename": "scrapermost.endpoints", "qualname": "SAML.remove_private_key", "kind": "function", "doc": "<p>Delete the current private key being used.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.SAML.get_certificate_status": {"fullname": "scrapermost.endpoints.SAML.get_certificate_status", "modulename": "scrapermost.endpoints", "qualname": "SAML.get_certificate_status", "kind": "function", "doc": "<p>Get the status of the uploaded certificates and keys in use.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Status": {"fullname": "scrapermost.endpoints.Status", "modulename": "scrapermost.endpoints", "qualname": "Status", "kind": "class", "doc": "<p>Class defining the user status API endpoint.</p>\n\n<p>Note the endpoint is /user and not /status.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='user'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>get_user_status(user_id)\n    Get user status by ID from the server.\nupdate_user_status(user_id, body_json=None)\n    Manually set a user's status.\nget_user_statuses_by_id(body_json=None)\n    Get a list of user statuses by ID from the server.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Status.__init__": {"fullname": "scrapermost.endpoints.Status.__init__", "modulename": "scrapermost.endpoints", "qualname": "Status.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;users&#39;</span></span>)</span>"}, "scrapermost.endpoints.Status.get_user_status": {"fullname": "scrapermost.endpoints.Status.get_user_status", "modulename": "scrapermost.endpoints", "qualname": "Status.get_user_status", "kind": "function", "doc": "<p>Get user status by ID from the server.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Status.update_user_status": {"fullname": "scrapermost.endpoints.Status.update_user_status", "modulename": "scrapermost.endpoints", "qualname": "Status.update_user_status", "kind": "function", "doc": "<p>Manually set a user's status.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nbody_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"fullname": "scrapermost.endpoints.Status.get_user_statuses_by_id", "modulename": "scrapermost.endpoints", "qualname": "Status.get_user_statuses_by_id", "kind": "function", "doc": "<p>Get a list of user statuses by ID from the server.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System": {"fullname": "scrapermost.endpoints.System", "modulename": "scrapermost.endpoints", "qualname": "System", "kind": "class", "doc": "<p>Class defining the system API endpoint.</p>\n\n<p>This endpoint has a mix of different endpoints, not only /system</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>check_system_health()\n    Check system health.\nrecycle_database_connection()\n    Recycle database connections.\nsend_test_email(body_json)\n    Send a test email.\nget_configuration()\n    Retrieve the current server configuration.\nupdate_configuration(body_json)\n    Submit a new configuration for the server to use.\nreload_configuration()\n    Reload the configuration file to pick up on any changes made to it.\nget_client_configuration(params)\n    Get a subset of the server configuration needed by the client.\nupload_license_file(files)\n    Upload a license to enable enterprise features.\nremove_license_file()\n    Remove the license file from the server.\nget_client_license(params)\n    Get a subset of the server license needed by the client.\nget_audits(page=0, per_page=60)\n    Get a page of audits for all users on the system.\ninvalidate_all_caches()\n    Purge all the in-memory caches for the Mattermost server.\nget_logs(page=0, per_page=60)\n    Get a page of server logs.\nadd_log_message(level, message)\n    Add log messages to the server logs.\nget_analytics(params)\n    Get some analytics data about the system.\nget_configuration_environment()\n    Get configuration made through environment variables.\ntest_aws_s3_connection(body_json=None)\n    Test AWS S3 connection.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.System.__init__": {"fullname": "scrapermost.endpoints.System.__init__", "modulename": "scrapermost.endpoints", "qualname": "System.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span></span>)</span>"}, "scrapermost.endpoints.System.check_system_health": {"fullname": "scrapermost.endpoints.System.check_system_health", "modulename": "scrapermost.endpoints", "qualname": "System.check_system_health", "kind": "function", "doc": "<p>Check system health.</p>\n\n<p>Check if the server is up and healthy based on the configuration\nsetting GoRoutineHealthThreshold.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.recycle_database_connection": {"fullname": "scrapermost.endpoints.System.recycle_database_connection", "modulename": "scrapermost.endpoints", "qualname": "System.recycle_database_connection", "kind": "function", "doc": "<p>Recycle database connections.</p>\n\n<p>Recycle database connections by closing and reconnecting all\nconnections to master and read replica databases.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.send_test_email": {"fullname": "scrapermost.endpoints.System.send_test_email", "modulename": "scrapermost.endpoints", "qualname": "System.send_test_email", "kind": "function", "doc": "<p>Send a test email.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict\n    Mattermost configuration as a dict.\n    <a href=\"https://api.mattermost.com/#tag/system/operation/TestEmail\">https://api.mattermost.com/#tag/system/operation/TestEmail</a></p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.get_configuration": {"fullname": "scrapermost.endpoints.System.get_configuration", "modulename": "scrapermost.endpoints", "qualname": "System.get_configuration", "kind": "function", "doc": "<p>Retrieve the current server configuration.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.update_configuration": {"fullname": "scrapermost.endpoints.System.update_configuration", "modulename": "scrapermost.endpoints", "qualname": "System.update_configuration", "kind": "function", "doc": "<p>Submit a new configuration for the server to use.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict\n    Mattermost configuration as a dict.\n    <a href=\"https://api.mattermost.com/#tag/system/operation/UpdateConfig\">https://api.mattermost.com/#tag/system/operation/UpdateConfig</a></p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.reload_configuration": {"fullname": "scrapermost.endpoints.System.reload_configuration", "modulename": "scrapermost.endpoints", "qualname": "System.reload_configuration", "kind": "function", "doc": "<p>Reload the configuration file to pick up on any changes made to it.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.get_client_configuration": {"fullname": "scrapermost.endpoints.System.get_client_configuration", "modulename": "scrapermost.endpoints", "qualname": "System.get_client_configuration", "kind": "function", "doc": "<p>Get a subset of the server configuration needed by the client.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>params : dict\n    Query parameters to include such as format.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.upload_license_file": {"fullname": "scrapermost.endpoints.System.upload_license_file", "modulename": "scrapermost.endpoints", "qualname": "System.upload_license_file", "kind": "function", "doc": "<p>Upload a license to enable enterprise features.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>files : dict\n    The licence to be uploaded.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.remove_license_file": {"fullname": "scrapermost.endpoints.System.remove_license_file", "modulename": "scrapermost.endpoints", "qualname": "System.remove_license_file", "kind": "function", "doc": "<p>Remove the license file from the server.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.get_client_license": {"fullname": "scrapermost.endpoints.System.get_client_license", "modulename": "scrapermost.endpoints", "qualname": "System.get_client_license", "kind": "function", "doc": "<p>Get a subset of the server license needed by the client.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>params : dict\n    Query parameters to include such as format.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.get_audits": {"fullname": "scrapermost.endpoints.System.get_audits", "modulename": "scrapermost.endpoints", "qualname": "System.get_audits", "kind": "function", "doc": "<p>Get a page of audits for all users on the system.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>page : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.invalidate_all_caches": {"fullname": "scrapermost.endpoints.System.invalidate_all_caches", "modulename": "scrapermost.endpoints", "qualname": "System.invalidate_all_caches", "kind": "function", "doc": "<p>Purge all the in-memory caches for the Mattermost server.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.get_logs": {"fullname": "scrapermost.endpoints.System.get_logs", "modulename": "scrapermost.endpoints", "qualname": "System.get_logs", "kind": "function", "doc": "<p>Get a page of server logs.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>page : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.add_log_message": {"fullname": "scrapermost.endpoints.System.add_log_message", "modulename": "scrapermost.endpoints", "qualname": "System.add_log_message", "kind": "function", "doc": "<p>Add log messages to the server logs.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>level : str\n    The error level, ERROR or DEBUG.\nmessage : str\n    Message to send to the server logs</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.get_analytics": {"fullname": "scrapermost.endpoints.System.get_analytics", "modulename": "scrapermost.endpoints", "qualname": "System.get_analytics", "kind": "function", "doc": "<p>Get some analytics data about the system.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>params : dict\n    Query parameters to include.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.get_configuration_environment": {"fullname": "scrapermost.endpoints.System.get_configuration_environment", "modulename": "scrapermost.endpoints", "qualname": "System.get_configuration_environment", "kind": "function", "doc": "<p>Get configuration made through environment variables.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.System.test_aws_s3_connection": {"fullname": "scrapermost.endpoints.System.test_aws_s3_connection", "modulename": "scrapermost.endpoints", "qualname": "System.test_aws_s3_connection", "kind": "function", "doc": "<p>Test AWS S3 connection.</p>\n\n<p>Send a test to validate if can connect to AWS S3. Optionally provide a\nconfiguration in the request body to test.\nIf no valid configuration is present in the request body the current\nserver configuration will be tested.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    Mattermost configuration to test.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams": {"fullname": "scrapermost.endpoints.Teams", "modulename": "scrapermost.endpoints", "qualname": "Teams", "kind": "class", "doc": "<p>Class defining the Teams API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='teams'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>create_team(name, diplay_name, channel_type)\n    Create a new team on the system.\nget_teams(page=0, per_page=60, total_count=False, exclude_policy=False)\n    Get teams.\nget_team(team_id)\n    Get a team on the system.\nupdate_team(team_id, body_json)\n    Update a team by providing the team object.\ndelete_team(team_id, permanent=False)\n    Mark the team as deleted in the database.\npatch_team(team_id, body_json)\n    Update a team partially by providing only the fields to update.\nget_team_by_name(name)\n    Get a team based on provided name string.\nsearch_teams(body_json)\n    Search teams based on search term and options provided.\ncheck_team_exists(name)\n    Check if the team exists based on a team name.\nget_user_teams(user_id)\n    Get a list of teams that a user is on.\nget_team_members(team_id, page=0, per_page=60)\n    Get a page team members list based on query string parameters.\nadd_user_to_team(team_id, user_id)\n    Add user to the team by user_id.\nadd_user_to_team_from_invite(token)\n    Add user to team from invite.\nadd_multiple_users_to_team(team_id, users_per_team)\n    Add a number of users to the team by user_id.\nget_team_members_for_user(user_id)\n    Get a list of team members for a user.\nget_team_member(team_id, user_id)\n    Get a team member on the system.\nremove_user_from_team(team_id, user_id)\n    Remove user from team.\nget_team_members_by_id(team_id, user_ids)\n    Get a list of team members based on a provided array of user IDs.\nget_team_stats(team_id)\n    Get a team stats on the system.\nget_team_icon(team_id)\n    Get the team icon of the team.\nset_team_icon(team_id, files)\n    Set the team icon for the team.\ndelete_team_icon(team_id)\n    Remove the team icon for the team.\nupdate_team_member_roles(team_id, user_id, roles)\n    Update a team member roles.\nupdate_scheme_derived_roles_of_team_member(team_id, user_id, body_json)\n    Update a team member's scheme_admin/scheme_user properties.\nget_team_unreads_for_user(user_id)\n    Get team unreads for a user.\nget_unreads_for_team(user_id, team_id)\n    Get the unread mention and message counts for a team for a user.\ninvite_users_to_team_by_mail(team_id, email_addresses)\n    Invite users to the existing team using their email addresses.\nimport_team_from_other_app(team_id, data)\n    Import a team into a existing team.\nget_invite_info_for_team(invite_id)\n    Get invite info for a team.\nset_team_scheme(team_id)\n    Set a team's scheme.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Teams.__init__": {"fullname": "scrapermost.endpoints.Teams.__init__", "modulename": "scrapermost.endpoints", "qualname": "Teams.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;teams&#39;</span></span>)</span>"}, "scrapermost.endpoints.Teams.create_team": {"fullname": "scrapermost.endpoints.Teams.create_team", "modulename": "scrapermost.endpoints", "qualname": "Teams.create_team", "kind": "function", "doc": "<p>Create a new team on the system.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    Unique handler for a team, will be present in the team URL.\ndiplay_name : str\n    Non-unique UI name for the team.\nchannel_type : 'O' or 'I\n    'O' for open, 'I' for invite only.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_teams": {"fullname": "scrapermost.endpoints.Teams.get_teams", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_teams", "kind": "function", "doc": "<p>Get teams.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>page : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).\ntotal_count : bool, default=False\n    Appends a total count of returned teams inside the response object.\nexclude_policy : bool, default=False\n    Whether to exclude teams which are part of a data retention policy.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_team": {"fullname": "scrapermost.endpoints.Teams.get_team", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_team", "kind": "function", "doc": "<p>Get a team on the system.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.update_team": {"fullname": "scrapermost.endpoints.Teams.update_team", "modulename": "scrapermost.endpoints", "qualname": "Teams.update_team", "kind": "function", "doc": "<p>Update a team by providing the team object.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nbody_json : dict\n    The team settings as a dict.\n    Example:\n    {\n        \"id\": \"string\",\n        \"display_name\": \"string\",\n        \"description\": \"string\",\n        \"company_name\": \"string\",\n        \"allowed_domains\": \"string\",\n        \"invite_id\": \"string\",\n        \"allow_open_invite\": \"string\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.delete_team": {"fullname": "scrapermost.endpoints.Teams.delete_team", "modulename": "scrapermost.endpoints", "qualname": "Teams.delete_team", "kind": "function", "doc": "<p>Mark the team as deleted in the database.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\npermanent : bool, default=False\n    Permanently delete the team, to be used for compliance reasons\n    only.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.patch_team": {"fullname": "scrapermost.endpoints.Teams.patch_team", "modulename": "scrapermost.endpoints", "qualname": "Teams.patch_team", "kind": "function", "doc": "<p>Update a team partially by providing only the fields to update.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nbody_json : dict\n    The team settings as a dict.\n    Example:\n    {\n        \"display_name\": \"string\",\n        \"description\": \"string\",\n        \"company_name\": \"string\",\n        \"invite_id\": \"string\",\n        \"allow_open_invite\": true\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_team_by_name": {"fullname": "scrapermost.endpoints.Teams.get_team_by_name", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_team_by_name", "kind": "function", "doc": "<p>Get a team based on provided name string.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    Team name.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.search_teams": {"fullname": "scrapermost.endpoints.Teams.search_teams", "modulename": "scrapermost.endpoints", "qualname": "Teams.search_teams", "kind": "function", "doc": "<p>Search teams based on search term and options provided.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict\n    The team settings as a dict.\n    Example:\n    {\n        \"term\": \"string\",\n        \"page\": \"string\",\n        \"per_page\": \"string\",\n        \"allow_open_invite\": true,\n        \"group_constrained\": true,\n        \"exclude_policy_constrained\": false\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.check_team_exists": {"fullname": "scrapermost.endpoints.Teams.check_team_exists", "modulename": "scrapermost.endpoints", "qualname": "Teams.check_team_exists", "kind": "function", "doc": "<p>Check if the team exists based on a team name.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    Team name.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_user_teams": {"fullname": "scrapermost.endpoints.Teams.get_user_teams", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_user_teams", "kind": "function", "doc": "<p>Get a list of teams that a user is on.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_team_members": {"fullname": "scrapermost.endpoints.Teams.get_team_members", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_team_members", "kind": "function", "doc": "<p>Get a page team members list based on query string parameters.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\npage : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.add_user_to_team": {"fullname": "scrapermost.endpoints.Teams.add_user_to_team", "modulename": "scrapermost.endpoints", "qualname": "Teams.add_user_to_team", "kind": "function", "doc": "<p>Add user to the team by user_id.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nuser_id : str\n    ID of the user to invite to team.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"fullname": "scrapermost.endpoints.Teams.add_user_to_team_from_invite", "modulename": "scrapermost.endpoints", "qualname": "Teams.add_user_to_team_from_invite", "kind": "function", "doc": "<p>Add user to team from invite.</p>\n\n<p>Using either an invite id or hash/data pair from an email invite link,\nadd a user to a team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>token : str\n    Token ID from the invitation.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"fullname": "scrapermost.endpoints.Teams.add_multiple_users_to_team", "modulename": "scrapermost.endpoints", "qualname": "Teams.add_multiple_users_to_team", "kind": "function", "doc": "<p>Add a number of users to the team by user_id.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nusers_per_team : list of dict\n    The users to add as a list.\n    Example:\n    [\n        {\n            \"team_id\": \"string\",\n            \"user_id\": \"string\",\n            \"roles\": \"string\",\n            \"delete_at\": 0,\n            \"scheme_user\": true,\n            \"scheme_admin\": true,\n            \"explicit_roles\": \"string\"\n        }\n    ]</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"fullname": "scrapermost.endpoints.Teams.get_team_members_for_user", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_team_members_for_user", "kind": "function", "doc": "<p>Get a list of team members for a user.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    ID of the user to invite to team.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_team_member": {"fullname": "scrapermost.endpoints.Teams.get_team_member", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_team_member", "kind": "function", "doc": "<p>Get a team member on the system.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nuser_id : str\n    ID of the user to invite to team.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.remove_user_from_team": {"fullname": "scrapermost.endpoints.Teams.remove_user_from_team", "modulename": "scrapermost.endpoints", "qualname": "Teams.remove_user_from_team", "kind": "function", "doc": "<p>Remove user from team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nuser_id : str\n    ID of the user to invite to team.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"fullname": "scrapermost.endpoints.Teams.get_team_members_by_id", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_team_members_by_id", "kind": "function", "doc": "<p>Get a list of team members based on a provided array of user IDs.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nuser_ids : list of str\n    List of user IDs.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_team_stats": {"fullname": "scrapermost.endpoints.Teams.get_team_stats", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_team_stats", "kind": "function", "doc": "<p>Get a team stats on the system.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_team_icon": {"fullname": "scrapermost.endpoints.Teams.get_team_icon", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_team_icon", "kind": "function", "doc": "<p>Get the team icon of the team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.set_team_icon": {"fullname": "scrapermost.endpoints.Teams.set_team_icon", "modulename": "scrapermost.endpoints", "qualname": "Teams.set_team_icon", "kind": "function", "doc": "<p>Set the team icon for the team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nfiles : dict\n    The image to be uploaded.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.delete_team_icon": {"fullname": "scrapermost.endpoints.Teams.delete_team_icon", "modulename": "scrapermost.endpoints", "qualname": "Teams.delete_team_icon", "kind": "function", "doc": "<p>Remove the team icon for the team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.update_team_member_roles": {"fullname": "scrapermost.endpoints.Teams.update_team_member_roles", "modulename": "scrapermost.endpoints", "qualname": "Teams.update_team_member_roles", "kind": "function", "doc": "<p>Update a team member roles.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nuser_id : str\n    User GUID.\nroles : str\n    Space-delimited team roles to assign to the user.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"fullname": "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member", "modulename": "scrapermost.endpoints", "qualname": "Teams.update_scheme_derived_roles_of_team_member", "kind": "function", "doc": "<p>Update a team member's scheme_admin/scheme_user properties.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nuser_id : str\n    User GUID.\nbody_json : dict\n    The shceme properties as a dict.\n    Example:\n    {\n        \"scheme_admin\": true,\n        \"scheme_user\": true\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"fullname": "scrapermost.endpoints.Teams.get_team_unreads_for_user", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_team_unreads_for_user", "kind": "function", "doc": "<p>Get team unreads for a user.</p>\n\n<p>Get the count for unread messages and mentions in the teams the user is\na member of.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nparams : dict, optional\n    Query parameters to include.\n    Example:\n    {\n        \"exclude_team\": \"string\",\n        \"include_collapsed_threads\": false\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"fullname": "scrapermost.endpoints.Teams.get_unreads_for_team", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_unreads_for_team", "kind": "function", "doc": "<p>Get the unread mention and message counts for a team for a user.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nteam_id : str\n    Team GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"fullname": "scrapermost.endpoints.Teams.invite_users_to_team_by_mail", "modulename": "scrapermost.endpoints", "qualname": "Teams.invite_users_to_team_by_mail", "kind": "function", "doc": "<p>Invite users to the existing team using their email addresses.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\nemail_addresses : list of str\n    List of user's email addresses.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"fullname": "scrapermost.endpoints.Teams.import_team_from_other_app", "modulename": "scrapermost.endpoints", "qualname": "Teams.import_team_from_other_app", "kind": "function", "doc": "<p>Import a team into a existing team.</p>\n\n<p>Import users, channels, posts, hooks.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.\ndata : dict\n    The file data as a dict:\n    file : str\n        A file to be uploaded in zip format.\n    filesize : int\n        The size of the zip file to be imported.\n    importFrom : str\n        String that defines from which application the team was\n        exported to be imported into Mattermost.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"fullname": "scrapermost.endpoints.Teams.get_invite_info_for_team", "modulename": "scrapermost.endpoints", "qualname": "Teams.get_invite_info_for_team", "kind": "function", "doc": "<p>Get invite info for a team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>invite_id : str\n    Invite ID for a team.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Teams.set_team_scheme": {"fullname": "scrapermost.endpoints.Teams.set_team_scheme", "modulename": "scrapermost.endpoints", "qualname": "Teams.set_team_scheme", "kind": "function", "doc": "<p>Set a team's scheme.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>team_id : str\n    Team GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users": {"fullname": "scrapermost.endpoints.Users", "modulename": "scrapermost.endpoints", "qualname": "Users", "kind": "class", "doc": "<p>Class defining the Users API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str, default='users'\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>login_user(body_json)\n    Login to Mattermost server.\nlogout_user()\n    Logout from the Mattermost server.\ncreate_user(body_json=None, params=None)\n    Create a new user on the system.\nget_users(params=None)\n    Get a page of a list of users.\nget_users_by_ids(body_json=None)\n    Get a list of users based on a provided list of user IDs.\nget_users_by_usernames(body_json=None)\n    Get a list of users based on a provided list of usernames.\nsearch_users(body_json=None)\n    Get a list of users based on search criteria in the request body.\nautocomplete_users(params=None)\n    Autocomplete users.\nget_stats()\n    Get a total count of users in the system.\nget_user(user_id)\n    Get a user a object.\nupdate_user(user_id, body_json=None)\n    Update a user by providing the user object.\ndeactivate_user(user_id)\n    Deactivate the user.\npatch_user(user_id, body_json=None)\n    Update a user partially.\nupdate_user_role(user_id, body_json=None)\n    Update a user's system-level roles.\nupdate_user_active_status(user_id, body_json=None)\n    Update user active or inactive status.\nget_user_profile_image(user_id)\n    Get user's profile image.\nset_user_profile_image(user_id, files)\n    Set user's profile image.\nget_user_by_username(username)\n    Get a user object by providing a username.\nreset_password(body_json=None)\n    Reset password.\nupdate_user_mfa(user_id, body_json=None)\n    Activate multi-factor authentication for the user.\ngenerate_mfa(user_id)\n    Generate an multi-factor authentication secret for a user.\ncheck_mfa(body_json=None)\n    Check if a user has multi-factor authentication active.\nupdate_user_password(user_id, body_json=None)\n    Update a user's password.\nsend_password_reset_mail(body_json=None)\n    Send an email containing a link for resetting the user's password.\nget_user_by_email(email)\n    Get a user object by providing a user email.\nget_user_sessions(user_id)\n    Get a list of sessions by providing the user GUID.\nrevoke_user_session(user_id, body_json=None)\n    Revoke a user session from the provided user ID and session ID.\nrevoke_all_user_sessions(user_id)\n    Revoke all user sessions from the provided user ID and session ID.\nattach_mobile_device(body_json=None)\n    Attach a mobile device ID to the currently logged in session.\nget_user_audits(user_id)\n    Get a list of audit by providing the user GUID.\nverify_user_email(body_json=None)\n    Verify the email used by a user to sign-up their account with.\nsend_verification_mail(body_json=None)\n    Send verification email.\ncreate_user_access_token(user_id, body_json=None)\n    Create a user access token.\nget_user_access_token(token_id)\n    Get a user access token.\ndisable_personal_access_token(body_json=None)\n    Disable a personal access token.\nenable_personal_access_token(body_json=None)\n    Re-enable a personal access token that has been disabled.\nsearch_tokens(body_json=None)\n    Get a list of tokens based on search criteria in the request body.\nupdate_user_authentication_method(user_id, body_json=None)\n    Update a user's authentication method.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Users.__init__": {"fullname": "scrapermost.endpoints.Users.__init__", "modulename": "scrapermost.endpoints", "qualname": "Users.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;users&#39;</span></span>)</span>"}, "scrapermost.endpoints.Users.login_user": {"fullname": "scrapermost.endpoints.Users.login_user", "modulename": "scrapermost.endpoints", "qualname": "Users.login_user", "kind": "function", "doc": "<p>Login to Mattermost server.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">body_json</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "scrapermost.endpoints.Users.logout_user": {"fullname": "scrapermost.endpoints.Users.logout_user", "modulename": "scrapermost.endpoints", "qualname": "Users.logout_user", "kind": "function", "doc": "<p>Logout from the Mattermost server.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.create_user": {"fullname": "scrapermost.endpoints.Users.create_user", "modulename": "scrapermost.endpoints", "qualname": "Users.create_user", "kind": "function", "doc": "<p>Create a new user on the system.</p>\n\n<p>Password is required for email login. For other authentication types\nsuch as LDAP or SAML, auth_data and auth_service fields are required.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.\nparams : dict, optional\n    Query parameters to include.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.get_users": {"fullname": "scrapermost.endpoints.Users.get_users", "modulename": "scrapermost.endpoints", "qualname": "Users.get_users", "kind": "function", "doc": "<p>Get a page of a list of users.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>params : dict, optional\n    Query parameters to include.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.get_users_by_ids": {"fullname": "scrapermost.endpoints.Users.get_users_by_ids", "modulename": "scrapermost.endpoints", "qualname": "Users.get_users_by_ids", "kind": "function", "doc": "<p>Get a list of users based on a provided list of user IDs.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.get_users_by_usernames": {"fullname": "scrapermost.endpoints.Users.get_users_by_usernames", "modulename": "scrapermost.endpoints", "qualname": "Users.get_users_by_usernames", "kind": "function", "doc": "<p>Get a list of users based on a provided list of usernames.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.search_users": {"fullname": "scrapermost.endpoints.Users.search_users", "modulename": "scrapermost.endpoints", "qualname": "Users.search_users", "kind": "function", "doc": "<p>Get a list of users based on search criteria in the request body.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.autocomplete_users": {"fullname": "scrapermost.endpoints.Users.autocomplete_users", "modulename": "scrapermost.endpoints", "qualname": "Users.autocomplete_users", "kind": "function", "doc": "<p>Autocomplete users.</p>\n\n<p>Get a list of users for the purpose of autocompleting based on the\nprovided search term.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>params : dict, optional\n    Query parameters to include.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.get_stats": {"fullname": "scrapermost.endpoints.Users.get_stats", "modulename": "scrapermost.endpoints", "qualname": "Users.get_stats", "kind": "function", "doc": "<p>Get a total count of users in the system.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.get_user": {"fullname": "scrapermost.endpoints.Users.get_user", "modulename": "scrapermost.endpoints", "qualname": "Users.get_user", "kind": "function", "doc": "<p>Get a user a object.</p>\n\n<p>Sensitive information will be sanitized out.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\n    This can also be \"me\" which will point to the current user.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.update_user": {"fullname": "scrapermost.endpoints.Users.update_user", "modulename": "scrapermost.endpoints", "qualname": "Users.update_user", "kind": "function", "doc": "<p>Update a user by providing the user object.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nbody_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.deactivate_user": {"fullname": "scrapermost.endpoints.Users.deactivate_user", "modulename": "scrapermost.endpoints", "qualname": "Users.deactivate_user", "kind": "function", "doc": "<p>Deactivate the user.</p>\n\n<p>Revoke all its sessions by archiving its user object.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.patch_user": {"fullname": "scrapermost.endpoints.Users.patch_user", "modulename": "scrapermost.endpoints", "qualname": "Users.patch_user", "kind": "function", "doc": "<p>Update a user partially.</p>\n\n<p>Provide only the fields you want to update.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nbody_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.update_user_role": {"fullname": "scrapermost.endpoints.Users.update_user_role", "modulename": "scrapermost.endpoints", "qualname": "Users.update_user_role", "kind": "function", "doc": "<p>Update a user's system-level roles.</p>\n\n<p>Valid user roles are \"system_user\", \"system_admin\" or both of them.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nbody_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.update_user_active_status": {"fullname": "scrapermost.endpoints.Users.update_user_active_status", "modulename": "scrapermost.endpoints", "qualname": "Users.update_user_active_status", "kind": "function", "doc": "<p>Update user active or inactive status.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nbody_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.get_user_profile_image": {"fullname": "scrapermost.endpoints.Users.get_user_profile_image", "modulename": "scrapermost.endpoints", "qualname": "Users.get_user_profile_image", "kind": "function", "doc": "<p>Get user's profile image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.set_user_profile_image": {"fullname": "scrapermost.endpoints.Users.set_user_profile_image", "modulename": "scrapermost.endpoints", "qualname": "Users.set_user_profile_image", "kind": "function", "doc": "<p>Set user's profile image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nfiles : dict\n    The image's bytes string to be uploaded.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.get_user_by_username": {"fullname": "scrapermost.endpoints.Users.get_user_by_username", "modulename": "scrapermost.endpoints", "qualname": "Users.get_user_by_username", "kind": "function", "doc": "<p>Get a user object by providing a username.</p>\n\n<p>Sensitive information will be sanitized out.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>username : str\n    Username.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.reset_password": {"fullname": "scrapermost.endpoints.Users.reset_password", "modulename": "scrapermost.endpoints", "qualname": "Users.reset_password", "kind": "function", "doc": "<p>Reset password.</p>\n\n<p>Update the password for a user using a one-use, timed recovery code\ntied to the user's account.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.update_user_mfa": {"fullname": "scrapermost.endpoints.Users.update_user_mfa", "modulename": "scrapermost.endpoints", "qualname": "Users.update_user_mfa", "kind": "function", "doc": "<p>Activate multi-factor authentication for the user.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nbody_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.generate_mfa": {"fullname": "scrapermost.endpoints.Users.generate_mfa", "modulename": "scrapermost.endpoints", "qualname": "Users.generate_mfa", "kind": "function", "doc": "<p>Generate an multi-factor authentication secret for a user.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.check_mfa": {"fullname": "scrapermost.endpoints.Users.check_mfa", "modulename": "scrapermost.endpoints", "qualname": "Users.check_mfa", "kind": "function", "doc": "<p>Check if a user has multi-factor authentication active.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.update_user_password": {"fullname": "scrapermost.endpoints.Users.update_user_password", "modulename": "scrapermost.endpoints", "qualname": "Users.update_user_password", "kind": "function", "doc": "<p>Update a user's password.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nbody_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.send_password_reset_mail": {"fullname": "scrapermost.endpoints.Users.send_password_reset_mail", "modulename": "scrapermost.endpoints", "qualname": "Users.send_password_reset_mail", "kind": "function", "doc": "<p>Send an email containing a link for resetting the user's password.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.get_user_by_email": {"fullname": "scrapermost.endpoints.Users.get_user_by_email", "modulename": "scrapermost.endpoints", "qualname": "Users.get_user_by_email", "kind": "function", "doc": "<p>Get a user object by providing a user email.</p>\n\n<p>Sensitive information will be sanitized out.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>email : str\n    User email.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.get_user_sessions": {"fullname": "scrapermost.endpoints.Users.get_user_sessions", "modulename": "scrapermost.endpoints", "qualname": "Users.get_user_sessions", "kind": "function", "doc": "<p>Get a list of sessions by providing the user GUID.</p>\n\n<p>Sensitive information will be sanitized out.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.revoke_user_session": {"fullname": "scrapermost.endpoints.Users.revoke_user_session", "modulename": "scrapermost.endpoints", "qualname": "Users.revoke_user_session", "kind": "function", "doc": "<p>Revoke a user session from the provided user ID and session ID.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nbody_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"fullname": "scrapermost.endpoints.Users.revoke_all_user_sessions", "modulename": "scrapermost.endpoints", "qualname": "Users.revoke_all_user_sessions", "kind": "function", "doc": "<p>Revoke all user sessions from the provided user ID and session ID.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.attach_mobile_device": {"fullname": "scrapermost.endpoints.Users.attach_mobile_device", "modulename": "scrapermost.endpoints", "qualname": "Users.attach_mobile_device", "kind": "function", "doc": "<p>Attach a mobile device ID to the currently logged in session.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.get_user_audits": {"fullname": "scrapermost.endpoints.Users.get_user_audits", "modulename": "scrapermost.endpoints", "qualname": "Users.get_user_audits", "kind": "function", "doc": "<p>Get a list of audit by providing the user GUID.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.verify_user_email": {"fullname": "scrapermost.endpoints.Users.verify_user_email", "modulename": "scrapermost.endpoints", "qualname": "Users.verify_user_email", "kind": "function", "doc": "<p>Verify the email used by a user to sign-up their account with.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.send_verification_mail": {"fullname": "scrapermost.endpoints.Users.send_verification_mail", "modulename": "scrapermost.endpoints", "qualname": "Users.send_verification_mail", "kind": "function", "doc": "<p>Send verification email.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.switch_login_method": {"fullname": "scrapermost.endpoints.Users.switch_login_method", "modulename": "scrapermost.endpoints", "qualname": "Users.switch_login_method", "kind": "function", "doc": "<p>Send verification email.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.create_user_access_token": {"fullname": "scrapermost.endpoints.Users.create_user_access_token", "modulename": "scrapermost.endpoints", "qualname": "Users.create_user_access_token", "kind": "function", "doc": "<p>Create a user access token.</p>\n\n<p>Generate a user access token that can be used to authenticate with\nthe Mattermost REST API.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nbody_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.get_user_access_token": {"fullname": "scrapermost.endpoints.Users.get_user_access_token", "modulename": "scrapermost.endpoints", "qualname": "Users.get_user_access_token", "kind": "function", "doc": "<p>Get a user access token.</p>\n\n<p>Does not include the actual authentication token.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>token_id : str\n    Token GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.disable_personal_access_token": {"fullname": "scrapermost.endpoints.Users.disable_personal_access_token", "modulename": "scrapermost.endpoints", "qualname": "Users.disable_personal_access_token", "kind": "function", "doc": "<p>Disable a personal access token.</p>\n\n<p>Delete any sessions using the token.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.enable_personal_access_token": {"fullname": "scrapermost.endpoints.Users.enable_personal_access_token", "modulename": "scrapermost.endpoints", "qualname": "Users.enable_personal_access_token", "kind": "function", "doc": "<p>Re-enable a personal access token that has been disabled.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.search_tokens": {"fullname": "scrapermost.endpoints.Users.search_tokens", "modulename": "scrapermost.endpoints", "qualname": "Users.search_tokens", "kind": "function", "doc": "<p>Get a list of tokens based on search criteria in the request body.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Users.update_user_authentication_method": {"fullname": "scrapermost.endpoints.Users.update_user_authentication_method", "modulename": "scrapermost.endpoints", "qualname": "Users.update_user_authentication_method", "kind": "function", "doc": "<p>Update a user's authentication method.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>user_id : str\n    User GUID.\nbody_json : dict, optional\n    A JSON serializable object to include in the body of the request.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Webhooks": {"fullname": "scrapermost.endpoints.Webhooks", "modulename": "scrapermost.endpoints", "qualname": "Webhooks", "kind": "class", "doc": "<p>Class defining the /hooks API endpoint.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>endpoint : str\n    The endpoint path.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>create_incoming_hook(body_json)\n    Create an incoming webhook for a channel.\nlist_incoming_hooks(page=0, per_page=60, team_id=None)\n    Get a page of a list of incoming webhooks.\nget_incoming_hook(hook_id)\n    Get an incoming webhook given the hook ID.\nupdate_incoming_hook(hook_id, body_json)\n    Update an incoming webhook given the hook ID.\ncreate_outgoing_hook(body_json)\n    Create an outgoing webhook for a team.\nlist_outgoing_hooks(page=0, per_page=60, team_id=None, channel_id=None)\n    Get a page of a list of outgoing webhooks.\nget_outgoing_hook(hook_id)\n    Get an outgoing webhook given the hook ID.\ndelete_outgoing_hook(hook_id)\n    Delete an outgoing webhook given the hook ID.\nupdate_outgoing_hook(hook_id, body_json)\n    Update an outgoing webhook given the hook ID.\nregenerate_token_outgoing_hook(hook_id)\n    Regenerate the token for the outgoing webhook.\ncall_webhook(hook_id)\n    Call a webhook.</p>\n", "bases": "scrapermost.endpoints.base.APIEndpoint"}, "scrapermost.endpoints.Webhooks.__init__": {"fullname": "scrapermost.endpoints.Webhooks.__init__", "modulename": "scrapermost.endpoints", "qualname": "Webhooks.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">async_client</span><span class=\"o\">.</span><span class=\"n\">AsyncClient</span> <span class=\"o\">|</span> <span class=\"n\">scrapermost</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/hooks&#39;</span></span>)</span>"}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"fullname": "scrapermost.endpoints.Webhooks.create_incoming_hook", "modulename": "scrapermost.endpoints", "qualname": "Webhooks.create_incoming_hook", "kind": "function", "doc": "<p>Create an incoming webhook for a channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict\n    The webhook settings as a dict.\n    {\n        \"channel_id\": \"string\",\n        \"user_id\": \"string\",\n        \"display_name\": \"string\",\n        \"description\": \"string\",\n        \"username\": \"string\",\n        \"icon_url\": \"string\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"fullname": "scrapermost.endpoints.Webhooks.list_incoming_hooks", "modulename": "scrapermost.endpoints", "qualname": "Webhooks.list_incoming_hooks", "kind": "function", "doc": "<p>Get a page of a list of incoming webhooks.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>page : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).\nteam_id : str, optional\n    Team GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"fullname": "scrapermost.endpoints.Webhooks.get_incoming_hook", "modulename": "scrapermost.endpoints", "qualname": "Webhooks.get_incoming_hook", "kind": "function", "doc": "<p>Get an incoming webhook given the hook ID.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>hook_id : str\n    Incoming Webhook GUID</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"fullname": "scrapermost.endpoints.Webhooks.update_incoming_hook", "modulename": "scrapermost.endpoints", "qualname": "Webhooks.update_incoming_hook", "kind": "function", "doc": "<p>Update an incoming webhook given the hook ID.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>hook_id : str\n    Incoming Webhook GUID\nbody_json : dict\n    The hook settings as a dict.\n    Example:\n    {\n        \"id\": \"string\",\n        \"channel_id\": \"string\",\n        \"display_name\": \"string\",\n        \"description\": \"string\",\n        \"username\": \"string\",\n        \"icon_url\": \"string\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"fullname": "scrapermost.endpoints.Webhooks.create_outgoing_hook", "modulename": "scrapermost.endpoints", "qualname": "Webhooks.create_outgoing_hook", "kind": "function", "doc": "<p>Create an outgoing webhook for a team.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>body_json : dict\n    The hook settings as a dict.\n    Example:\n    {\n        \"team_id\": \"string\",\n        \"channel_id\": \"string\",\n        \"creator_id\": \"string\",\n        \"description\": \"string\",\n        \"display_name\": \"string\",\n        \"trigger_words\": [\n            \"string\"\n        ],\n        \"trigger_when\": 0,\n        \"callback_urls\": [\n            \"string\"\n        ],\n        \"content_type\": \"application/x-www-form-urlencoded\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"fullname": "scrapermost.endpoints.Webhooks.list_outgoing_hooks", "modulename": "scrapermost.endpoints", "qualname": "Webhooks.list_outgoing_hooks", "kind": "function", "doc": "<p>Get a page of a list of incoming webhooks.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>page : int, default=0\n    The page to select.\nper_page : int, default=60\n    The number of members per page (max: 200).\nteam_id : str, optional\n    Team GUID.\nchannel_id : str, optional\n    channel_id GUID.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"fullname": "scrapermost.endpoints.Webhooks.get_outgoing_hook", "modulename": "scrapermost.endpoints", "qualname": "Webhooks.get_outgoing_hook", "kind": "function", "doc": "<p>Get an outgoing webhook given the hook ID.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>hook_id : str\n    Incoming Webhook GUID</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"fullname": "scrapermost.endpoints.Webhooks.delete_outgoing_hook", "modulename": "scrapermost.endpoints", "qualname": "Webhooks.delete_outgoing_hook", "kind": "function", "doc": "<p>Delete an outgoing webhook given the hook ID.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>hook_id : str\n    Incoming Webhook GUID</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"fullname": "scrapermost.endpoints.Webhooks.update_outgoing_hook", "modulename": "scrapermost.endpoints", "qualname": "Webhooks.update_outgoing_hook", "kind": "function", "doc": "<p>Update an outgoing webhook given the hook ID.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>hook_id : str\n    Incoming Webhook GUID\nbody_json : dict\n    The hook settings as a dict.\n    Example:\n    {\n        \"id\": \"string\",\n        \"channel_id\": \"string\",\n        \"display_name\": \"string\",\n        \"description\": \"string\"\n    }</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"fullname": "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook", "modulename": "scrapermost.endpoints", "qualname": "Webhooks.regenerate_token_outgoing_hook", "kind": "function", "doc": "<p>Regenerate the token for the outgoing webhook.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>hook_id : str\n    Incoming Webhook GUID</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any\nor requests.Response or Coroutine(...) -> requests.Response</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "scrapermost.endpoints.Webhooks.call_webhook": {"fullname": "scrapermost.endpoints.Webhooks.call_webhook", "modulename": "scrapermost.endpoints", "qualname": "Webhooks.call_webhook", "kind": "function", "doc": "<p>Call a webhook.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>hook_id : str\n    Incoming Webhook GUID\nbody_json : dict, optional\n    Parameters as a dict.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Any or Coroutine(...) -> Any</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">hook_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">body_json</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "scrapermost.events": {"fullname": "scrapermost.events", "modulename": "scrapermost.events", "kind": "module", "doc": "<p>Classes defining websocket events.</p>\n"}, "scrapermost.events.Hello": {"fullname": "scrapermost.events.Hello", "modulename": "scrapermost.events", "qualname": "Hello", "kind": "class", "doc": "<p>Class defining the 'hello' event: user successfully authenticated.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>connection_id : str\n    The connection ID.\nserver_version : str\n    The version of the server the user connected to.</p>\n", "bases": "scrapermost.events.base.WebsocketEvent"}, "scrapermost.events.Hello.__init__": {"fullname": "scrapermost.events.Hello.__init__", "modulename": "scrapermost.events", "qualname": "Hello.__init__", "kind": "function", "doc": "<p>Initialize the attributes.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>event : dict\n    The websocket event as a JSON.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>KeyError\n    If a key is missing from event.\nTypeError\n    If the wrong event type was passed as parameter.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "scrapermost.events.PostEdited": {"fullname": "scrapermost.events.PostEdited", "modulename": "scrapermost.events", "qualname": "PostEdited", "kind": "class", "doc": "<p>Class defining the 'post_edited' event: a message was edited.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>post : Post\n    The post data.</p>\n", "bases": "scrapermost.events.base.WebsocketEvent"}, "scrapermost.events.PostEdited.__init__": {"fullname": "scrapermost.events.PostEdited.__init__", "modulename": "scrapermost.events", "qualname": "PostEdited.__init__", "kind": "function", "doc": "<p>Initialize the attributes.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>event : dict\n    The websocket event as a JSON.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>KeyError\n    If a key is missing from event.\nTypeError\n    If the wrong event type was passed as parameter.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "scrapermost.events.Posted": {"fullname": "scrapermost.events.Posted", "modulename": "scrapermost.events", "qualname": "Posted", "kind": "class", "doc": "<p>Class defining the 'posted' event: a new message was posted.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>post : Post\n    The post data.\nchannel_display_name : str\n    The display name of the channel in which the message was posted.\nchannel_name : str\n    The name of the channel in which the message was posted.\nchannel_type : str\n    The type of the channel in which the message was posted.\nsender_name : str\n    The name of the message sender.\nset_online : bool\n    Whether the user status is online or not.\nteam_id : str\n    The team ID in which the message was posted.</p>\n", "bases": "scrapermost.events.base.WebsocketEvent"}, "scrapermost.events.Posted.__init__": {"fullname": "scrapermost.events.Posted.__init__", "modulename": "scrapermost.events", "qualname": "Posted.__init__", "kind": "function", "doc": "<p>Initialize the attributes.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>event : dict\n    The websocket event as a JSON.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>KeyError\n    If a key is missing from event.\nTypeError\n    If the wrong event type was passed as parameter.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, "scrapermost.exceptions": {"fullname": "scrapermost.exceptions", "modulename": "scrapermost.exceptions", "kind": "module", "doc": "<p>Custom HTTP exceptions.</p>\n"}, "scrapermost.exceptions.InvalidOrMissingParameters": {"fullname": "scrapermost.exceptions.InvalidOrMissingParameters", "modulename": "scrapermost.exceptions", "qualname": "InvalidOrMissingParameters", "kind": "class", "doc": "<p>Invalid Or Missing Parameters.</p>\n\n<p>Raised when mattermost returns a 400 Invalid or missing parameters in\nURL or request body.</p>\n", "bases": "httpx.HTTPError"}, "scrapermost.exceptions.NoAccessTokenProvided": {"fullname": "scrapermost.exceptions.NoAccessTokenProvided", "modulename": "scrapermost.exceptions", "qualname": "NoAccessTokenProvided", "kind": "class", "doc": "<p>No Access Token Provided.</p>\n\n<p>Raised when mattermost returns a 401 No access token provided.</p>\n", "bases": "httpx.HTTPError"}, "scrapermost.exceptions.NotEnoughPermissions": {"fullname": "scrapermost.exceptions.NotEnoughPermissions", "modulename": "scrapermost.exceptions", "qualname": "NotEnoughPermissions", "kind": "class", "doc": "<p>Not Enough Permissions.</p>\n\n<p>Raised when mattermost returns a 403 Do not have appropriate permissions.</p>\n", "bases": "httpx.HTTPError"}, "scrapermost.exceptions.ResourceNotFound": {"fullname": "scrapermost.exceptions.ResourceNotFound", "modulename": "scrapermost.exceptions", "qualname": "ResourceNotFound", "kind": "class", "doc": "<p>Resource Not Found.</p>\n\n<p>Raised when mattermost returns a 404 Resource not found.</p>\n", "bases": "httpx.HTTPError"}, "scrapermost.exceptions.MethodNotAllowed": {"fullname": "scrapermost.exceptions.MethodNotAllowed", "modulename": "scrapermost.exceptions", "qualname": "MethodNotAllowed", "kind": "class", "doc": "<p>Method Not Allowed.</p>\n\n<p>Raised when mattermost returns a 405 Method Not Allowed.</p>\n", "bases": "httpx.HTTPError"}, "scrapermost.exceptions.ContentTooLarge": {"fullname": "scrapermost.exceptions.ContentTooLarge", "modulename": "scrapermost.exceptions", "qualname": "ContentTooLarge", "kind": "class", "doc": "<p>Content Too Large.</p>\n\n<p>Raised when mattermost returns a 413 Content too large.</p>\n", "bases": "httpx.HTTPError"}, "scrapermost.exceptions.FeatureDisabled": {"fullname": "scrapermost.exceptions.FeatureDisabled", "modulename": "scrapermost.exceptions", "qualname": "FeatureDisabled", "kind": "class", "doc": "<p>Feature Disabled.</p>\n\n<p>Raised when mattermost returns a 501 Feature is disabled.</p>\n", "bases": "httpx.HTTPError"}}, "docInfo": {"scrapermost": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 1388}, "scrapermost.classes": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "scrapermost.classes.EmbedMetadata": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 34}, "scrapermost.classes.EmbedMetadata.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 34}, "scrapermost.classes.FileMetadata": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 214}, "scrapermost.classes.FileMetadata.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 34}, "scrapermost.classes.Post": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 223}, "scrapermost.classes.Post.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 34}, "scrapermost.driver": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "scrapermost.driver.async_client": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "scrapermost.driver.async_client.AsyncClient": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 78}, "scrapermost.driver.async_client.AsyncClient.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 18}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.async_client.AsyncClient.get": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 3}, "scrapermost.driver.async_client.AsyncClient.post": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 3}, "scrapermost.driver.async_client.AsyncClient.put": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 3}, "scrapermost.driver.async_client.AsyncClient.delete": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 3}, "scrapermost.driver.async_driver": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "scrapermost.driver.async_driver.AsyncDriver": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 61}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 19}, "scrapermost.driver.async_driver.AsyncDriver.client": {"qualname": 2, "fullname": 6, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 125, "bases": 0, "doc": 123}, "scrapermost.driver.async_driver.AsyncDriver.login": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 54}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 21}, "scrapermost.driver.base_client": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "scrapermost.driver.base_client.BaseClient": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 123}, "scrapermost.driver.base_client.BaseClient.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 18}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "scrapermost.driver.base_client.BaseClient.url": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "scrapermost.driver.base_client.BaseClient.user_id": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "scrapermost.driver.base_client.BaseClient.username": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "scrapermost.driver.base_client.BaseClient.auth": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "scrapermost.driver.base_client.BaseClient.token": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "scrapermost.driver.base_client.BaseClient.cookies": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 9}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 14}, "scrapermost.driver.base_driver": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "scrapermost.driver.base_driver.BaseDriver": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 96}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 19}, "scrapermost.driver.base_driver.BaseDriver.client": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "scrapermost.driver.base_driver.BaseDriver.users": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.teams": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.channels": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.posts": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.files": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "scrapermost.driver.base_driver.BaseDriver.system": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.brand": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.saml": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"qualname": 3, "fullname": 7, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "scrapermost.driver.base_driver.BaseDriver.status": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.commands": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.roles": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"qualname": 3, "fullname": 7, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "scrapermost.driver.base_driver.BaseDriver.bots": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 9}, "scrapermost.driver.client": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "scrapermost.driver.client.Client": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 74}, "scrapermost.driver.client.Client.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 18}, "scrapermost.driver.client.Client.httpx_client": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.client.Client.get": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 60}, "scrapermost.driver.client.Client.post": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 108}, "scrapermost.driver.client.Client.put": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 93}, "scrapermost.driver.client.Client.delete": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 60}, "scrapermost.driver.driver": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "scrapermost.driver.driver.Driver": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 61}, "scrapermost.driver.driver.Driver.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 19}, "scrapermost.driver.driver.Driver.client": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "scrapermost.driver.driver.Driver.init_websocket": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 135, "bases": 0, "doc": 97}, "scrapermost.driver.driver.Driver.login": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 54}, "scrapermost.driver.driver.Driver.logout": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 21}, "scrapermost.driver.options": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "scrapermost.driver.options.DriverOptions": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 289}, "scrapermost.driver.options.DriverOptions.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 38}, "scrapermost.driver.websocket": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "scrapermost.driver.websocket.Websocket": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 153}, "scrapermost.driver.websocket.Websocket.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 24}, "scrapermost.driver.websocket.Websocket.timeout": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "scrapermost.driver.websocket.Websocket.last_msg": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "scrapermost.driver.websocket.Websocket.connect": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 106, "bases": 0, "doc": 76}, "scrapermost.driver.websocket.Websocket.disconnect": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 26}, "scrapermost.endpoints": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "scrapermost.endpoints.Bots": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 158}, "scrapermost.endpoints.Bots.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Bots.create_bot": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 58}, "scrapermost.endpoints.Bots.get_bots": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 59}, "scrapermost.endpoints.Bots.patch_bot": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 61}, "scrapermost.endpoints.Bots.get_bot": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 52}, "scrapermost.endpoints.Bots.disable_bot": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 37}, "scrapermost.endpoints.Bots.enable_bot": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 37}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 53}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 43}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 54}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 43}, "scrapermost.endpoints.Brand": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 46}, "scrapermost.endpoints.Brand.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Brand.get_brand_image": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 27}, "scrapermost.endpoints.Brand.upload_brand_image": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 42}, "scrapermost.endpoints.Channels": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 502}, "scrapermost.endpoints.Channels.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Channels.create_channel": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 79}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 50}, "scrapermost.endpoints.Channels.create_group_message_channel": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 51}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"qualname": 7, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 54}, "scrapermost.endpoints.Channels.get_channel": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.Channels.update_channel": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 70}, "scrapermost.endpoints.Channels.delete_channel": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 36}, "scrapermost.endpoints.Channels.patch_channel": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 75}, "scrapermost.endpoints.Channels.restore_channel": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.Channels.get_channel_statistics": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 38}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.Channels.get_public_channels": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 65}, "scrapermost.endpoints.Channels.get_deleted_channels": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 65}, "scrapermost.endpoints.Channels.autocomplete_channels": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 46}, "scrapermost.endpoints.Channels.search_channels": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 55}, "scrapermost.endpoints.Channels.get_channel_by_name": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 50}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"qualname": 8, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 49}, "scrapermost.endpoints.Channels.get_channel_members": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 64}, "scrapermost.endpoints.Channels.add_user": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 76}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 55}, "scrapermost.endpoints.Channels.get_channel_member": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 43}, "scrapermost.endpoints.Channels.remove_channel_member": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 48}, "scrapermost.endpoints.Channels.update_channel_roles": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 59}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"qualname": 8, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 74}, "scrapermost.endpoints.Channels.update_channel_notifications": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 79}, "scrapermost.endpoints.Channels.view_channel": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 114}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 47}, "scrapermost.endpoints.Channels.get_channels_for_user": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 49}, "scrapermost.endpoints.Channels.get_unread_messages": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 52}, "scrapermost.endpoints.Channels.set_channel_scheme": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 52}, "scrapermost.endpoints.Cluster": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 35}, "scrapermost.endpoints.Cluster.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Cluster.get_cluster_status": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 48}, "scrapermost.endpoints.Commands": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 113}, "scrapermost.endpoints.Commands.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Commands.create_command": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 64}, "scrapermost.endpoints.Commands.list_commands_for_team": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 51}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 39}, "scrapermost.endpoints.Commands.update_command": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 51}, "scrapermost.endpoints.Commands.delete_command": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 45}, "scrapermost.endpoints.Commands.generate_new_token": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 49}, "scrapermost.endpoints.Commands.execute_command": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 63}, "scrapermost.endpoints.Compliance": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 78}, "scrapermost.endpoints.Compliance.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Compliance.create_report": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 27}, "scrapermost.endpoints.Compliance.get_reports": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 60}, "scrapermost.endpoints.Compliance.get_report": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 40}, "scrapermost.endpoints.Compliance.download_report": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 44}, "scrapermost.endpoints.DataRetention": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 47}, "scrapermost.endpoints.DataRetention.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 3}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 32}, "scrapermost.endpoints.Elasticsearch": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 43}, "scrapermost.endpoints.Elasticsearch.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 24}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 25}, "scrapermost.endpoints.Emoji": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 131}, "scrapermost.endpoints.Emoji.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 52}, "scrapermost.endpoints.Emoji.get_emoji_list": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 76}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 40}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 37}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 42}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 40}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 64}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 62}, "scrapermost.endpoints.Files": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 98}, "scrapermost.endpoints.Files.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Files.upload_file": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 55}, "scrapermost.endpoints.Files.get_file": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 33}, "scrapermost.endpoints.Files.get_file_thumbnail": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 38}, "scrapermost.endpoints.Files.get_file_preview": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 38}, "scrapermost.endpoints.Files.get_public_file_link": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 56}, "scrapermost.endpoints.Files.get_file_metadata": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 38}, "scrapermost.endpoints.IntegrationActions": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 45}, "scrapermost.endpoints.IntegrationActions.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 48}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 47}, "scrapermost.endpoints.LDAP": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 40}, "scrapermost.endpoints.LDAP.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.LDAP.sync_ldap": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 39}, "scrapermost.endpoints.LDAP.test_ldap_config": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 42}, "scrapermost.endpoints.OAuth": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 143}, "scrapermost.endpoints.OAuth.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.OAuth.register_oauth_app": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 70}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 59}, "scrapermost.endpoints.OAuth.get_oauth_app": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 43}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 45}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 44}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 70}, "scrapermost.endpoints.Opengraph": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 44}, "scrapermost.endpoints.Opengraph.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 52}, "scrapermost.endpoints.Posts": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 244}, "scrapermost.endpoints.Posts.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Posts.create_post": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 84}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 64}, "scrapermost.endpoints.Posts.get_post": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 45}, "scrapermost.endpoints.Posts.delete_post": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 45}, "scrapermost.endpoints.Posts.update_post": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 71}, "scrapermost.endpoints.Posts.patch_post": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 82}, "scrapermost.endpoints.Posts.get_thread": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 51}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 71}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 45}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 55}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 52}, "scrapermost.endpoints.Posts.search_for_team_posts": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 81}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 39}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 39}, "scrapermost.endpoints.Posts.perform_post_action": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 43}, "scrapermost.endpoints.Preferences": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 118}, "scrapermost.endpoints.Preferences.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Preferences.get_user_preferences": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.Preferences.save_user_preferences": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 67}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 67}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 54}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 57}, "scrapermost.endpoints.Reactions": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 75}, "scrapermost.endpoints.Reactions.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Reactions.create_reaction": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 58}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 46}, "scrapermost.endpoints.Reactions.delete_reaction": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 56}, "scrapermost.endpoints.Roles": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 88}, "scrapermost.endpoints.Roles.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Roles.get_role_by_id": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.Roles.get_role_by_name": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.Roles.patch_role": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 61}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"qualname": 7, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 29}, "scrapermost.endpoints.SAML": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 114}, "scrapermost.endpoints.SAML.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.SAML.get_metadata": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 27}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 28}, "scrapermost.endpoints.SAML.upload_public_certificate": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 47}, "scrapermost.endpoints.SAML.remove_public_certificate": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 28}, "scrapermost.endpoints.SAML.upload_private_key": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 47}, "scrapermost.endpoints.SAML.remove_private_key": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 28}, "scrapermost.endpoints.SAML.get_certificate_status": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 32}, "scrapermost.endpoints.Status": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 87}, "scrapermost.endpoints.Status.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Status.get_user_status": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.Status.update_user_status": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 56}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 55}, "scrapermost.endpoints.System": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 233}, "scrapermost.endpoints.System.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 3}, "scrapermost.endpoints.System.check_system_health": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.System.recycle_database_connection": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 42}, "scrapermost.endpoints.System.send_test_email": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 44}, "scrapermost.endpoints.System.get_configuration": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 26}, "scrapermost.endpoints.System.update_configuration": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 49}, "scrapermost.endpoints.System.reload_configuration": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 34}, "scrapermost.endpoints.System.get_client_configuration": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 48}, "scrapermost.endpoints.System.upload_license_file": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 42}, "scrapermost.endpoints.System.remove_license_file": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 28}, "scrapermost.endpoints.System.get_client_license": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 48}, "scrapermost.endpoints.System.get_audits": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 61}, "scrapermost.endpoints.System.invalidate_all_caches": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 31}, "scrapermost.endpoints.System.get_logs": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 56}, "scrapermost.endpoints.System.add_log_message": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 52}, "scrapermost.endpoints.System.get_analytics": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.System.get_configuration_environment": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 27}, "scrapermost.endpoints.System.test_aws_s3_connection": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 81}, "scrapermost.endpoints.Teams": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 481}, "scrapermost.endpoints.Teams.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Teams.create_team": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 73}, "scrapermost.endpoints.Teams.get_teams": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 87}, "scrapermost.endpoints.Teams.get_team": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 39}, "scrapermost.endpoints.Teams.update_team": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 80}, "scrapermost.endpoints.Teams.delete_team": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 57}, "scrapermost.endpoints.Teams.patch_team": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 76}, "scrapermost.endpoints.Teams.get_team_by_name": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 40}, "scrapermost.endpoints.Teams.search_teams": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 72}, "scrapermost.endpoints.Teams.check_team_exists": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 42}, "scrapermost.endpoints.Teams.get_user_teams": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 43}, "scrapermost.endpoints.Teams.get_team_members": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 67}, "scrapermost.endpoints.Teams.add_user_to_team": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 53}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"qualname": 7, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 63}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 89}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 48}, "scrapermost.endpoints.Teams.get_team_member": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 52}, "scrapermost.endpoints.Teams.remove_user_from_team": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 49}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 57}, "scrapermost.endpoints.Teams.get_team_stats": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 40}, "scrapermost.endpoints.Teams.get_team_icon": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 40}, "scrapermost.endpoints.Teams.set_team_icon": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 48}, "scrapermost.endpoints.Teams.delete_team_icon": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 40}, "scrapermost.endpoints.Teams.update_team_member_roles": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 56}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"qualname": 8, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 68}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 78}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 52}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"qualname": 7, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 55}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 98}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 42}, "scrapermost.endpoints.Teams.set_team_scheme": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 38}, "scrapermost.endpoints.Users": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 547}, "scrapermost.endpoints.Users.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Users.login_user": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 40}, "scrapermost.endpoints.Users.logout_user": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 26}, "scrapermost.endpoints.Users.create_user": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 85}, "scrapermost.endpoints.Users.get_users": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 43}, "scrapermost.endpoints.Users.get_users_by_ids": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 57}, "scrapermost.endpoints.Users.get_users_by_usernames": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 56}, "scrapermost.endpoints.Users.search_users": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 57}, "scrapermost.endpoints.Users.autocomplete_users": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 56}, "scrapermost.endpoints.Users.get_stats": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 30}, "scrapermost.endpoints.Users.get_user": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 59}, "scrapermost.endpoints.Users.update_user": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 58}, "scrapermost.endpoints.Users.deactivate_user": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 48}, "scrapermost.endpoints.Users.patch_user": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 65}, "scrapermost.endpoints.Users.update_user_role": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 72}, "scrapermost.endpoints.Users.update_user_active_status": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 56}, "scrapermost.endpoints.Users.get_user_profile_image": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 38}, "scrapermost.endpoints.Users.set_user_profile_image": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 49}, "scrapermost.endpoints.Users.get_user_by_username": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 48}, "scrapermost.endpoints.Users.reset_password": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 68}, "scrapermost.endpoints.Users.update_user_mfa": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 57}, "scrapermost.endpoints.Users.generate_mfa": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 42}, "scrapermost.endpoints.Users.check_mfa": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 53}, "scrapermost.endpoints.Users.update_user_password": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 55}, "scrapermost.endpoints.Users.send_password_reset_mail": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 56}, "scrapermost.endpoints.Users.get_user_by_email": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 50}, "scrapermost.endpoints.Users.get_user_sessions": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 52}, "scrapermost.endpoints.Users.revoke_user_session": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 62}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 45}, "scrapermost.endpoints.Users.attach_mobile_device": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 55}, "scrapermost.endpoints.Users.get_user_audits": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 43}, "scrapermost.endpoints.Users.verify_user_email": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 57}, "scrapermost.endpoints.Users.send_verification_mail": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 47}, "scrapermost.endpoints.Users.switch_login_method": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 47}, "scrapermost.endpoints.Users.create_user_access_token": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 74}, "scrapermost.endpoints.Users.get_user_access_token": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 48}, "scrapermost.endpoints.Users.disable_personal_access_token": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 58}, "scrapermost.endpoints.Users.enable_personal_access_token": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 54}, "scrapermost.endpoints.Users.search_tokens": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 57}, "scrapermost.endpoints.Users.update_user_authentication_method": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 56}, "scrapermost.endpoints.Webhooks": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 183}, "scrapermost.endpoints.Webhooks.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 67}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 66}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 75}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 88}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 74}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 41}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 68}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 40}, "scrapermost.endpoints.Webhooks.call_webhook": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 38}, "scrapermost.events": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "scrapermost.events.Hello": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 37}, "scrapermost.events.Hello.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 45}, "scrapermost.events.PostEdited": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 25}, "scrapermost.events.PostEdited.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 45}, "scrapermost.events.Posted": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 107}, "scrapermost.events.Posted.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 45}, "scrapermost.exceptions": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "scrapermost.exceptions.InvalidOrMissingParameters": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 25}, "scrapermost.exceptions.NoAccessTokenProvided": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 20}, "scrapermost.exceptions.NotEnoughPermissions": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 20}, "scrapermost.exceptions.ResourceNotFound": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 18}, "scrapermost.exceptions.MethodNotAllowed": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 18}, "scrapermost.exceptions.ContentTooLarge": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 18}, "scrapermost.exceptions.FeatureDisabled": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 17}}, "length": 372, "save": true}, "index": {"qualname": {"root": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.endpoints.Bots.__init__": {"tf": 1}, "scrapermost.endpoints.Brand.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.__init__": {"tf": 1}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1}, "scrapermost.endpoints.Commands.__init__": {"tf": 1}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1}, "scrapermost.endpoints.Files.__init__": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1}, "scrapermost.endpoints.Posts.__init__": {"tf": 1}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1}, "scrapermost.endpoints.Roles.__init__": {"tf": 1}, "scrapermost.endpoints.SAML.__init__": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.System.__init__": {"tf": 1}, "scrapermost.endpoints.Teams.__init__": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 38, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.4142135623730951}}, "df": 11}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}}, "df": 1}}}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Commands.execute_command": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.endpoints.Bots.__init__": {"tf": 1}, "scrapermost.endpoints.Brand.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.__init__": {"tf": 1}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1}, "scrapermost.endpoints.Commands.__init__": {"tf": 1}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1}, "scrapermost.endpoints.Files.__init__": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1}, "scrapermost.endpoints.Posts.__init__": {"tf": 1}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1}, "scrapermost.endpoints.Roles.__init__": {"tf": 1}, "scrapermost.endpoints.SAML.__init__": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.System.__init__": {"tf": 1}, "scrapermost.endpoints.Teams.__init__": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 40}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}}, "df": 3}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}}, "df": 4}}}}}}}, "d": {"docs": {"scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}}, "df": 4, "s": {"docs": {"scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}}, "df": 3}, "p": {"docs": {"scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}}, "df": 6}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}}, "df": 5}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}}, "df": 9, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.__init__": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}}, "df": 9}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}}, "df": 12}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.Post": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}}, "df": 15, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.__init__": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}}, "df": 19}, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.events.Posted": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}}, "df": 2}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}}, "df": 8}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost.endpoints.Files.get_file_preview": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}}, "df": 6}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}}, "df": 7}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}}, "df": 6}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}}, "df": 4}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}}, "df": 4}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.System.get_analytics": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 6, "s": {"docs": {"scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "x": {"docs": {"scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.System.check_system_health": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 8, "s": {"docs": {"scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.client": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}}, "df": 14}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}}, "df": 7}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}}, "df": 4, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Commands.__init__": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}}, "df": 10}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}}, "df": 6}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.exceptions.ContentTooLarge": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}}, "df": 26, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}}, "df": 33}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}}, "df": 15}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}}, "df": 5}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}}, "df": 88}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}}, "df": 13, "d": {"docs": {"scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users.deactivate_user": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}}, "df": 3}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.client": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Compliance.download_report": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}}, "df": 9}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 14}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.System.add_log_message": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"scrapermost.endpoints.System.get_logs": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1.4142135623730951}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}}, "df": 3}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}}, "df": 11}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}}, "df": 28}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Brand.__init__": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1.4142135623730951}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}}, "df": 9, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.__init__": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}}, "df": 13}}}, "y": {"docs": {"scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}}, "df": 17}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 42, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}}, "df": 2, "s": {"docs": {"scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 44}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}}, "df": 6}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}}, "df": 19}}}}}, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}}, "df": 2, "s": {"docs": {"scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}}, "df": 7, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 7, "s": {"docs": {"scrapermost.endpoints.Users.search_tokens": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}}, "df": 30, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.__init__": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}}, "df": 33}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Posts.get_thread": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Users.verify_user_email": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}}, "df": 2, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}}, "df": 6}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.restore_channel": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.exceptions.ResourceNotFound": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}}, "df": 3, "s": {"docs": {"scrapermost.endpoints.Compliance.get_reports": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.System.reload_configuration": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}}, "df": 4, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.__init__": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}}, "df": 11}}}}}, "s": {"3": {"docs": {"scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.__init__": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 20}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.__init__": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}}, "df": 11}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}}, "df": 5}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}}, "df": 6}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Users.switch_login_method": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.4142135623730951}}, "df": 10}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "f": {"docs": {"scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}}, "df": 6}, "n": {"docs": {"scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 6}}}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}}, "df": 3, "s": {"docs": {"scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}}, "df": 6, "s": {"docs": {"scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.exceptions.MethodNotAllowed": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}}, "df": 3}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}}, "df": 2}}}}}, "fullname": {"root": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.endpoints.Bots.__init__": {"tf": 1}, "scrapermost.endpoints.Brand.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.__init__": {"tf": 1}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1}, "scrapermost.endpoints.Commands.__init__": {"tf": 1}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1}, "scrapermost.endpoints.Files.__init__": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1}, "scrapermost.endpoints.Posts.__init__": {"tf": 1}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1}, "scrapermost.endpoints.Roles.__init__": {"tf": 1}, "scrapermost.endpoints.SAML.__init__": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.System.__init__": {"tf": 1}, "scrapermost.endpoints.Teams.__init__": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 38, "s": {"3": {"docs": {"scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.classes": {"tf": 1}, "scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver": {"tf": 1}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.async_driver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.base_driver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.client": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.driver.options": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}, "scrapermost.endpoints": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.__init__": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Brand.__init__": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Commands.__init__": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.__init__": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.__init__": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.__init__": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.__init__": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.__init__": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.__init__": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}, "scrapermost.events": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}, "scrapermost.exceptions": {"tf": 1}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}, "scrapermost.exceptions.ResourceNotFound": {"tf": 1}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 1}, "scrapermost.exceptions.ContentTooLarge": {"tf": 1}, "scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 372}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}}, "df": 4}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.__init__": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 20}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.__init__": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}}, "df": 11}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}}, "df": 5}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}}, "df": 6}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Users.switch_login_method": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.classes": {"tf": 1}, "scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}}, "df": 7}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1.4142135623730951}, "scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1.7320508075688772}, "scrapermost.driver.client.Client.get": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.post": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.put": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.delete": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.client": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}}, "df": 33}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}}, "df": 7}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}}, "df": 4, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Commands.__init__": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}}, "df": 10}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}}, "df": 6}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.exceptions.ContentTooLarge": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}}, "df": 26, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}}, "df": 33}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}}, "df": 15}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}}, "df": 5}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.4142135623730951}}, "df": 11}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.__init__": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Brand.__init__": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Commands.__init__": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.__init__": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.__init__": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.__init__": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.__init__": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.__init__": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.__init__": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 267}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}}, "df": 1}}}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Commands.execute_command": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.exceptions": {"tf": 1}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}, "scrapermost.exceptions.ResourceNotFound": {"tf": 1}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 1}, "scrapermost.exceptions.ContentTooLarge": {"tf": 1}, "scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 8}}}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.events": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.endpoints.Bots.__init__": {"tf": 1}, "scrapermost.endpoints.Brand.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.__init__": {"tf": 1}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1}, "scrapermost.endpoints.Commands.__init__": {"tf": 1}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1}, "scrapermost.endpoints.Files.__init__": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1}, "scrapermost.endpoints.Posts.__init__": {"tf": 1}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1}, "scrapermost.endpoints.Roles.__init__": {"tf": 1}, "scrapermost.endpoints.SAML.__init__": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.System.__init__": {"tf": 1}, "scrapermost.endpoints.Teams.__init__": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 40}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}}, "df": 3}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}}, "df": 4}}}}}}}, "d": {"docs": {"scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}}, "df": 4, "s": {"docs": {"scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}}, "df": 3}, "p": {"docs": {"scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}}, "df": 6}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}}, "df": 5}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}}, "df": 9, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.__init__": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}}, "df": 9}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}}, "df": 12}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.Post": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}}, "df": 15, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.__init__": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}}, "df": 19}, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.events.Posted": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}}, "df": 2}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}}, "df": 8}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost.endpoints.Files.get_file_preview": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}}, "df": 6}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver": {"tf": 1}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.async_driver": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.base_driver": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.client": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.login": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.logout": {"tf": 1.7320508075688772}, "scrapermost.driver.options": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}}, "df": 82, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}}, "df": 13, "d": {"docs": {"scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users.deactivate_user": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}}, "df": 3}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Compliance.download_report": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.async_driver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}}, "df": 15, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}}, "df": 7}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}}, "df": 6}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}}, "df": 4}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}}, "df": 4}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.System.get_analytics": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 6, "s": {"docs": {"scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "x": {"docs": {"scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.System.check_system_health": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 8, "s": {"docs": {"scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}}, "df": 88}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1.4142135623730951}}, "df": 10}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 14}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.System.add_log_message": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"scrapermost.endpoints.System.get_logs": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1.4142135623730951}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}}, "df": 3}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.base_driver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}}, "df": 41, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}}, "df": 11}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}}, "df": 28}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Brand.__init__": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1.4142135623730951}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}}, "df": 9, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.__init__": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}}, "df": 13}}}, "y": {"docs": {"scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}}, "df": 17}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 42, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}}, "df": 2, "s": {"docs": {"scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 44}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}}, "df": 6}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}}, "df": 19}}}}}, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}}, "df": 2, "s": {"docs": {"scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}}, "df": 7, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 7, "s": {"docs": {"scrapermost.endpoints.Users.search_tokens": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}}, "df": 30, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.__init__": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}}, "df": 33}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Posts.get_thread": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Users.verify_user_email": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}}, "df": 2, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}}, "df": 6}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.restore_channel": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.exceptions.ResourceNotFound": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}}, "df": 3, "s": {"docs": {"scrapermost.endpoints.Compliance.get_reports": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.System.reload_configuration": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}}, "df": 4, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.__init__": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}}, "df": 11}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.4142135623730951}}, "df": 10}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.options": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}}, "df": 3}}}}}}, "f": {"docs": {"scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}}, "df": 6}, "n": {"docs": {"scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 6}}}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}}, "df": 3, "s": {"docs": {"scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}}, "df": 6, "s": {"docs": {"scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.exceptions.MethodNotAllowed": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}}, "df": 3}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}}, "df": 2}}}}}, "annotation": {"root": {"docs": {"scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1}, "scrapermost.driver.driver.Driver.client": {"tf": 1}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}}, "df": 36, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "x": {"docs": {"scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.driver.driver.Driver.client": {"tf": 1}}, "df": 26}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.driver.Driver.client": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1}, "scrapermost.driver.driver.Driver.client": {"tf": 1.4142135623730951}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}}, "df": 24}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"3": {"9": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 2.449489742783178}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 2.449489742783178}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 2.449489742783178}, "scrapermost.endpoints.Bots.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1.4142135623730951}}, "df": 26}, "docs": {}, "df": 0}, "docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 4.69041575982343}, "scrapermost.classes.FileMetadata.__init__": {"tf": 4.69041575982343}, "scrapermost.classes.Post.__init__": {"tf": 4.69041575982343}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 4.898979485566356}, "scrapermost.driver.async_client.AsyncClient.get": {"tf": 6}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 6}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 6}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 6}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 4.69041575982343}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 9.219544457292887}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 5.477225575051661}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 3.4641016151377544}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 4.898979485566356}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 3}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 5}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 4.69041575982343}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 3.4641016151377544}, "scrapermost.driver.client.Client.__init__": {"tf": 4.898979485566356}, "scrapermost.driver.client.Client.get": {"tf": 6}, "scrapermost.driver.client.Client.post": {"tf": 6}, "scrapermost.driver.client.Client.put": {"tf": 6}, "scrapermost.driver.client.Client.delete": {"tf": 6}, "scrapermost.driver.driver.Driver.__init__": {"tf": 4.69041575982343}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 9.643650760992955}, "scrapermost.driver.driver.Driver.login": {"tf": 5.477225575051661}, "scrapermost.driver.driver.Driver.logout": {"tf": 3.4641016151377544}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 4.69041575982343}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 5.656854249492381}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 9.055385138137417}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 3.4641016151377544}, "scrapermost.endpoints.Bots.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Bots.create_bot": {"tf": 6.782329983125268}, "scrapermost.endpoints.Bots.get_bots": {"tf": 6.782329983125268}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 6.782329983125268}, "scrapermost.endpoints.Bots.get_bot": {"tf": 6.782329983125268}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 6.782329983125268}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 6.782329983125268}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 6.782329983125268}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 6.782329983125268}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 6.782329983125268}, "scrapermost.endpoints.Brand.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 6.782329983125268}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Channels.create_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.update_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.search_channels": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.add_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.view_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 6.782329983125268}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 6.782329983125268}, "scrapermost.endpoints.Cluster.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 6.782329983125268}, "scrapermost.endpoints.Commands.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Commands.create_command": {"tf": 6.782329983125268}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 6.782329983125268}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 6.782329983125268}, "scrapermost.endpoints.Commands.update_command": {"tf": 6.782329983125268}, "scrapermost.endpoints.Commands.delete_command": {"tf": 6.782329983125268}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 6.782329983125268}, "scrapermost.endpoints.Commands.execute_command": {"tf": 6.782329983125268}, "scrapermost.endpoints.Compliance.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Compliance.create_report": {"tf": 6.782329983125268}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 6.782329983125268}, "scrapermost.endpoints.Compliance.get_report": {"tf": 6.782329983125268}, "scrapermost.endpoints.Compliance.download_report": {"tf": 6.782329983125268}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 6.782329983125268}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 6.782329983125268}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 6.782329983125268}, "scrapermost.endpoints.Emoji.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 6.782329983125268}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 6.782329983125268}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 6.782329983125268}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 6.782329983125268}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 6.782329983125268}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 6.782329983125268}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 6.782329983125268}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 6.782329983125268}, "scrapermost.endpoints.Files.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Files.upload_file": {"tf": 6.782329983125268}, "scrapermost.endpoints.Files.get_file": {"tf": 5.744562646538029}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 6.782329983125268}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 6.782329983125268}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 6.782329983125268}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 6.782329983125268}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 6.782329983125268}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 6.782329983125268}, "scrapermost.endpoints.LDAP.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 6.782329983125268}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 6.782329983125268}, "scrapermost.endpoints.OAuth.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 6.782329983125268}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 6.782329983125268}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 6.782329983125268}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 6.782329983125268}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 6.782329983125268}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 6.782329983125268}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 6.782329983125268}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Posts.create_post": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.get_post": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.delete_post": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.update_post": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.patch_post": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.get_thread": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 6.782329983125268}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 6.782329983125268}, "scrapermost.endpoints.Preferences.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 6.782329983125268}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 6.782329983125268}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 6.782329983125268}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 6.782329983125268}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 6.782329983125268}, "scrapermost.endpoints.Reactions.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 6.782329983125268}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 6.782329983125268}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 6.782329983125268}, "scrapermost.endpoints.Roles.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 6.782329983125268}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 6.782329983125268}, "scrapermost.endpoints.Roles.patch_role": {"tf": 6.782329983125268}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 6.782329983125268}, "scrapermost.endpoints.SAML.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 6.782329983125268}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 6.782329983125268}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 6.782329983125268}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 6.782329983125268}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 6.782329983125268}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 6.782329983125268}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 6.782329983125268}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 6.782329983125268}, "scrapermost.endpoints.Status.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Status.get_user_status": {"tf": 6.782329983125268}, "scrapermost.endpoints.Status.update_user_status": {"tf": 6.782329983125268}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.__init__": {"tf": 6.48074069840786}, "scrapermost.endpoints.System.check_system_health": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.send_test_email": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.get_configuration": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.update_configuration": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.reload_configuration": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.upload_license_file": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.remove_license_file": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.get_client_license": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.get_audits": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.get_logs": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.add_log_message": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.get_analytics": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 6.782329983125268}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Teams.create_team": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_teams": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_team": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.update_team": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.delete_team": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.patch_team": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.search_teams": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 6.782329983125268}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Users.login_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.logout_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.create_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.get_users": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.search_users": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.get_stats": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.get_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.update_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.patch_user": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.update_user_role": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.reset_password": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.check_mfa": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.update_user_password": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.search_tokens": {"tf": 6.782329983125268}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 6.782329983125268}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 7.681145747868608}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 6.782329983125268}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 6.782329983125268}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 6.782329983125268}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 6.782329983125268}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 6.782329983125268}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 6.782329983125268}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 6.782329983125268}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 6.782329983125268}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 6.782329983125268}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 6.782329983125268}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 7.937253933193772}, "scrapermost.events.Hello.__init__": {"tf": 4.69041575982343}, "scrapermost.events.PostEdited.__init__": {"tf": 4.69041575982343}, "scrapermost.events.Posted.__init__": {"tf": 4.69041575982343}}, "df": 275, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1.7320508075688772}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 235}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 223}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 6}}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost.endpoints.Bots.__init__": {"tf": 1}, "scrapermost.endpoints.Brand.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.__init__": {"tf": 1}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1}, "scrapermost.endpoints.Commands.__init__": {"tf": 1}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1}, "scrapermost.endpoints.Files.__init__": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1}, "scrapermost.endpoints.Posts.__init__": {"tf": 1}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1}, "scrapermost.endpoints.Roles.__init__": {"tf": 1}, "scrapermost.endpoints.SAML.__init__": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.System.__init__": {"tf": 1}, "scrapermost.endpoints.Teams.__init__": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1}}, "df": 24, "i": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Bots.__init__": {"tf": 1}, "scrapermost.endpoints.Brand.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.__init__": {"tf": 1}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1}, "scrapermost.endpoints.Commands.__init__": {"tf": 1}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1}, "scrapermost.endpoints.Files.__init__": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1}, "scrapermost.endpoints.Posts.__init__": {"tf": 1}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1}, "scrapermost.endpoints.Roles.__init__": {"tf": 1}, "scrapermost.endpoints.SAML.__init__": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.System.__init__": {"tf": 1}, "scrapermost.endpoints.Teams.__init__": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1}}, "df": 24}}}}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 16}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.endpoints.Bots.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1.4142135623730951}}, "df": 30, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.__init__": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.__init__": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands.__init__": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files.__init__": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.__init__": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.__init__": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML.__init__": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.__init__": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1.4142135623730951}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 264}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.endpoints.Bots.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1.4142135623730951}}, "df": 30}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 13}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.SAML.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1.4142135623730951}}, "df": 8}, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Opengraph.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.OAuth.__init__": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 223}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 223}}, "d": {"docs": {"scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 225}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 225}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.DataRetention.__init__": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Reactions.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Roles.__init__": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_client.AsyncClient.get": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 225}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Bots.__init__": {"tf": 1}, "scrapermost.endpoints.Brand.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.__init__": {"tf": 1}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1}, "scrapermost.endpoints.Commands.__init__": {"tf": 1}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1}, "scrapermost.endpoints.Files.__init__": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1}, "scrapermost.endpoints.Posts.__init__": {"tf": 1}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1}, "scrapermost.endpoints.Roles.__init__": {"tf": 1}, "scrapermost.endpoints.SAML.__init__": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.Teams.__init__": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1}}, "df": 23}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"scrapermost.endpoints.Emoji.__init__": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.endpoints.Webhooks.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Bots.__init__": {"tf": 2}, "scrapermost.endpoints.Brand.__init__": {"tf": 2}, "scrapermost.endpoints.Channels.__init__": {"tf": 2}, "scrapermost.endpoints.Cluster.__init__": {"tf": 2}, "scrapermost.endpoints.Commands.__init__": {"tf": 2}, "scrapermost.endpoints.Compliance.__init__": {"tf": 2}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 2}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 2}, "scrapermost.endpoints.Emoji.__init__": {"tf": 2}, "scrapermost.endpoints.Files.__init__": {"tf": 2}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 2}, "scrapermost.endpoints.LDAP.__init__": {"tf": 2}, "scrapermost.endpoints.OAuth.__init__": {"tf": 2}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 2}, "scrapermost.endpoints.Posts.__init__": {"tf": 2}, "scrapermost.endpoints.Preferences.__init__": {"tf": 2}, "scrapermost.endpoints.Reactions.__init__": {"tf": 2}, "scrapermost.endpoints.Roles.__init__": {"tf": 2}, "scrapermost.endpoints.SAML.__init__": {"tf": 2}, "scrapermost.endpoints.Status.__init__": {"tf": 2}, "scrapermost.endpoints.System.__init__": {"tf": 2}, "scrapermost.endpoints.Teams.__init__": {"tf": 2}, "scrapermost.endpoints.Users.__init__": {"tf": 2}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 2}}, "df": 24}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Cluster.__init__": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Channels.__init__": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Commands.__init__": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Compliance.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 223}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Preferences.__init__": {"tf": 1}, "scrapermost.endpoints.Status.__init__": {"tf": 1}, "scrapermost.endpoints.Users.__init__": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 3}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 2.23606797749979}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 2.23606797749979}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.endpoints.LDAP.__init__": {"tf": 1}}, "df": 1}}}}, "x": {"2": {"7": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "g": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 2}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Files.get_file": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.endpoints.Files.__init__": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Teams.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Bots.__init__": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Brand.__init__": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Posts.__init__": {"tf": 1}}, "df": 1}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}}, "df": 31}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}}, "df": 31, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1.4142135623730951}}, "df": 2}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}}, "df": 24}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}}, "df": 24}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}}, "df": 3}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "x": {"docs": {"scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}, "scrapermost.exceptions.ResourceNotFound": {"tf": 1}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 1}, "scrapermost.exceptions.ContentTooLarge": {"tf": 1}, "scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 7}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}, "scrapermost.exceptions.ResourceNotFound": {"tf": 1}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 1}, "scrapermost.exceptions.ContentTooLarge": {"tf": 1}, "scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 7}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 3}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 32}, "1": {"0": {"0": {"docs": {"scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}}, "df": 1}, "docs": {"scrapermost": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"0": {"0": {"docs": {"scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 13}, "docs": {}, "df": 0}, "docs": {"scrapermost.endpoints.OAuth": {"tf": 2.6457513110645907}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}}, "df": 8}, "3": {"0": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}, "docs": {"scrapermost": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}}, "df": 2}, "4": {"0": {"0": {"docs": {"scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}}, "df": 1}, "1": {"docs": {"scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1}}, "df": 1}, "3": {"docs": {"scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}}, "df": 1}, "4": {"docs": {"scrapermost.exceptions.ResourceNotFound": {"tf": 1}}, "df": 1}, "5": {"docs": {"scrapermost.exceptions.MethodNotAllowed": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"3": {"docs": {"scrapermost.exceptions.ContentTooLarge": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "4": {"3": {"docs": {"scrapermost": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"0": {"1": {"docs": {"scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}}, "df": 1}, "6": {"0": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 22}, "docs": {}, "df": 0}, "8": {"0": {"6": {"5": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}}, "df": 1}, "docs": {"scrapermost": {"tf": 30}, "scrapermost.classes": {"tf": 1.7320508075688772}, "scrapermost.classes.EmbedMetadata": {"tf": 3.3166247903554}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 3.7416573867739413}, "scrapermost.classes.FileMetadata": {"tf": 5}, "scrapermost.classes.FileMetadata.__init__": {"tf": 3.7416573867739413}, "scrapermost.classes.Post": {"tf": 5.196152422706632}, "scrapermost.classes.Post.__init__": {"tf": 3.7416573867739413}, "scrapermost.driver": {"tf": 2.449489742783178}, "scrapermost.driver.async_client": {"tf": 2.449489742783178}, "scrapermost.driver.async_client.AsyncClient": {"tf": 3.7416573867739413}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 3}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 2.6457513110645907}, "scrapermost.driver.async_client.AsyncClient.get": {"tf": 1.7320508075688772}, "scrapermost.driver.async_client.AsyncClient.post": {"tf": 1.7320508075688772}, "scrapermost.driver.async_client.AsyncClient.put": {"tf": 1.7320508075688772}, "scrapermost.driver.async_client.AsyncClient.delete": {"tf": 1.7320508075688772}, "scrapermost.driver.async_driver": {"tf": 1.7320508075688772}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 3.7416573867739413}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 3}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 2.6457513110645907}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 5.0990195135927845}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 4.47213595499958}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 2.8284271247461903}, "scrapermost.driver.base_client": {"tf": 2.449489742783178}, "scrapermost.driver.base_client.BaseClient": {"tf": 5.0990195135927845}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 3}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1.7320508075688772}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 2.6457513110645907}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 3}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 3}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 2.6457513110645907}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 3}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 3}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1.7320508075688772}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver": {"tf": 1.7320508075688772}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 4.358898943540674}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 3}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1.7320508075688772}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 2.6457513110645907}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.client": {"tf": 2.449489742783178}, "scrapermost.driver.client.Client": {"tf": 3.7416573867739413}, "scrapermost.driver.client.Client.__init__": {"tf": 3}, "scrapermost.driver.client.Client.httpx_client": {"tf": 2.6457513110645907}, "scrapermost.driver.client.Client.get": {"tf": 4.47213595499958}, "scrapermost.driver.client.Client.post": {"tf": 4.795831523312719}, "scrapermost.driver.client.Client.put": {"tf": 4.69041575982343}, "scrapermost.driver.client.Client.delete": {"tf": 4.47213595499958}, "scrapermost.driver.driver": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver": {"tf": 3.7416573867739413}, "scrapermost.driver.driver.Driver.__init__": {"tf": 3}, "scrapermost.driver.driver.Driver.client": {"tf": 2.6457513110645907}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 4.898979485566356}, "scrapermost.driver.driver.Driver.login": {"tf": 4.47213595499958}, "scrapermost.driver.driver.Driver.logout": {"tf": 2.8284271247461903}, "scrapermost.driver.options": {"tf": 1.7320508075688772}, "scrapermost.driver.options.DriverOptions": {"tf": 5.385164807134504}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 3.7416573867739413}, "scrapermost.driver.websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.websocket.Websocket": {"tf": 4.795831523312719}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 3.1622776601683795}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 2.6457513110645907}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 3}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 3.7416573867739413}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 3.1622776601683795}, "scrapermost.endpoints": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Bots.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.create_bot": {"tf": 4.358898943540674}, "scrapermost.endpoints.Bots.get_bots": {"tf": 4.47213595499958}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 4}, "scrapermost.endpoints.Bots.get_bot": {"tf": 4}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 3.872983346207417}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 3.872983346207417}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 4}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 3.872983346207417}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 4}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 3.872983346207417}, "scrapermost.endpoints.Brand": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Brand.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 3}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 3.872983346207417}, "scrapermost.endpoints.Channels": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Channels.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.create_channel": {"tf": 4.69041575982343}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 4}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 3.872983346207417}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 4}, "scrapermost.endpoints.Channels.get_channel": {"tf": 3.872983346207417}, "scrapermost.endpoints.Channels.update_channel": {"tf": 4.69041575982343}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 3.872983346207417}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 4.58257569495584}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 3.872983346207417}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 3.872983346207417}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 3.872983346207417}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 4.123105625617661}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 4.123105625617661}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 4}, "scrapermost.endpoints.Channels.search_channels": {"tf": 4}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 4}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 4}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 4.123105625617661}, "scrapermost.endpoints.Channels.add_user": {"tf": 4.123105625617661}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 4}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 4}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 4}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 4.123105625617661}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 4.47213595499958}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 4.69041575982343}, "scrapermost.endpoints.Channels.view_channel": {"tf": 4.47213595499958}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 4}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 4}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 4}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 4.242640687119285}, "scrapermost.endpoints.Cluster": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Cluster.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 3.4641016151377544}, "scrapermost.endpoints.Commands": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Commands.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.create_command": {"tf": 4.47213595499958}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 4}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 3.872983346207417}, "scrapermost.endpoints.Commands.update_command": {"tf": 4}, "scrapermost.endpoints.Commands.delete_command": {"tf": 3.872983346207417}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 3.872983346207417}, "scrapermost.endpoints.Commands.execute_command": {"tf": 4}, "scrapermost.endpoints.Compliance": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Compliance.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Compliance.create_report": {"tf": 3}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 4}, "scrapermost.endpoints.Compliance.get_report": {"tf": 3.872983346207417}, "scrapermost.endpoints.Compliance.download_report": {"tf": 3.872983346207417}, "scrapermost.endpoints.DataRetention": {"tf": 3.7416573867739413}, "scrapermost.endpoints.DataRetention.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 3}, "scrapermost.endpoints.Elasticsearch": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Elasticsearch.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 3}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 3}, "scrapermost.endpoints.Emoji": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Emoji.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 4}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 4.123105625617661}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 3.872983346207417}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 3.872983346207417}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 3.872983346207417}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 3.872983346207417}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 4}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 4.242640687119285}, "scrapermost.endpoints.Files": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Files.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files.upload_file": {"tf": 4}, "scrapermost.endpoints.Files.get_file": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 3.872983346207417}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 3.872983346207417}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 4.242640687119285}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 3.872983346207417}, "scrapermost.endpoints.IntegrationActions": {"tf": 3.7416573867739413}, "scrapermost.endpoints.IntegrationActions.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 3.872983346207417}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 3.872983346207417}, "scrapermost.endpoints.LDAP": {"tf": 3.7416573867739413}, "scrapermost.endpoints.LDAP.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 3.4641016151377544}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 3.4641016151377544}, "scrapermost.endpoints.OAuth": {"tf": 3.7416573867739413}, "scrapermost.endpoints.OAuth.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 4.898979485566356}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 4}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 3.872983346207417}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 3.872983346207417}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 3.872983346207417}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 3.872983346207417}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 4.123105625617661}, "scrapermost.endpoints.Opengraph": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Opengraph.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 3.872983346207417}, "scrapermost.endpoints.Posts": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Posts.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.create_post": {"tf": 5.196152422706632}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 4.69041575982343}, "scrapermost.endpoints.Posts.get_post": {"tf": 3.872983346207417}, "scrapermost.endpoints.Posts.delete_post": {"tf": 3.872983346207417}, "scrapermost.endpoints.Posts.update_post": {"tf": 4.69041575982343}, "scrapermost.endpoints.Posts.patch_post": {"tf": 4.898979485566356}, "scrapermost.endpoints.Posts.get_thread": {"tf": 3.872983346207417}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 4.58257569495584}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 3.872983346207417}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 4}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 4.123105625617661}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 4.795831523312719}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 3.872983346207417}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 3.872983346207417}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 4}, "scrapermost.endpoints.Preferences": {"tf": 4.123105625617661}, "scrapermost.endpoints.Preferences.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 3.872983346207417}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 4.795831523312719}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 4.795831523312719}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 4}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 4.123105625617661}, "scrapermost.endpoints.Reactions": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Reactions.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 4.47213595499958}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 3.872983346207417}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 4.123105625617661}, "scrapermost.endpoints.Roles": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Roles.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 3.872983346207417}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 3.872983346207417}, "scrapermost.endpoints.Roles.patch_role": {"tf": 4.47213595499958}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 3}, "scrapermost.endpoints.SAML": {"tf": 3.7416573867739413}, "scrapermost.endpoints.SAML.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 3}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 3.872983346207417}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 3}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 3.872983346207417}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 3}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 3.872983346207417}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 3}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 3}, "scrapermost.endpoints.Status": {"tf": 4.123105625617661}, "scrapermost.endpoints.Status.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Status.get_user_status": {"tf": 3.872983346207417}, "scrapermost.endpoints.Status.update_user_status": {"tf": 4}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 3.872983346207417}, "scrapermost.endpoints.System": {"tf": 4}, "scrapermost.endpoints.System.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.check_system_health": {"tf": 3.4641016151377544}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 3.4641016151377544}, "scrapermost.endpoints.System.send_test_email": {"tf": 4}, "scrapermost.endpoints.System.get_configuration": {"tf": 3}, "scrapermost.endpoints.System.update_configuration": {"tf": 4}, "scrapermost.endpoints.System.reload_configuration": {"tf": 3}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 3.872983346207417}, "scrapermost.endpoints.System.upload_license_file": {"tf": 3.872983346207417}, "scrapermost.endpoints.System.remove_license_file": {"tf": 3}, "scrapermost.endpoints.System.get_client_license": {"tf": 3.872983346207417}, "scrapermost.endpoints.System.get_audits": {"tf": 4}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 3}, "scrapermost.endpoints.System.get_logs": {"tf": 4}, "scrapermost.endpoints.System.add_log_message": {"tf": 3.872983346207417}, "scrapermost.endpoints.System.get_analytics": {"tf": 3.872983346207417}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 3}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 4.242640687119285}, "scrapermost.endpoints.Teams": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Teams.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.create_team": {"tf": 4.123105625617661}, "scrapermost.endpoints.Teams.get_teams": {"tf": 4.242640687119285}, "scrapermost.endpoints.Teams.get_team": {"tf": 3.872983346207417}, "scrapermost.endpoints.Teams.update_team": {"tf": 4.898979485566356}, "scrapermost.endpoints.Teams.delete_team": {"tf": 4}, "scrapermost.endpoints.Teams.patch_team": {"tf": 4.69041575982343}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 3.872983346207417}, "scrapermost.endpoints.Teams.search_teams": {"tf": 4.69041575982343}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 3.872983346207417}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 3.872983346207417}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 4.123105625617661}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 4}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 4.242640687119285}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 5.0990195135927845}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 3.872983346207417}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 4}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 4}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 4}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 3.872983346207417}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 3.872983346207417}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 4}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 3.872983346207417}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 4.123105625617661}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 4.47213595499958}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 4.69041575982343}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 4}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 4}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 4.69041575982343}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 3.872983346207417}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Users.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.login_user": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Users.logout_user": {"tf": 3}, "scrapermost.endpoints.Users.create_user": {"tf": 4.358898943540674}, "scrapermost.endpoints.Users.get_users": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.search_users": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 4.242640687119285}, "scrapermost.endpoints.Users.get_stats": {"tf": 3}, "scrapermost.endpoints.Users.get_user": {"tf": 4.242640687119285}, "scrapermost.endpoints.Users.update_user": {"tf": 4}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 4.242640687119285}, "scrapermost.endpoints.Users.patch_user": {"tf": 4.358898943540674}, "scrapermost.endpoints.Users.update_user_role": {"tf": 4.358898943540674}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 4}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 4}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 4.242640687119285}, "scrapermost.endpoints.Users.reset_password": {"tf": 4.242640687119285}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 4}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.check_mfa": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.update_user_password": {"tf": 4}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 4.242640687119285}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 4.242640687119285}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 4}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 4.358898943540674}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 4.242640687119285}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 4.242640687119285}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.search_tokens": {"tf": 3.872983346207417}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 4}, "scrapermost.endpoints.Webhooks": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Webhooks.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 4.69041575982343}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 4.123105625617661}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 4.795831523312719}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 5.385164807134504}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 4.242640687119285}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 4.58257569495584}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 3.872983346207417}, "scrapermost.events": {"tf": 1.7320508075688772}, "scrapermost.events.Hello": {"tf": 3.1622776601683795}, "scrapermost.events.Hello.__init__": {"tf": 3.7416573867739413}, "scrapermost.events.PostEdited": {"tf": 3}, "scrapermost.events.PostEdited.__init__": {"tf": 3.7416573867739413}, "scrapermost.events.Posted": {"tf": 3.872983346207417}, "scrapermost.events.Posted.__init__": {"tf": 3.7416573867739413}, "scrapermost.exceptions": {"tf": 1.7320508075688772}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 2.449489742783178}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 2.449489742783178}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 2.449489742783178}, "scrapermost.exceptions.ResourceNotFound": {"tf": 2.449489742783178}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 2.449489742783178}, "scrapermost.exceptions.ContentTooLarge": {"tf": 2.449489742783178}, "scrapermost.exceptions.FeatureDisabled": {"tf": 2.449489742783178}}, "df": 372, "s": {"3": {"docs": {"scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.classes.EmbedMetadata": {"tf": 1.4142135623730951}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1.7320508075688772}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 2}, "scrapermost.endpoints.Bots": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 2}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2.449489742783178}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 45, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 2}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 2}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 2}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}}, "df": 9}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Cluster": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 2.449489742783178}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}}, "df": 3}}}, "r": {"docs": {"scrapermost": {"tf": 2.6457513110645907}, "scrapermost.classes.EmbedMetadata": {"tf": 1.4142135623730951}, "scrapermost.classes.FileMetadata": {"tf": 3}, "scrapermost.classes.Post": {"tf": 3}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 2}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 2.6457513110645907}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1.4142135623730951}, "scrapermost.events.Posted": {"tf": 2.23606797749979}}, "df": 192, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_channel": {"tf": 2.449489742783178}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 2.23606797749979}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 2}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 2}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.create_command": {"tf": 2}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 2.23606797749979}, "scrapermost.endpoints.Posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.create_post": {"tf": 2}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 2}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 2}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Teams.patch_team": {"tf": 2}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 2}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 2.449489742783178}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 2.449489742783178}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 2}}, "df": 48, "s": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost": {"tf": 3}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 2}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 2.8284271247461903}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1.4142135623730951}}, "df": 37}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 38}}}}}}}}}}, "e": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 2}, "scrapermost.driver.client.Client": {"tf": 2}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}}, "df": 16, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.classes.Post": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.classes.Post": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}}, "df": 20, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.System.check_system_health": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.driver.options": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}}, "df": 18}}}}}, "s": {"docs": {"scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}}, "df": 2, "s": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1.7320508075688772}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.OAuth": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2.23606797749979}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}}, "df": 5, "s": {"docs": {"scrapermost.endpoints.Users": {"tf": 2}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}}, "df": 5}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 13}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 2}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users": {"tf": 2}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}}, "df": 13}}}}}, "o": {"docs": {"scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}}, "df": 5}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost.endpoints.LDAP": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.driver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 2.449489742783178}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1.7320508075688772}}, "df": 16}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}}, "df": 4}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.Post": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}}, "df": 3}}, "c": {"docs": {"scrapermost.endpoints.Preferences": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}}, "df": 1}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}}, "df": 4, "d": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}}, "df": 4}, "e": {"docs": {"scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}}, "df": 4}}}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Commands.execute_command": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.IntegrationActions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1}}, "df": 2}}}}}}}}}, "h": {"docs": {"scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 2}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.classes.FileMetadata": {"tf": 1.7320508075688772}, "scrapermost.classes.Post": {"tf": 3.605551275463989}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 5.385164807134504}, "scrapermost.endpoints.Posts.create_post": {"tf": 2}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.update_post": {"tf": 2}, "scrapermost.endpoints.Posts.patch_post": {"tf": 2}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Reactions": {"tf": 2.23606797749979}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.7320508075688772}, "scrapermost.events.PostEdited": {"tf": 2}, "scrapermost.events.Posted": {"tf": 1.7320508075688772}}, "df": 29, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost": {"tf": 2}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.events.Posted": {"tf": 2.449489742783178}}, "df": 4}}, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1.7320508075688772}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 3.3166247903554}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 11}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.DataRetention": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Users.get_user": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1.7320508075688772}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}}, "df": 4, "d": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 2.23606797749979}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1.4142135623730951}}, "df": 26}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2.23606797749979}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}}, "df": 18}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.classes.Post": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}}, "df": 1}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users": {"tf": 2}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}}, "df": 7}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Preferences": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences": {"tf": 3.4641016151377544}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}}, "df": 7}}}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {"scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.SAML": {"tf": 2}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {"scrapermost.endpoints.Channels": {"tf": 2.23606797749979}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 2}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}}, "df": 13}}}}, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.put": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}}, "df": 4}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Elasticsearch": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}}, "df": 26}, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}}, "df": 6}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost": {"tf": 2.6457513110645907}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2.449489742783178}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.post": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.put": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.delete": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1.4142135623730951}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1.4142135623730951}}, "df": 225}}}}}, "s": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 2}, "scrapermost.driver.client.Client": {"tf": 2}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}}, "df": 21}}}, "t": {"docs": {"scrapermost.endpoints.Teams.get_teams": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.classes.Post": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}}, "df": 12}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels": {"tf": 3}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 2.23606797749979}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 2.23606797749979}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 2.23606797749979}, "scrapermost.endpoints.Compliance": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 2.23606797749979}, "scrapermost.endpoints.Emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 2.23606797749979}, "scrapermost.endpoints.OAuth": {"tf": 2.449489742783178}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 2.23606797749979}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 2.23606797749979}, "scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System": {"tf": 2.449489742783178}, "scrapermost.endpoints.System.get_audits": {"tf": 2.23606797749979}, "scrapermost.endpoints.System.get_logs": {"tf": 2.23606797749979}, "scrapermost.endpoints.Teams": {"tf": 2.23606797749979}, "scrapermost.endpoints.Teams.get_teams": {"tf": 2}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 2.23606797749979}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 2.449489742783178}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 2.23606797749979}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 2.23606797749979}}, "df": 29}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "\u00fc": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {"scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.classes.Post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}}, "df": 5}}}, "g": {"docs": {"scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.classes.Post": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_logs": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}}, "df": 25, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Teams.delete_team": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Users": {"tf": 2}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}}, "df": 3}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 2}, "scrapermost.endpoints.System": {"tf": 2.449489742783178}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}}, "df": 5}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System.upload_license_file": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 2}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands": {"tf": 2}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 2.23606797749979}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users": {"tf": 3}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 2}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 47, "e": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}}, "df": 7, "s": {"docs": {"scrapermost.classes.Post": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}}, "df": 6}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.async_driver.AsyncDriver": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 2.449489742783178}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}}, "df": 13}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}}, "df": 5}}}, "s": {"docs": {"scrapermost.endpoints.System": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1.4142135623730951}}, "df": 3}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1.4142135623730951}}, "df": 4}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1.7320508075688772}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.exceptions.ContentTooLarge": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1.7320508075688772}, "scrapermost.endpoints.LDAP": {"tf": 2.449489742783178}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}}, "df": 5}}}, "h": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1.7320508075688772}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost": {"tf": 4}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver": {"tf": 1.4142135623730951}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 2}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 2.6457513110645907}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1.7320508075688772}, "scrapermost.driver.client.Client.post": {"tf": 2.449489742783178}, "scrapermost.driver.client.Client.put": {"tf": 2.23606797749979}, "scrapermost.driver.client.Client.delete": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 2}, "scrapermost.driver.options.DriverOptions": {"tf": 3.605551275463989}, "scrapermost.driver.websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 2.449489742783178}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 2.23606797749979}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 2.449489742783178}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 2.23606797749979}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 2}, "scrapermost.endpoints.Teams": {"tf": 3}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.login_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1}}, "df": 145, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1.7320508075688772}, "scrapermost.driver.options.DriverOptions": {"tf": 2}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users": {"tf": 3}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 2}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1.4142135623730951}}, "df": 19, "s": {"docs": {"scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 2.23606797749979}}, "df": 3}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}}, "df": 6}}}, "o": {"docs": {"scrapermost.exceptions.ContentTooLarge": {"tf": 1.4142135623730951}}, "df": 1}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.classes.FileMetadata": {"tf": 2.6457513110645907}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}}, "df": 10}}, "e": {"docs": {"scrapermost": {"tf": 3.872983346207417}, "scrapermost.classes.EmbedMetadata": {"tf": 1.4142135623730951}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1.4142135623730951}, "scrapermost.classes.FileMetadata": {"tf": 4.69041575982343}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1.4142135623730951}, "scrapermost.classes.Post": {"tf": 4.123105625617661}, "scrapermost.classes.Post.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver": {"tf": 1}, "scrapermost.driver.async_client": {"tf": 2}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_driver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 2.23606797749979}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 2.8284271247461903}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 2.449489742783178}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1.7320508075688772}, "scrapermost.driver.base_client": {"tf": 1.7320508075688772}, "scrapermost.driver.base_client.BaseClient": {"tf": 2.23606797749979}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1.7320508075688772}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1.7320508075688772}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1.7320508075688772}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 3}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.client": {"tf": 2}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 2}, "scrapermost.driver.client.Client.post": {"tf": 3.1622776601683795}, "scrapermost.driver.client.Client.put": {"tf": 2.8284271247461903}, "scrapermost.driver.client.Client.delete": {"tf": 2}, "scrapermost.driver.driver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 2.23606797749979}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.client": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 2.8284271247461903}, "scrapermost.driver.driver.Driver.login": {"tf": 2.449489742783178}, "scrapermost.driver.driver.Driver.logout": {"tf": 1.7320508075688772}, "scrapermost.driver.options.DriverOptions": {"tf": 4.47213595499958}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 2.449489742783178}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 2}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 2.8284271247461903}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots": {"tf": 2}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 3.605551275463989}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.view_channel": {"tf": 2.449489742783178}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands": {"tf": 2}, "scrapermost.endpoints.Commands.create_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.execute_command": {"tf": 2}, "scrapermost.endpoints.Compliance": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1.7320508075688772}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji": {"tf": 2}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Posts.create_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.update_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_thread": {"tf": 2}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 3}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 2.23606797749979}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML": {"tf": 3.1622776601683795}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status": {"tf": 2.23606797749979}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System": {"tf": 4}, "scrapermost.endpoints.System.check_system_health": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_license": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_audits": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_logs": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.add_log_message": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams": {"tf": 4.58257569495584}, "scrapermost.endpoints.Teams.create_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 2}, "scrapermost.endpoints.Users": {"tf": 4.123105625617661}, "scrapermost.endpoints.Users.login_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 2}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks": {"tf": 3}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.events.Hello": {"tf": 2.23606797749979}, "scrapermost.events.Hello.__init__": {"tf": 1.7320508075688772}, "scrapermost.events.PostEdited": {"tf": 1.4142135623730951}, "scrapermost.events.PostEdited.__init__": {"tf": 1.7320508075688772}, "scrapermost.events.Posted": {"tf": 4}, "scrapermost.events.Posted.__init__": {"tf": 1.7320508075688772}}, "df": 255, "i": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}}, "df": 7}}, "m": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}}, "df": 15}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.classes.Post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Files": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"scrapermost.classes.EmbedMetadata": {"tf": 1.4142135623730951}, "scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1.4142135623730951}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 11, "s": {"docs": {"scrapermost.endpoints.Users.create_user": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.7320508075688772}, "scrapermost.classes.Post": {"tf": 2.23606797749979}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 2.23606797749979}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}}, "df": 3}}}, "d": {"docs": {"scrapermost.endpoints.Users.reset_password": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Users.reset_password": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1.4142135623730951}}, "df": 3}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Channels": {"tf": 4.242640687119285}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Commands.create_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams": {"tf": 9}, "scrapermost.endpoints.Teams.create_team": {"tf": 2}, "scrapermost.endpoints.Teams.get_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.update_team": {"tf": 2.23606797749979}, "scrapermost.endpoints.Teams.delete_team": {"tf": 2}, "scrapermost.endpoints.Teams.patch_team": {"tf": 2}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 2}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 2.23606797749979}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 2}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 2}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 2}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 2}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 2}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 2}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 2.23606797749979}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}, "scrapermost.events.Posted": {"tf": 1.4142135623730951}}, "df": 56, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2.8284271247461903}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}}, "df": 8}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}}, "df": 7, "s": {"docs": {"scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Elasticsearch": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System": {"tf": 2}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 2}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 2}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.4142135623730951}}, "df": 11}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 2.449489742783178}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}}, "df": 10, "d": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 2}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 2.23606797749979}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}}, "df": 15}, "r": {"docs": {"scrapermost": {"tf": 2.449489742783178}, "scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}, "scrapermost.classes.Post": {"tf": 1.4142135623730951}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1.7320508075688772}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 2}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.login": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 2}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 2}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 4.898979485566356}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 2}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 2}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1.7320508075688772}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts": {"tf": 2}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 2}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences": {"tf": 4.242640687119285}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 2}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 2}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Reactions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Status": {"tf": 3.3166247903554}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 5.196152422706632}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 2}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 2}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 2}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 8.306623862918075}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 2}, "scrapermost.endpoints.Users.update_user": {"tf": 2}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 2}, "scrapermost.endpoints.Users.patch_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user_role": {"tf": 2.23606797749979}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 2}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 2}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 2}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1.4142135623730951}, "scrapermost.events.Posted": {"tf": 1}}, "df": 106, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}}, "df": 11, "s": {"docs": {"scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2.23606797749979}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 3.605551275463989}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}}, "df": 20}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}}, "df": 8}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.classes.EmbedMetadata": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}}, "df": 18, "s": {"docs": {"scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1}, "scrapermost.driver.driver.Driver.client": {"tf": 1}}, "df": 10}}}}}}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1.4142135623730951}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}}, "df": 8, "s": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {"scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 2.449489742783178}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}}, "df": 18}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels": {"tf": 3.1622776601683795}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 2}, "scrapermost.endpoints.Posts.update_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2.8284271247461903}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 3.4641016151377544}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 2}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}}, "df": 37, "d": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {"scrapermost.endpoints.Teams.create_team": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 3.1622776601683795}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver": {"tf": 1.4142135623730951}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1.7320508075688772}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 2}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1.7320508075688772}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.client": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.options": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 2.23606797749979}, "scrapermost.driver.websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.update_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}, "scrapermost.exceptions.ResourceNotFound": {"tf": 1}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 1}, "scrapermost.exceptions.ContentTooLarge": {"tf": 1}, "scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 41}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}}, "df": 7, "s": {"docs": {"scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 1}, "l": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}}, "df": 2}}, "x": {"docs": {"scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Reactions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}}, "df": 10}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}}, "df": 31}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.Post": {"tf": 2.23606797749979}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels": {"tf": 2}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.add_log_message": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.Posted": {"tf": 2.449489742783178}}, "df": 16, "s": {"docs": {"scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}}, "df": 6}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Channels": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2.449489742783178}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}}, "df": 10, "s": {"docs": {"scrapermost.endpoints.Channels": {"tf": 2.23606797749979}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2.449489742783178}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 18, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}}, "df": 2, "s": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}}, "df": 1, "i": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1.4142135623730951}}, "df": 8}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.7320508075688772}, "scrapermost.classes.Post": {"tf": 2}}, "df": 2}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}}, "df": 1}}, "x": {"docs": {"scrapermost.endpoints.System": {"tf": 1}}, "df": 1}}, "y": {"docs": {"scrapermost": {"tf": 1.7320508075688772}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users": {"tf": 1.7320508075688772}}, "df": 2}}, "s": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}}, "df": 2}}}, "a": {"docs": {"scrapermost": {"tf": 3.1622776601683795}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1.4142135623730951}, "scrapermost.classes.FileMetadata": {"tf": 2}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1.4142135623730951}, "scrapermost.classes.Post": {"tf": 2.23606797749979}, "scrapermost.classes.Post.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 2.23606797749979}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.put": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 2}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket": {"tf": 2}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 3.4641016151377544}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 6.082762530298219}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 2.8284271247461903}, "scrapermost.endpoints.Commands.create_command": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance": {"tf": 2.23606797749979}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 2.449489742783178}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Files.upload_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts": {"tf": 4}, "scrapermost.endpoints.Posts.create_post": {"tf": 2}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.update_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 2}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions": {"tf": 2.23606797749979}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles": {"tf": 2}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System": {"tf": 2.8284271247461903}, "scrapermost.endpoints.System.send_test_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.update_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 5}, "scrapermost.endpoints.Teams.create_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 2}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 5.744562646538029}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.search_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.patch_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.reset_password": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1.4142135623730951}, "scrapermost.events.Hello.__init__": {"tf": 1.4142135623730951}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1.4142135623730951}, "scrapermost.events.Posted": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1.4142135623730951}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}, "scrapermost.exceptions.ResourceNotFound": {"tf": 1}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 1}, "scrapermost.exceptions.ContentTooLarge": {"tf": 1}, "scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 220, "p": {"docs": {}, "df": 0, "i": {"docs": {"scrapermost": {"tf": 2.449489742783178}, "scrapermost.driver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 2}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.options": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket": {"tf": 1}, "scrapermost.endpoints": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}}, "df": 63, "v": {"4": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "/": {"docs": {}, "df": 0, "v": {"4": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "p": {"docs": {"scrapermost.endpoints.OAuth": {"tf": 3.1622776601683795}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.OAuth": {"tf": 2}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 7, "s": {"docs": {"scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}}, "df": 2}, "/": {"docs": {}, "df": 0, "x": {"docs": {"scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {"scrapermost.endpoints.OAuth": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Teams.get_teams": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 2}, "scrapermost.driver.async_client.AsyncClient": {"tf": 2.23606797749979}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 2.23606797749979}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}}, "df": 27, "d": {"docs": {"scrapermost": {"tf": 2}, "scrapermost.classes.Post": {"tf": 2.449489742783178}, "scrapermost.driver": {"tf": 1}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1.4142135623730951}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 2}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}}, "df": 44}, "y": {"docs": {"scrapermost": {"tf": 2}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.create_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.upload_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1.7320508075688772}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.update_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.send_test_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.update_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_license": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_logs": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.add_log_message": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_analytics": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.create_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.login_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.logout_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_stats": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.patch_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.reset_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1.4142135623730951}}, "df": 234}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Posts.create_post": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1.4142135623730951}}, "df": 4}}}}, "s": {"docs": {"scrapermost.driver": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}}, "df": 7, "s": {"docs": {"scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2.8284271247461903}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1.4142135623730951}}, "df": 9, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"scrapermost": {"tf": 1.7320508075688772}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1.4142135623730951}, "scrapermost.events.PostEdited.__init__": {"tf": 1.4142135623730951}, "scrapermost.events.Posted.__init__": {"tf": 1.4142135623730951}}, "df": 49, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 5, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost": {"tf": 1.7320508075688772}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 2.23606797749979}, "scrapermost.driver.async_driver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}}, "df": 5}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost": {"tf": 2}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 1.7320508075688772}, "scrapermost.classes.Post": {"tf": 2.23606797749979}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1.4142135623730951}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1.4142135623730951}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 44}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}}, "df": 5}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 2.23606797749979}, "scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2.449489742783178}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}}, "df": 11, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}}, "df": 2}}}}}}}}}}, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.4142135623730951}}, "df": 2}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}}, "df": 2, "d": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Users.deactivate_user": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}}, "df": 8}, "g": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}}, "df": 7}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}}, "df": 5, "d": {"docs": {"scrapermost.events.Hello": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2.23606797749979}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 12}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.OAuth": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}}, "df": 8}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}}, "df": 2, "s": {"docs": {"scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}}, "df": 4}}}, "l": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}}, "df": 14, "o": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.endpoints.Users.get_user": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Compliance": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"scrapermost.endpoints.Compliance": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.classes.Post": {"tf": 2}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.classes.Post": {"tf": 1}}, "df": 1}, "s": {"docs": {"scrapermost.classes.Post": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {"scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 2}, "scrapermost.driver.client.Client": {"tf": 2}, "scrapermost.driver.client.Client.get": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.post": {"tf": 2.23606797749979}, "scrapermost.driver.client.Client.put": {"tf": 2}, "scrapermost.driver.client.Client.delete": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions": {"tf": 1.7320508075688772}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}}, "df": 47, "s": {"docs": {"scrapermost.driver": {"tf": 1}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.create_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.upload_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.update_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.check_system_health": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.send_test_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.update_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_license": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_logs": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.add_log_message": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_analytics": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.create_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.logout_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_stats": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.patch_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.reset_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1.4142135623730951}}, "df": 227}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}}, "df": 3}}, "s": {"docs": {"scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.client": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}, "scrapermost.exceptions.ResourceNotFound": {"tf": 1}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 1}, "scrapermost.exceptions.ContentTooLarge": {"tf": 1}, "scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 267}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1.4142135623730951}, "scrapermost.endpoints.DataRetention": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1.7320508075688772}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.post": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.put": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.delete": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.login": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.create_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.upload_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.update_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.check_system_health": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.send_test_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.update_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_license": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_logs": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.add_log_message": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_analytics": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.create_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.logout_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_stats": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.patch_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.reset_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1.4142135623730951}}, "df": 224}}}}}, "t": {"docs": {"scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.exceptions.ResourceNotFound": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Reactions": {"tf": 2}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}}, "df": 3, "s": {"docs": {"scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 2}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}}, "df": 6}}}}}}, "d": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Teams.delete_team": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 3, "d": {"docs": {"scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Users.reset_password": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.OAuth": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.OAuth": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 4}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users": {"tf": 2}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 11}, "d": {"docs": {"scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}, "scrapermost.exceptions.ResourceNotFound": {"tf": 1}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 1}, "scrapermost.exceptions.ContentTooLarge": {"tf": 1}, "scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 7}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.Post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_post": {"tf": 1.4142135623730951}}, "df": 4}, "m": {"docs": {"scrapermost.endpoints.Commands.execute_command": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Roles": {"tf": 3.3166247903554}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 2}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 2}, "scrapermost.endpoints.Roles.patch_role": {"tf": 2}, "scrapermost.endpoints.Users": {"tf": 1}}, "df": 5, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels": {"tf": 2.449489742783178}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 2}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1.4142135623730951}}, "df": 12}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {"scrapermost.classes.Post": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"scrapermost": {"tf": 2.23606797749979}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 2.449489742783178}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post": {"tf": 2}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}, "scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 29}, "n": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 2.6457513110645907}, "scrapermost.classes.Post": {"tf": 2.6457513110645907}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 2}, "scrapermost.driver.client.Client.put": {"tf": 1.7320508075688772}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 2.449489742783178}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.events.Posted": {"tf": 2}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}}, "df": 89, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Teams.get_teams": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 2.23606797749979}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1.7320508075688772}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 18}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}}, "df": 7, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}}, "df": 15}}}}}}}}}, "t": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 2.449489742783178}, "scrapermost.classes.Post": {"tf": 2.449489742783178}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_logs": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}}, "df": 17, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"scrapermost.endpoints.IntegrationActions": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {"scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.4142135623730951}}, "df": 4}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 2}, "scrapermost.driver.client.Client.put": {"tf": 1.7320508075688772}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 54, "s": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Commands.execute_command": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Webhooks": {"tf": 2.8284271247461903}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 11}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Teams": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1.7320508075688772}}, "df": 12}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Elasticsearch": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {"scrapermost": {"tf": 1.7320508075688772}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}}, "df": 6, "s": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1.4142135623730951}}, "df": 5}}, "d": {"docs": {"scrapermost": {"tf": 2.449489742783178}, "scrapermost.classes.FileMetadata": {"tf": 2.8284271247461903}, "scrapermost.classes.Post": {"tf": 3.3166247903554}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 3.1622776601683795}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 2}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels": {"tf": 6.6332495807108}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 2.23606797749979}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.view_channel": {"tf": 2.449489742783178}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands": {"tf": 2.8284271247461903}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 2.449489742783178}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 2.23606797749979}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 4.123105625617661}, "scrapermost.endpoints.Posts.create_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.update_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 2}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences": {"tf": 2.23606797749979}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles": {"tf": 2}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 2.23606797749979}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 5.744562646538029}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 2}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 2}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 4.795831523312719}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 3.872983346207417}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 2}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 2}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1.4142135623730951}, "scrapermost.events.Posted": {"tf": 1.4142135623730951}}, "df": 169, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"scrapermost.endpoints.Channels": {"tf": 2.449489742783178}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}}, "df": 10}, "p": {"docs": {"scrapermost.endpoints.SAML": {"tf": 2}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 2.23606797749979}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.4142135623730951}}, "df": 1}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 2.23606797749979}, "scrapermost.endpoints.Bots": {"tf": 2}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 2.23606797749979}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1.4142135623730951}}, "df": 19}}}}, "f": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 2.23606797749979}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1.4142135623730951}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1.4142135623730951}, "scrapermost.events.PostEdited.__init__": {"tf": 1.4142135623730951}, "scrapermost.events.Posted.__init__": {"tf": 1.4142135623730951}}, "df": 24}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Bots": {"tf": 2.449489742783178}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2.449489742783178}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}}, "df": 11}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 3.3166247903554}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands": {"tf": 2}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 2.23606797749979}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 2.23606797749979}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 3.3166247903554}, "scrapermost.endpoints.Teams.create_team": {"tf": 2}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 92, "k": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}, "m": {"docs": {"scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1.7320508075688772}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 10}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.exceptions.ResourceNotFound": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost": {"tf": 2.23606797749979}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 2.23606797749979}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2.23606797749979}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.logout_user": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 40}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 4.47213595499958}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 4.123105625617661}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 2}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 2}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 2}}, "df": 17, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1.7320508075688772}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}}, "df": 19, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.Post": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}}, "df": 12}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1.7320508075688772}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}}, "df": 11}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.exceptions.FeatureDisabled": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {"scrapermost.endpoints.Teams.create_team": {"tf": 1.4142135623730951}}, "df": 1, "f": {"docs": {"scrapermost": {"tf": 1.7320508075688772}, "scrapermost.classes.FileMetadata": {"tf": 2.449489742783178}, "scrapermost.classes.Post": {"tf": 2.23606797749979}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1.7320508075688772}, "scrapermost.driver.client.Client.put": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 3.1622776601683795}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 2.449489742783178}, "scrapermost.endpoints.Posts.get_post": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System": {"tf": 2.23606797749979}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_logs": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 2}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 3.3166247903554}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.search_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 2}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.7320508075688772}, "scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.Posted": {"tf": 2}}, "df": 129, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"scrapermost": {"tf": 2.23606797749979}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 2}, "scrapermost.endpoints.Channels.search_channels": {"tf": 2}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.create_command": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1.7320508075688772}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 2.23606797749979}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 2}, "scrapermost.endpoints.Files.upload_file": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1.7320508075688772}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1.7320508075688772}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1.7320508075688772}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1.7320508075688772}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.create_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.update_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 2}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.check_system_health": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.send_test_email": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.get_configuration": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.update_configuration": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.get_client_license": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.get_audits": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.get_logs": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.add_log_message": {"tf": 2}, "scrapermost.endpoints.System.get_analytics": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.create_team": {"tf": 2}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.update_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 2}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.create_user": {"tf": 2}, "scrapermost.endpoints.Users.get_users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.search_users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_stats": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.patch_user": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user_role": {"tf": 2}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 2}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.reset_password": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1.7320508075688772}}, "df": 233, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Channels.add_user": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Bots.get_bots": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.classes": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}}, "df": 57, "s": {"docs": {"scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1.7320508075688772}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1.7320508075688772}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1.7320508075688772}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.__init__": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}}, "df": 13}, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 2}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 44, "l": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.IntegrationActions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}}, "df": 8, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Opengraph": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}}, "df": 8, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Webhooks": {"tf": 3.4641016151377544}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}}, "df": 6}}}}}}}, "n": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 3.1622776601683795}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2.23606797749979}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}}, "df": 42, "e": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}}, "df": 19}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.events.Posted": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth": {"tf": 4}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}}, "df": 9}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}}, "df": 4}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost": {"tf": 5.385164807134504}, "scrapermost.driver": {"tf": 1.4142135623730951}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_driver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_driver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.driver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}}, "df": 18, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.client.Client.__init__": {"tf": 1}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1.7320508075688772}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.disconnect_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}}, "df": 5}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}}, "df": 4, "d": {"docs": {"scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.exceptions.FeatureDisabled": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1.4142135623730951}}, "df": 13}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1.7320508075688772}, "scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1.4142135623730951}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1.4142135623730951}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 2}, "scrapermost.driver.client.Client.put": {"tf": 1.7320508075688772}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.update_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.update_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1.4142135623730951}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 102}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.IntegrationActions": {"tf": 2}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.System": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {"scrapermost": {"tf": 2.23606797749979}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_driver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.driver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}, "scrapermost.events": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}}, "df": 39}}}, "e": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient": {"tf": 2.23606797749979}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 2}, "scrapermost.driver.client.Client.put": {"tf": 1.7320508075688772}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions": {"tf": 4.358898943540674}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1.4142135623730951}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_logs": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 2}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}}, "df": 48}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 2.23606797749979}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}}, "df": 11}}}}}}}}, "k": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.options.DriverOptions.__init__": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}}, "df": 32, "d": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}}, "df": 12}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1}}, "df": 2}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.System.add_log_message": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost": {"tf": 2}, "scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.post": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.put": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1.4142135623730951}, "scrapermost.endpoints.DataRetention": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}}, "df": 22, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}}, "df": 6, "s": {"docs": {"scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"scrapermost.classes.Post": {"tf": 2.23606797749979}}, "df": 1}}}, "o": {"docs": {"scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 3}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Compliance": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Teams.update_team": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.exceptions.ContentTooLarge": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.classes.Post": {"tf": 1}}, "df": 1}}, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 2.449489742783178}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 2}, "scrapermost.driver.websocket.Websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1.7320508075688772}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": null}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": null}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Teams.search_teams": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.LDAP": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 2, "d": {"docs": {"scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System": {"tf": 3.1622776601683795}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 2}}, "df": 14}}}}}}}}}}}, "m": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"4": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "docs": {}, "df": 0}}}}}, "v": {"4": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "docs": {}, "df": 0}, "#": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.System.send_test_email": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.System.update_configuration": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Compliance": {"tf": 2.23606797749979}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Commands": {"tf": 3.872983346207417}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands.delete_command": {"tf": 2}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 2}, "scrapermost.endpoints.Commands.execute_command": {"tf": 2}}, "df": 6, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands": {"tf": 2.449489742783178}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Posts.create_post": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.Post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}}, "df": 6, "s": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.add_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.create_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.update_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1.4142135623730951}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.upload_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.delete_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.update_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.check_system_health": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.send_test_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.update_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.remove_license_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_license": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_logs": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.add_log_message": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_analytics": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.create_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.login_user": {"tf": 1}, "scrapermost.endpoints.Users.logout_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_stats": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.patch_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.reset_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 220}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.login": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Users.reset_password": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1.7320508075688772}, "scrapermost.driver": {"tf": 1.4142135623730951}, "scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1.7320508075688772}, "scrapermost.driver.async_client.AsyncClient.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1.7320508075688772}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 2.23606797749979}, "scrapermost.driver.base_client.BaseClient.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 2.449489742783178}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 2}, "scrapermost.driver.client.Client.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver": {"tf": 2}, "scrapermost.driver.driver.Driver.client": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 2.449489742783178}, "scrapermost.endpoints.OAuth": {"tf": 2.8284271247461903}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.delete_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.regenerate_oauth_app_secret": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 2}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}}, "df": 35, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 2}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver.async_client": {"tf": 1.4142135623730951}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1}, "scrapermost.driver.async_driver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_driver": {"tf": 1}, "scrapermost.driver.client": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client": {"tf": 1}, "scrapermost.driver.driver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.Elasticsearch": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}}, "df": 48, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.classes": {"tf": 1}, "scrapermost.driver": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.endpoints": {"tf": 1}, "scrapermost.events": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {"scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Cluster": {"tf": 2}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}}, "df": 1, "s": {"docs": {"scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.reload_configuration": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}, "scrapermost.classes.Post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels": {"tf": 8.602325267042627}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel": {"tf": 2}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 2}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 2}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 2}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.add_user": {"tf": 2.449489742783178}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 2}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 2}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.view_channel": {"tf": 2.8284271247461903}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 2}, "scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts": {"tf": 3.605551275463989}, "scrapermost.endpoints.Posts.create_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.events.Posted": {"tf": 2.449489742783178}}, "df": 50, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels": {"tf": 3.7416573867739413}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 12}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.check_system_health": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}}, "df": 11}, "l": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Webhooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 2, "s": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Preferences": {"tf": 2}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.invalidate_all_caches": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 2.449489742783178}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.create_report": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 2}, "scrapermost.endpoints.Posts.create_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 2}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}}, "df": 30, "d": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}}, "df": 5}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"scrapermost.endpoints.Commands": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji": {"tf": 3.872983346207417}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.exceptions": {"tf": 1}}, "df": 11}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.get_configuration": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}}, "df": 12, "l": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.SAML": {"tf": 3}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}}, "df": 5, "s": {"docs": {"scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 2}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1.4142135623730951}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.url": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.client": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.driver.Driver.client": {"tf": 1}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 2.449489742783178}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 5.291502622129181}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1}, "scrapermost.endpoints.Cluster": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 2}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1.4142135623730951}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 2.8284271247461903}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 3.1622776601683795}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.OAuth": {"tf": 2.8284271247461903}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_info_on_oauth_app": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 3.4641016151377544}, "scrapermost.endpoints.Posts.get_post": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_thread": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 2}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 2.449489742783178}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 2}, "scrapermost.endpoints.SAML.get_metadata": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 2}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 3.605551275463989}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 5.0990195135927845}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_invite_info_for_team": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 4.898979485566356}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.get_stats": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 2.449489742783178}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}}, "df": 150, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}}, "df": 5}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.delete_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.restore_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_statistics": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_pinned_posts": {"tf": 1}, "scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.remove_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channels_for_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_unread_messages": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Commands.list_autocomplete_commands": {"tf": 1}, "scrapermost.endpoints.Compliance.get_report": {"tf": 1}, "scrapermost.endpoints.Compliance.download_report": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Files.get_file_thumbnail": {"tf": 1}, "scrapermost.endpoints.Files.get_file_preview": {"tf": 1}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.Files.get_file_metadata": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_file_info_for_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Posts.pin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.unpin_post_to_channel": {"tf": 1}, "scrapermost.endpoints.Posts.perform_post_action": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Preferences.get_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles.get_role_by_id": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1}, "scrapermost.endpoints.Teams.get_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_user_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.remove_user_from_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_stats": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.update_team_member_roles": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Teams.get_unreads_for_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_scheme": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1}, "scrapermost.endpoints.Users.get_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1}, "scrapermost.endpoints.Users.generate_mfa": {"tf": 1}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1}, "scrapermost.endpoints.Users.revoke_all_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 110, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {"scrapermost": {"tf": 2.23606797749979}}, "df": 1}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.list_user_preferences_by_category": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 2.23606797749979}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}}, "df": 12}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.System.check_system_health": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 3.3166247903554}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1.7320508075688772}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 3}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 2.6457513110645907}, "scrapermost.driver.driver.Driver": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 2.8284271247461903}, "scrapermost.driver.options.DriverOptions": {"tf": 2.23606797749979}, "scrapermost.driver.websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 3.7416573867739413}, "scrapermost.driver.websocket.Websocket.__init__": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.timeout": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1.7320508075688772}, "scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}, "scrapermost.events": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 17}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.Webhooks": {"tf": 3.1622776601683795}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 4}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost": {"tf": 2.449489742783178}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.LDAP": {"tf": 1}, "scrapermost.endpoints.LDAP.sync_ldap": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}}, "df": 12, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}}, "df": 10}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}}, "df": 2}}, "s": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.classes.FileMetadata": {"tf": 2}, "scrapermost.classes.Post": {"tf": 2.23606797749979}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted": {"tf": 2.23606797749979}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 9}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.DataRetention": {"tf": 1}, "scrapermost.endpoints.DataRetention.get_data_retention_policy": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Users.get_user": {"tf": 1}, "scrapermost.events.Posted": {"tf": 2}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 2}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}}, "df": 11}}}}, "n": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}, "scrapermost.exceptions.ResourceNotFound": {"tf": 1}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 1}, "scrapermost.exceptions.ContentTooLarge": {"tf": 1}, "scrapermost.exceptions.FeatureDisabled": {"tf": 1}}, "df": 12}, "r": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.add_user": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 2}, "w": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.exceptions.NoAccessTokenProvided": {"tf": 1.4142135623730951}}, "df": 3, "t": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Users.get_user_access_token": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1.4142135623730951}, "scrapermost.exceptions.ResourceNotFound": {"tf": 1.4142135623730951}, "scrapermost.exceptions.MethodNotAllowed": {"tf": 1.4142135623730951}}, "df": 10, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}}, "df": 2, "s": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "e": {"docs": {"scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1}}, "df": 2}}, "n": {"docs": {"scrapermost.endpoints.Teams.create_team": {"tf": 1}}, "df": 1, "e": {"docs": {"scrapermost": {"tf": 1.7320508075688772}, "scrapermost.driver.async_client.AsyncClient": {"tf": 3}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 2.23606797749979}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 3}, "scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 2}, "scrapermost.driver.client.Client.put": {"tf": 1.7320508075688772}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 3}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 5}, "scrapermost.endpoints.Webhooks": {"tf": 1.7320508075688772}}, "df": 22}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}, "scrapermost.driver.websocket.Websocket.last_msg": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}, "scrapermost.endpoints.Channels.create_group_message_channel": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}}, "df": 24}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 3}, "scrapermost.endpoints.Channels.create_channel": {"tf": 2}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.autocomplete_channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.search_channels": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.get_channel_by_name": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels.get_channel_by_name_and_team_name": {"tf": 2.23606797749979}, "scrapermost.endpoints.Emoji": {"tf": 2.449489742783178}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.get_specific_user_preference": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Roles": {"tf": 2}, "scrapermost.endpoints.Roles.get_role_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Teams.create_team": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.update_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.events.Posted": {"tf": 2.449489742783178}}, "df": 38, "s": {"docs": {"scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.get_list_of_roles_by_name": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.Channels.get_public_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_deleted_channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.OAuth.get_oauth_apps": {"tf": 1}, "scrapermost.endpoints.OAuth.get_authorized_oauth_apps": {"tf": 1}, "scrapermost.endpoints.System.get_audits": {"tf": 1}, "scrapermost.endpoints.System.get_logs": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_incoming_hooks": {"tf": 1}, "scrapermost.endpoints.Webhooks.list_outgoing_hooks": {"tf": 1}}, "df": 15}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"scrapermost": {"tf": 1.7320508075688772}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.endpoints.Users.patch_user": {"tf": 1}}, "df": 3, "r": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Files.get_public_file_link": {"tf": 1}, "scrapermost.endpoints.LDAP.test_ldap_config": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.endpoints.Teams.set_team_icon": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.get_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1}}, "df": 28, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.create_direct_message_channel": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML.remove_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}}}}}}}, "y": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Channels": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Channels.get_list_of_channels_by_ids": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.add_user": {"tf": 1}, "scrapermost.endpoints.Compliance": {"tf": 1}, "scrapermost.endpoints.Compliance.get_reports": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Posts": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Preferences": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.get_reactions_of_post": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 2}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Status.get_user_status": {"tf": 1}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.recycle_database_connection": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 3.1622776601683795}, "scrapermost.endpoints.Users.update_user": {"tf": 1}, "scrapermost.endpoints.Users.deactivate_user": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_username": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1}, "scrapermost.endpoints.Users.get_user_sessions": {"tf": 1}, "scrapermost.endpoints.Users.get_user_audits": {"tf": 1}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}}, "df": 45, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1}, "scrapermost.endpoints.Files.upload_file": {"tf": 1}, "scrapermost.endpoints.SAML.upload_idp_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.Users.set_user_profile_image": {"tf": 1}}, "df": 9}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}, "scrapermost.classes.Post": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 2}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}, "scrapermost.endpoints.Commands.list_commands_for_team": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.delete_team": {"tf": 1}, "scrapermost.events.Posted": {"tf": 1}}, "df": 9}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.post": {"tf": 2}, "scrapermost.driver.client.Client.put": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels": {"tf": 2.23606797749979}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.create_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts": {"tf": 2.23606797749979}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Teams": {"tf": 2}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 5}, "scrapermost.endpoints.Users.login_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.patch_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.reset_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks": {"tf": 2}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}, "scrapermost.exceptions.InvalidOrMissingParameters": {"tf": 1}}, "df": 77}}, "t": {"docs": {"scrapermost.endpoints.Bots": {"tf": 5.196152422706632}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.get_bot": {"tf": 2}, "scrapermost.endpoints.Bots.disable_bot": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.assign_bot_to_user": {"tf": 2}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1.7320508075688772}}, "df": 10, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots": {"tf": 2}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Bots.get_bot": {"tf": 1}}, "df": 4}, "h": {"docs": {"scrapermost.endpoints.Users.update_user_role": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Commands.execute_command": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_driver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.get_channel_members_by_ids": {"tf": 1}, "scrapermost.endpoints.Commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.delete_command": {"tf": 1}, "scrapermost.endpoints.Commands.generate_new_token": {"tf": 1}, "scrapermost.endpoints.Emoji": {"tf": 1}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2.23606797749979}, "scrapermost.endpoints.Teams.get_team_by_name": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members_by_id": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 2}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1}, "scrapermost.endpoints.Users.search_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1}}, "df": 20}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Brand": {"tf": 2.449489742783178}, "scrapermost.endpoints.Brand.get_brand_image": {"tf": 1}, "scrapermost.endpoints.Brand.upload_brand_image": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Channels": {"tf": 1}, "scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}}, "df": 4}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.events.Hello": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client.BaseClient.user_id": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.username": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.token": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.cookies": {"tf": 1}, "scrapermost.endpoints.Channels.set_channel_scheme": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {"scrapermost.classes.Post": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "v": {"docs": {"scrapermost": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.get_configuration_environment": {"tf": 1}}, "df": 3}}}}}}}}}, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 2}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 2}, "scrapermost.driver.client.Client.get": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.post": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.put": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.delete": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Brand": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Channels": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Cluster": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Commands": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Compliance": {"tf": 1.7320508075688772}, "scrapermost.endpoints.DataRetention": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Elasticsearch": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Files": {"tf": 1.7320508075688772}, "scrapermost.endpoints.IntegrationActions": {"tf": 1.7320508075688772}, "scrapermost.endpoints.LDAP": {"tf": 1.7320508075688772}, "scrapermost.endpoints.OAuth": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Opengraph": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Posts": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Preferences": {"tf": 2}, "scrapermost.endpoints.Reactions": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Roles": {"tf": 1.7320508075688772}, "scrapermost.endpoints.SAML": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Status": {"tf": 2}, "scrapermost.endpoints.System": {"tf": 2}, "scrapermost.endpoints.Teams": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks": {"tf": 1.7320508075688772}}, "df": 54, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.users": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.teams": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.channels": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.posts": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.files": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.preferences": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.reactions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.system": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.webhooks": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.compliance": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.cluster": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.brand": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.oauth": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.saml": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.ldap": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.data_retention": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.status": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.commands": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.roles": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.opengraph": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.integration_actions": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver.bots": {"tf": 1}, "scrapermost.endpoints": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}}, "df": 27}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"scrapermost.driver.websocket.Websocket.disconnect": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.endpoints.SAML": {"tf": 1.4142135623730951}, "scrapermost.endpoints.SAML.upload_public_certificate": {"tf": 1}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}, "scrapermost.endpoints.Bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.enable_bot": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}}, "df": 8, "d": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.System.upload_license_file": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost": {"tf": 2.23606797749979}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users": {"tf": 2.6457513110645907}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1}, "scrapermost.endpoints.Users.get_user_by_email": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1}}, "df": 15}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.classes.EmbedMetadata": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.classes.EmbedMetadata": {"tf": 1}, "scrapermost.classes.Post": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "i": {"docs": {"scrapermost.driver.base_driver.BaseDriver.emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji": {"tf": 4.69041575982343}, "scrapermost.endpoints.Emoji.create_custom_emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Emoji.get_custom_emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.delete_custom_emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.get_custom_emoji_by_name": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.get_custom_emoji_image": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Emoji.search_custom_emoji": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Emoji.autocomplete_custom_emoji": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Reactions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Reactions.delete_reaction": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"scrapermost.classes.Post": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 2.6457513110645907}, "scrapermost.driver.base_client.BaseClient": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1}, "scrapermost.endpoints.Commands.create_command": {"tf": 1}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Preferences.save_user_preferences": {"tf": 1}, "scrapermost.endpoints.Preferences.delete_user_preferences": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}}, "df": 32}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.execute_command": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.exceptions": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.check_team_exists": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"scrapermost.endpoints.Teams": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Teams.invite_users_to_team_by_mail": {"tf": 1}, "scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.endpoints.Teams.add_multiple_users_to_team": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.endpoints.Emoji.get_emoji_list": {"tf": 1}, "scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 3.3166247903554}, "scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.events.Hello": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 2}, "scrapermost.events.PostEdited": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 2}, "scrapermost.events.Posted": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 2}}, "df": 16, "s": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.events": {"tf": 1}}, "df": 7}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.Post": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.classes.Post": {"tf": 1}, "scrapermost.events.PostEdited": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.driver.base_driver.BaseDriver.elasticsearch": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Elasticsearch": {"tf": 2.449489742783178}, "scrapermost.endpoints.Elasticsearch.test_elasticsearch_configuration": {"tf": 1}, "scrapermost.endpoints.Elasticsearch.purge_all_elasticsearch_indexes": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.endpoints.Commands.execute_command": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"scrapermost.endpoints.Posts": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.endpoints.System.add_log_message": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1.7320508075688772}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1.7320508075688772}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient.get_auth_header": {"tf": 1}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"scrapermost.endpoints.Cluster.get_cluster_status": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System.check_system_health": {"tf": 1}}, "df": 3, "y": {"docs": {"scrapermost.endpoints.System.check_system_health": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"scrapermost.events.Hello": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 2}, "scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.driver.async_client": {"tf": 1}, "scrapermost.driver.base_client": {"tf": 1}, "scrapermost.driver.client": {"tf": 1}}, "df": 3}}}, "w": {"docs": {"scrapermost.driver.base_driver.BaseDriver": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {"scrapermost.endpoints.Webhooks": {"tf": 4.47213595499958}, "scrapermost.endpoints.Webhooks.get_incoming_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.get_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.delete_outgoing_hook": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Webhooks.regenerate_token_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}}, "df": 9, "s": {"docs": {"scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1}, "scrapermost.endpoints.Webhooks": {"tf": 1.7320508075688772}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"2": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}, "docs": {"scrapermost.driver.base_driver.BaseDriver": {"tf": 1}, "scrapermost.exceptions": {"tf": 1}}, "df": 2, "s": {"docs": {"scrapermost": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 2, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.base_client.BaseClient": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}}, "df": 4}}}}}}}}}}}, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {"scrapermost.driver.async_client.AsyncClient": {"tf": 1.4142135623730951}, "scrapermost.driver.async_client.AsyncClient.httpx_client": {"tf": 1.4142135623730951}, "scrapermost.driver.base_client.BaseClient": {"tf": 2.449489742783178}, "scrapermost.driver.base_client.BaseClient.httpx_client": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.auth": {"tf": 1}, "scrapermost.driver.base_client.BaseClient.activate_verbose_logging": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.httpx_client": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.get": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.post": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.put": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.delete": {"tf": 1.4142135623730951}, "scrapermost.driver.options.DriverOptions": {"tf": 2.23606797749979}}, "df": 13}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}}, "df": 4}}}}}, "/": {"2": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"scrapermost.endpoints.Bots": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots.get_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.set_bot_lhs_icon": {"tf": 1}, "scrapermost.endpoints.Bots.delete_bot_lhs_icon": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 5, "r": {"docs": {"scrapermost": {"tf": 2}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Teams.create_team": {"tf": 1}}, "df": 8}}}}}, "s": {"docs": {"scrapermost.classes.FileMetadata": {"tf": 1}, "scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}, "scrapermost.endpoints.Files": {"tf": 1}, "scrapermost.endpoints.Files.get_file": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.System": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1}}, "df": 11, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"scrapermost.classes.Post": {"tf": 1.4142135623730951}}, "df": 1}}}}, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"scrapermost.endpoints.Teams.add_user_to_team_from_invite": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Channels.view_channel": {"tf": 1}, "scrapermost.exceptions.NotEnoughPermissions": {"tf": 1}}, "df": 2}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"scrapermost": {"tf": 5.830951894845301}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.driver.client.Client.get": {"tf": 1}, "scrapermost.driver.client.Client.post": {"tf": 1}, "scrapermost.driver.client.Client.put": {"tf": 1}, "scrapermost.driver.client.Client.delete": {"tf": 1}, "scrapermost.endpoints.Bots.get_bots": {"tf": 1}, "scrapermost.endpoints.Posts.get_list_of_flagged_posts": {"tf": 1}, "scrapermost.endpoints.Posts.get_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.Posts.get_unread_posts_for_channel": {"tf": 1}, "scrapermost.endpoints.System.get_client_configuration": {"tf": 1}, "scrapermost.endpoints.System.get_client_license": {"tf": 1}, "scrapermost.endpoints.System.get_analytics": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_members": {"tf": 1}, "scrapermost.endpoints.Teams.get_team_unreads_for_user": {"tf": 1}, "scrapermost.endpoints.Users.create_user": {"tf": 1}, "scrapermost.endpoints.Users.get_users": {"tf": 1}, "scrapermost.endpoints.Users.autocomplete_users": {"tf": 1}}, "df": 17}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"scrapermost": {"tf": 1.7320508075688772}, "scrapermost.driver.async_client.AsyncClient": {"tf": 1.4142135623730951}, "scrapermost.driver.async_driver.AsyncDriver": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.init_websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.async_driver.AsyncDriver.login": {"tf": 1}, "scrapermost.driver.async_driver.AsyncDriver.logout": {"tf": 1}, "scrapermost.driver.client.Client": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.post": {"tf": 1.4142135623730951}, "scrapermost.driver.client.Client.put": {"tf": 1.4142135623730951}, "scrapermost.driver.driver.Driver": {"tf": 1}, "scrapermost.driver.driver.Driver.init_websocket": {"tf": 1.7320508075688772}, "scrapermost.driver.driver.Driver.login": {"tf": 1}, "scrapermost.driver.driver.Driver.logout": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1.7320508075688772}, "scrapermost.endpoints.Bots": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Bots.create_bot": {"tf": 1}, "scrapermost.endpoints.Bots.patch_bot": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels": {"tf": 2.23606797749979}, "scrapermost.endpoints.Channels.create_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.patch_channel": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_scheme_derived_roles_of_channel_member": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Channels.update_channel_notifications": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.create_command": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Commands.update_command": {"tf": 1}, "scrapermost.endpoints.IntegrationActions": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.open_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.IntegrationActions.submit_dialog": {"tf": 1.4142135623730951}, "scrapermost.endpoints.OAuth": {"tf": 1}, "scrapermost.endpoints.OAuth.register_oauth_app": {"tf": 1}, "scrapermost.endpoints.Opengraph": {"tf": 1}, "scrapermost.endpoints.Opengraph.get_opengraph_metadata_for_url": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Posts": {"tf": 2.23606797749979}, "scrapermost.endpoints.Posts.create_post": {"tf": 1}, "scrapermost.endpoints.Posts.create_ephemeral_post": {"tf": 1}, "scrapermost.endpoints.Posts.update_post": {"tf": 1}, "scrapermost.endpoints.Posts.patch_post": {"tf": 1}, "scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}, "scrapermost.endpoints.Reactions": {"tf": 1}, "scrapermost.endpoints.Reactions.create_reaction": {"tf": 1}, "scrapermost.endpoints.Roles": {"tf": 1}, "scrapermost.endpoints.Roles.patch_role": {"tf": 1}, "scrapermost.endpoints.Status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.update_user_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Status.get_user_statuses_by_id": {"tf": 1.4142135623730951}, "scrapermost.endpoints.System": {"tf": 1.7320508075688772}, "scrapermost.endpoints.System.send_test_email": {"tf": 1}, "scrapermost.endpoints.System.update_configuration": {"tf": 1}, "scrapermost.endpoints.System.test_aws_s3_connection": {"tf": 1}, "scrapermost.endpoints.Teams": {"tf": 2}, "scrapermost.endpoints.Teams.update_team": {"tf": 1}, "scrapermost.endpoints.Teams.patch_team": {"tf": 1}, "scrapermost.endpoints.Teams.search_teams": {"tf": 1}, "scrapermost.endpoints.Teams.update_scheme_derived_roles_of_team_member": {"tf": 1}, "scrapermost.endpoints.Users": {"tf": 4.795831523312719}, "scrapermost.endpoints.Users.login_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_ids": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.get_users_by_usernames": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_users": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.patch_user": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_role": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_active_status": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.reset_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.check_mfa": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_password": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_password_reset_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.revoke_user_session": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.attach_mobile_device": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.verify_user_email": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.send_verification_mail": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.switch_login_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.create_user_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.disable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.enable_personal_access_token": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.search_tokens": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Users.update_user_authentication_method": {"tf": 1.4142135623730951}, "scrapermost.endpoints.Webhooks": {"tf": 2}, "scrapermost.endpoints.Webhooks.create_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_incoming_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.create_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.update_outgoing_hook": {"tf": 1}, "scrapermost.endpoints.Webhooks.call_webhook": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 90}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.endpoints.SAML": {"tf": 2}, "scrapermost.endpoints.SAML.upload_private_key": {"tf": 1}, "scrapermost.endpoints.SAML.remove_private_key": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"scrapermost.classes.EmbedMetadata.__init__": {"tf": 1}, "scrapermost.classes.FileMetadata.__init__": {"tf": 1}, "scrapermost.classes.Post.__init__": {"tf": 1}, "scrapermost.events.Hello.__init__": {"tf": 1}, "scrapermost.events.PostEdited.__init__": {"tf": 1}, "scrapermost.events.Posted.__init__": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {"scrapermost.endpoints.SAML": {"tf": 1}, "scrapermost.endpoints.SAML.get_certificate_status": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1.4142135623730951}, "scrapermost.driver.websocket.Websocket.connect": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1.7320508075688772}, "scrapermost.driver.websocket.Websocket": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}, "w": {"docs": {"scrapermost.driver.options.DriverOptions": {"tf": 1}, "scrapermost.driver.websocket.Websocket": {"tf": 1}}, "df": 2}}, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"scrapermost.endpoints.Posts.search_for_team_posts": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"scrapermost.endpoints.Teams.import_team_from_other_app": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();